{"level":"info","message":"Request started","requestId":"3bbd49c5-8d34-4f9b-b08a-59e78277c9bc"}
{"level":"info","message":"[\n"}
{"level":"info","message":{"body":{"componentId":"InstagramProfile_G0tJA","query":"instagram profile"},"method":"POST","url":"/component/iterate"}}
{"level":"info","message":[{"content":"Library components can be used while making the new React component\n\nSuggested library component (1/9) : Avatar - The Avatar component is a versatile UI element representing a user with profile pictures, initials, or a fallback icon. It adds a personal touch to the user interface, making it more engaging.\nSuggested usage : To display the profile picture of the Instagram user.\n\n\n# Avatar can be imported into the new component like this:\n```tsx\nimport {\n  Avatar,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage\n} from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Avatar can be used inside the new component:\n```tsx\n<AvatarGroup>\n  <Avatar>\n    <AvatarFallbackText />\n    <AvatarImage />\n    <AvatarBadge />\n  </Avatar>\n</AvatarGroup>\n```\n\n---\n\n# full code examples of React components that use Avatar :\navatar```\nimport React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-false-https://broken.link() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={false} uri={\"https://broken.link\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-false-https://broken.link;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (2/9) : Box - If you're looking for a flexible component to help with low-level layout needs, the Box component might be just what you need. With its customizable styles and props, it can be used to create a wide range of UI elements, from simple containers to complex layout structures.\nSuggested usage : To display the username, bio, follower count, following count, and post count.\n\n\n# Box can be imported into the new component like this:\n```tsx\nimport { Box } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Box can be used inside the new component:\n```tsx\n<Box />\n```\n\n---\n\n# full code examples of React components that use Box :\nbox```\nimport { Box, Text } from '@gluestack-ui/themed'\n\nconst Example = () => (\n  <Box bg='$primary500' p='$5'>\n    <Text color='white'>This is the Box</Text>\n  </Box>\n)\n```\n\nbox```\nimport React from 'react'\nimport {Center, Text, CheckIcon, Icon, HStack, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Heading, VStack, RemoveIcon, Box, FormControl} from '@gluestack-ui/themed'\n\nfunction CheckboxGroupBasic() {\nconst [values, setValues] = React.useState(['Label 1'])\n\n  return (\n<CheckboxGroup accessibilityLabel=\"Checkbox Group\" value={values} onChange={setValues} nativeID=\"checkbox-group\">\n      <Checkbox m=\"\\$2\" size=\"$1\" isInvalid=\"$1\" isIndeterminate value=\"Label 1\" aria-label=\"Label 1\" accessibilityLabel=\"Checkbox\" onChange={(isSelected: boolean) =>\n  \n  console.log(isSelected, '###')} nativeID=\"checkbox-1\">\n        <CheckboxIndicator mr=\"\\$2\">\n          <CheckboxIcon as={CheckIcon} />\n        </CheckboxIndicator>\n        <CheckboxLabel>Label 1</CheckboxLabel>\n      </Checkbox>\n      <Checkbox m=\"\\$2\" isInvalid=\"$1\" size=\"$1\" aria-label=\"Label 2\" value=\"Label 2\" accessibilityLabel=\"Checkbox\" onChange={(isSelected: boolean) =>\n  \n  console.log(isSelected, '###')} nativeID=\"checkbox-2\">\n        <CheckboxIndicator mr=\"\\$2\">\n          <CheckboxIcon as={CheckIcon} />\n        </CheckboxIndicator>\n        <CheckboxLabel>Label 2</CheckboxLabel>\n      </Checkbox>\n    </CheckboxGroup>\n  );\n}\n\nexport default CheckboxGroupBasic;\n```\n\nbox```\nimport {Text, Box} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction BoxBasic() {\n\n\n  return (\n<Box {...props} bg={`\\$\\${bg}`} h={h} w={w} justifyContent=\"center\" alignItems=\"center\">\n      <Text color=\"white\" fontWeight=\"\\$bold\">\n        BOX\n      </Text>\n    </Box>\n  );\n}\n\nexport default BoxBasic;\n```\n\nbox```\nimport {Box} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction BoxWithRef() {\nconst myRef = React.useRef<any>({})\nconst styleObj = {\n  borderWidth: 8,\n  borderRadius: 4,\n  borderColor: '#22D3EE'\n}\n\n  return (\n<Box {...props} sx={{\n  h: 100,\n  w: 100,\n  bg: '\\$red500'\n}} ref={myRef} />\n  );\n}\n\nexport default BoxWithRef;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (3/9) : Button - A button component is a graphical user interface element that enables users to act by clicking or tapping. It can be customized in size, shape, color, and behavior to fit the design of the application or website.\nSuggested usage : To provide a feature allowing other users to follow this Instagram user.\n\n\n# Button can be imported into the new component like this:\n```tsx\nimport {\n  Button,\n  ButtonGroup,\n  ButtonText,\n  ButtonSpinner,\n  ButtonIcon\n} from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Button can be used inside the new component:\n```tsx\n<ButtonGroup>\n  <Button>\n    <ButtonText />\n    <ButtonSpinner />\n    <ButtonIcon />\n  </Button>\n</ButtonGroup>\n```\n\n---\n\n# full code examples of React components that use Button :\nbutton```\nimport {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-outline-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-outline-isDisabled;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (4/9) : HStack - HStack arranges its child elements horizontally, making it a suitable layout component for creating a row of items. It is worth noting that Row is just an alternative name for HStack.\nSuggested usage : To display the user's Instagram picture posts as thumbnails.\n\n\n# HStack can be imported into the new component like this:\n```tsx\nimport { HStack } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how HStack can be used inside the new component:\n```tsx\n<HStack />\n```\n\n---\n\n# full code examples of React components that use HStack :\nhstack```\nimport { HStack } from '@gluestack-ui/themed'\n\nconst ExampleHStack = () => (\n  <HStack>\n    <Box w='$20' h='$20' bg='$blue300' />\n    <Box w='$20' h='$20' bg='$blue400' />\n    <Box w='$20' h='$20' bg='$blue500' />\n  </HStack>\n)\n```\n\nhstack```\nconst ExampleHStack = () => (\n  <HStack space='md' reversed>\n    <Box w='$20' h='$20' bg='$blue300' />\n    <Box w='$20' h='$20' bg='$blue400' />\n    <Box w='$20' h='$20' bg='$blue500' />\n  </HStack>\n)\n```\n\nhstack```\nimport React from 'react'\nimport {HStack, Box} from '@gluestack-ui/themed'\n\nfunction HStackBasicHStack() {\n\n\n  return (\n<HStack space={space} mt=\"\\$5\" reversed={reversed} space={\"md\"}>\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue300'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue400'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue500'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue600'\n  }} />\n    </HStack>\n  );\n}\n\nexport default HStackBasicHStack;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (5/9) : Icon - Icons are often used to enhance the usability and accessibility of digital products by providing users with clear and intuitive visual cues. It serves as an intuitive and easily recognizable way to communicate with users.\nSuggested usage : To show the enlarged version of the clicked image.\n\n\n# Icon can be imported into the new component like this:\n```tsx\nimport { Icon } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Icon can be used inside the new component:\n```tsx\n<Icon />\n```\n\n---\n\n# full code examples of React components that use Icon :\nicon```\nimport React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-SearchIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"SearchIcon\"} />\n  );\n}\n\nexport default IconBasic-SearchIcon;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (6/9) : Image - With the Image component, you can enhance the look and feel of your app or website by incorporating compelling imagery.\nSuggested usage : To have a close button on the Modal.\n\n\n# Image can be imported into the new component like this:\n```tsx\nimport { Image } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Image can be used inside the new component:\n```tsx\n<Image source={source} />\n```\n\n---\n\n# full code examples of React components that use Image :\nimage```\nimport React from 'react'\nimport { Image } from '@gluestack-ui/themed'\n\nconst ImageBasic = ({\n  uri = 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n}: any) => {\n  return (\n    <Image\n      size='md'\n      source={{\n        uri: uri\n      }}\n    />\n  )\n}\n```\n\nimage```\nimport React from 'react'\nimport {Image} from '@gluestack-ui/themed'\n\nfunction ImageBasic() {\n\n\n  return (\n<Image size=\"md\" source={{\n  uri: uri\n}} />\n  );\n}\n\nexport default ImageBasic;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (7/9) : Modal - A Modal is a window on top of the primary content to draw the user's attention to important information or actions. It provides a focused and interruptive way to interact with the application.\nSuggested usage : For vertical alignment of components like avatar, text, and button.\n\n\n# Modal can be imported into the new component like this:\n```tsx\nimport { Modal } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Modal can be used inside the new component:\n```tsx\n<Modal>\n  <ModalBackdrop />\n  <ModalContent>\n    <ModalHeader>\n      <ModalCloseButton></ModalCloseButton>\n    </ModalHeader>\n    <ModalBody />\n    <ModalFooter />\n  </ModalContent>\n</Modal>\n```\n\n---\n\n# full code examples of React components that use Modal :\nmodal```\nimport React from 'react'\nimport {Center, Button, ButtonText, CloseIcon, Text, Icon, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, VStack, HStack, Heading} from '@gluestack-ui/themed'\n\nfunction MultipleModals-full() {\nconst [showModal, setShowModal] = React.useState(false)\nconst [showModal2, setShowModal2] = React.useState(false)\n\n  return (\n<>\n      <Center>\n        <Button onPress={() => setShowModal(true)}>\n          <ButtonText>Button</ButtonText>\n        </Button>\n      </Center>\n\n      <Modal isOpen={showModal} onClose={() => {\n    setShowModal(false);\n  }} size={\"full\"}>\n        <ModalBackdrop />\n        <ModalContent>\n          <ModalHeader>\n            <Heading>Order</Heading>\n            <ModalCloseButton>\n              <Icon as={CloseIcon} />\n            </ModalCloseButton>\n          </ModalHeader>\n          <ModalBody>\n            <VStack space=\"sm\">\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Sub Total</Text>\n                <Text color=\"\\$blueGray400\">\\$298.77</Text>\n              </HStack>\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Tax</Text>\n                <Text color=\"\\$blueGray400\">\\$38.84</Text>\n              </HStack>\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Total Amount</Text>\n                <Text color=\"\\$green500\">\\$337.61</Text>\n              </HStack>\n            </VStack>\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"outline\" action=\"secondary\" onPress={() => {\n          setShowModal(false);\n        }} sx={{\n          mr: '\\$3'\n        }}>\n              <ButtonText>Cancel</ButtonText>\n            </Button>\n            <Button onPress={() => {\n          setShowModal2(true);\n        }}>\n              <ButtonText>Continue</ButtonText>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n\n      <Modal isOpen={showModal2} onClose={() => {\n    setShowModal2(false);\n  }}>\n        <ModalBackdrop />\n        <ModalContent {...props}>\n          <ModalHeader>\n            <Heading>Order</Heading>\n            <ModalCloseButton>\n              <Icon as={CloseIcon} />\n            </ModalCloseButton>\n          </ModalHeader>\n          <ModalBody>\n            <Center h={100}>\n              <Heading>Second Modal</Heading>\n            </Center>\n          </ModalBody>\n          <ModalFooter>\n            <Button onPress={() => {\n          setShowModal2(false);\n        }}>\n              <ButtonText>Cancel</ButtonText>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default MultipleModals-full;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (8/9) : Text - Looking to add text to your gluestack-ui project? Check out our text component, which supports paragraphs and other formatting options.\nSuggested usage : For horizontal alignment of follower count, following count, and post count.\n\n\n# Text can be imported into the new component like this:\n```tsx\nimport { Text } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Text can be used inside the new component:\n```tsx\n<Text>Text</Text>\n```\n\n---\n\n# full code examples of React components that use Text :\ntext```\nimport React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-black() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"black\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-black;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (9/9) : VStack - VStack organizes items vertically in a layout. Alternatively, you can use Column as an alias for VStack to achieve the same layout.\nSuggested usage : To act as containers for different sections of components.\n\n\n# VStack can be imported into the new component like this:\n```tsx\nimport { VStack } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how VStack can be used inside the new component:\n```tsx\n<VStack />\n```\n\n---\n\n# full code examples of React components that use VStack :\nvstack```\nimport { VStack } from '@gluestack-ui/themed'\n\nconst VstackExample = () => (\n  <VStack>\n    <Box bg='primary.500' w='100%' h='40px' />\n    <Box bg='primary.500' w='100%' h='40px' />\n    <Box bg='primary.500' w='100%' h='40px' />\n  </VStack>\n)\n```\n\nvstack```\nimport React from 'react'\nimport {VStack, Box} from '@gluestack-ui/themed'\n\nfunction VStackBasicVStack() {\n\n\n  return (\n<VStack space={space}\n\nsx={{\n  justifyContent: 'center',\n  alignItems: 'center'\n}} reversed={reversed} space={\"md\"}>\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue300'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue400'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue500'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue600'\n  }} />\n    </VStack>\n  );\n}\n\nexport default VStackBasicVStack;\n```","role":"user"},{"content":"The style for this library uses the following ways be careful ans use only the style for this libraryBorder\nxs: Represents an extra-small border radius.\nsm: Represents a small border radius.\nmd: Represents a medium border radius.\nlg: Represents a large border radius.\nxl: Represents an extra-large border radius.\n2xl: Represents a twice-extra-large border radius.\n3xl: Represents a thrice-extra-large border radius.\nfull: Represents a full border radius, creating a circular or fully rounded appearance.\nplatform\n\n```json\n{\n  \"platforms\": [\n    {\n      \"selector\": \"_android\",\n      \"description\": \"Same as the component. Passed props will be applied on Android.\"\n    },\n    {\n      \"selector\": \"_ios\",\n      \"description\": \"Same as the component. Passed props will be applied on iOS.\"\n    },\n    {\n      \"selector\": \"_web\",\n      \"description\": \"Same as the component. Passed props will be applied on web.\"\n    }\n  ]\n}\n```\npositions\n\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"position\",\n      \"cssEquivalent\": \"position\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"zIndex\",\n      \"cssEquivalent\": \"z-index\",\n      \"themeKey\": \"zIndices\"\n    },\n    {\n      \"abbreviation\": \"top\",\n      \"cssEquivalent\": \"top\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"right\",\n      \"cssEquivalent\": \"right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"bottom\",\n      \"cssEquivalent\": \"bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"left\",\n      \"cssEquivalent\": \"left\",\n      \"themeKey\": \"space\"\n    }\n  ]\n}\n```\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"hardShadow\",\n      \"cssEquivalent\": \"box-shadow\",\n      \"themeKey\": \"shadows\"\n    },\n    {\n      \"abbreviation\": \"softShadow\",\n      \"cssEquivalent\": \"box-shadow\",\n      \"themeKey\": \"shadows\"\n    }\n  ]\n}\n```\n## Sizes\n\nThe sizes key allows you to customize the global sizing scale for your project. By default, these spacing values can be referenced by the padding, margin, and top, left, right, and bottom props.\n\n### Sizes Tokens\n\n```json\n[\n  { \"value\": 0, \"representation\": \"0px\" },\n  { \"value\": 1, \"representation\": \"0.5\" },\n  { \"value\": 2, \"representation\": \"4px\" },\n  { \"value\": 3, \"representation\": \"6px\" },\n  { \"value\": 4, \"representation\": \"8px\" },\n  { \"value\": 5, \"representation\": \"10px\" },\n  { \"value\": 6, \"representation\": \"12px\" },\n  { \"value\": 7, \"representation\": \"14px\" },\n  { \"value\": 8, \"representation\": \"16px\" },\n  { \"value\": 9, \"representation\": \"18px\" },\n  { \"value\": 10, \"representation\": \"20px\" },\n  { \"value\": 11, \"representation\": \"24px\" },\n  { \"value\": 12, \"representation\": \"28px\" },\n  { \"value\": 16, \"representation\": \"32px\" },\n  { \"value\": 20, \"representation\": \"36px\" },\n  { \"value\": 24, \"representation\": \"40px\" },\n  { \"value\": 32, \"representation\": \"44px\" },\n  { \"value\": 40, \"representation\": \"48px\" },\n  { \"value\": 48, \"representation\": \"64px\" },\n  { \"value\": 56, \"representation\": \"80px\" },\n  { \"value\": 64, \"representation\": \"96px\" },\n  { \"value\": 72, \"representation\": \"128px\" },\n  { \"value\": 80, \"representation\": \"160px\" },\n  { \"value\": 96, \"representation\": \"192px\" },\n  { \"value\": \"1/2\", \"representation\": \"50%\" },\n  { \"value\": \"1/3\", \"representation\": \"33.333%\" },\n  { \"value\": \"2/3\", \"representation\": \"66.666%\" },\n  { \"value\": \"1/4\", \"representation\": \"25%\" },\n  { \"value\": \"2/4\", \"representation\": \"50%\" },\n  { \"value\": \"3/4\", \"representation\": \"75%\" },\n  { \"value\": \"1/5\", \"representation\": \"20%\" },\n  { \"value\": \"2/5\", \"representation\": \"40%\" },\n  { \"value\": \"3/5\", \"representation\": \"60%\" },\n  { \"value\": \"4/5\", \"representation\": \"80%\" },\n  { \"value\": \"1/6\", \"representation\": \"16.666%\" },\n  { \"value\": \"2/6\", \"representation\": \"33.333%\" },\n  { \"value\": \"3/6\", \"representation\": \"50%\" },\n  { \"value\": \"4/6\", \"representation\": \"66.666%\" },\n  { \"value\": \"5/6\", \"representation\": \"83.333%\" },\n  { \"value\": \"full\", \"representation\": \"100%\" }\n]\n```\n## Space\n\nThe space key allows you to customize the global spacing and sizing scale for your project. By default, these spacing values can be referenced by the padding, margin, and top, left, right, and bottom props.\n\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"m\",\n      \"cssEquivalent\": \"margin\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mt\",\n      \"cssEquivalent\": \"margin-top\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mr\",\n      \"cssEquivalent\": \"margin-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mb\",\n      \"cssEquivalent\": \"margin-bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"ml\",\n      \"cssEquivalent\": \"margin-left\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mx\",\n      \"cssEquivalent\": \"margin-left and margin-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"my\",\n      \"cssEquivalent\": \"margin-top and margin-bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"p\",\n      \"cssEquivalent\": \"padding\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pt\",\n      \"cssEquivalent\": \"padding-top\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pr\",\n      \"cssEquivalent\": \"padding-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pb\",\n      \"cssEquivalent\": \"padding-bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pl\",\n      \"cssEquivalent\": \"padding-left\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"px\",\n      \"cssEquivalent\": \"padding-left and padding-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"py\",\n      \"cssEquivalent\": \"padding-top and padding-bottom\",\n      \"themeKey\": \"space\"\n    }\n  ]\n}\n```\nTypography\nTo manage Typography options, the tokens object supports the following keys:\nfonts (font families)\nfontSizes\nfontWeights\nlineHeights\nletterSpacings\n\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"FontFamily\",\n      \"cssEquivalent\": \"font-family\",\n      \"themeKey\": \"fonts\"\n    },\n    {\n      \"abbreviation\": \"FontSize\",\n      \"cssEquivalent\": \"font-size\",\n      \"themeKey\": \"fontSizes\"\n    },\n    {\n      \"abbreviation\": \"fontWeight\",\n      \"cssEquivalent\": \"font-weight\",\n      \"themeKey\": \"fontWeights\"\n    },\n    {\n      \"abbreviation\": \"lineHeight\",\n      \"cssEquivalent\": \"line-height\",\n      \"themeKey\": \"lineHeights\"\n    },\n    {\n      \"abbreviation\": \"letterSpacing\",\n      \"cssEquivalent\": \"letter-spacing\",\n      \"themeKey\": \"letterSpacings\"\n    },\n    {\n      \"abbreviation\": \"textAlign\",\n      \"cssEquivalent\": \"text-align\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"fontStyle\",\n      \"cssEquivalent\": \"font-style\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"textTransform\",\n      \"cssEquivalent\": \"text-transform\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"textDecoration\",\n      \"cssEquivalent\": \"text-decoration\",\n      \"themeKey\": \"-\"\n    }\n  ]\n}\n```\n","role":"user"}]}
