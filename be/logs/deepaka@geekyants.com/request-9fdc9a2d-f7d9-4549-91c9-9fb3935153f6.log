{"level":"info","message":"Request started","requestId":"9fdc9a2d-f7d9-4549-91c9-9fb3935153f6"}
{"level":"info","message":"[\n"}
{"level":"info","message":{"body":{"query":"Instagram profile"},"email":"deepaka@geekyants.com","method":"POST","url":"/component/new"}}
{"level":"info","message":{"component_design":{"new_component_description":"The InstagramProfileComponent will display a user's Instagram profile information in a stylized manner. It will feature the user's profile picture, name, bio, follow stats (followers, following, and post count), and a grid of their recent posts. Optionally, it can include action buttons such as 'follow' and 'message', as well as a dropdown for profile options. The user's profile picture (Avatar) will be prominently displayed alongside their username and bio. Their follow stats (Text) will be listed neatly below this, and their recent posts (Image) will be displayed as small thumbnails in a grid formation. If the optional action buttons are included, they will be located next to the user's username, and the profile options dropdown (Popover) will be in the top right corner of the component.","new_component_icons_elements":{"does_new_component_need_icons_elements":true,"if_so_what_new_component_icons_elements_are_needed":["AtSignIcon","ChevronDownIcon","PaperclipIcon"]},"new_component_name":"InstagramProfileComponent","use_library_components":[{"library_component_name":"Avatar","library_component_usage_reason":"To display the user's profile picture"},{"library_component_name":"Text","library_component_usage_reason":"To display the user's name, bio, and follow stats"},{"library_component_name":"Image","library_component_usage_reason":"To display a grid of the user's recent posts"},{"library_component_name":"Button","library_component_usage_reason":"To provide optional 'follow' and 'message' action buttons"},{"library_component_name":"Popover","library_component_usage_reason":"To provide a dropdown for profile options"}]},"context":[{"content":"Your task is to design a new React component for a web app, according to the user's request.\nIf you judge it is relevant to do so, you can specify pre-made library components to use in the task.\nYou can also specify the use of icons if you see that the user's request requires it.","role":"system"},{"content":"Multiple library components can be used while creating a new component in order to help you do a better design job, faster.\n\nAVAILABLE LIBRARY COMPONENTS:\n```\nAlertDialog : AlertDialog effectively interrupts a user's flow and prompts them to take a specific action. It's commonly used for mandatory confirmations or call-to-actions;\nSlider Alert : Alerts are used to communicate the status of a system, feature, or page. They indicate a specific state that may require attention from the user;\nAvatar : The Avatar component is a versatile UI element representing a user with profile pictures, initials, or a fallback icon. It adds a personal touch to the user interface, making it more engaging;\nBadge : The badge component lets you quickly and easily add status indicators to your interface for improved usability. They are designed to be attention-grabbing and quickly convey important information;\nBox : If you're looking for a flexible component to help with low-level layout needs, the Box component might be just what you need. With its customizable styles and props, it can be used to create a wide range of UI elements, from simple containers to complex layout structures;\nButton : A button component is a graphical user interface element that enables users to act by clicking or tapping. It can be customized in size, shape, color, and behavior to fit the design of the application or website;\nCenter : When you need to center-align content, the Center component comes in handy. It is a layout component that can be used with other components to create complex layouts and positioning;\nCheckbox : Whether you're building a simple form or a complex data collection system, the Checkbox component offers a user-friendly way for users to select multiple options from a list;\nDivider : Revamp your content organization with the Divider component! Use it to visually separate different sections of a list or group for a more structured and easy-to-read interface;\nFab : The Floating Action Button (FAB) is a dynamic button that stays visible and provides access to a primary action throughout the user's journey in the application. It is a powerful UI element that adds a touch of elegance and convenience to the user experience;\nFormControl : By using FormControl, developers can provide important context to form elements. This context can include whether the element is invalid, disabled, or required;\nHeading : Heading component gives you the ability to create headings for your page with different sizes and symantics from h1 to h6;\nHStack : HStack arranges its child elements horizontally, making it a suitable layout component for creating a row of items. It is worth noting that Row is just an alternative name for HStack;\nIcon : Icons are often used to enhance the usability and accessibility of digital products by providing users with clear and intuitive visual cues. It serves as an intuitive and easily recognizable way to communicate with users;\nImage : With the Image component, you can enhance the look and feel of your app or website by incorporating compelling imagery;\nInput : The Input component is your go-to tool for gathering user input in a sleek and user-friendly text field. Whether you're designing a simple login form or a complex search feature, this component has got you covered;\nLink : With links, users can navigate seamlessly throughout a website. This component has a hyperlinked appearance for a user-friendly experience;\nModal : A Modal is a window on top of the primary content to draw the user's attention to important information or actions. It provides a focused and interruptive way to interact with the application;\nPopover : Popovers often provide contextual information or quick access to related actions without requiring the user to navigate to a different page or view;\nPressable : By providing access to hover, pressed, and focus events, Pressable serves as a more flexible alternative to buttons at a lower level of abstraction. It is a useful primitive for advanced customization needs;\nProgress : The Progress component is designed to display the progress of a task that involves multiple steps and takes some time to complete. It helps users stay informed about the current status of a lengthy process;\nProvider : GluestackUIProvider component that can be used to configure the library. It consists of StyledProvider, OverlayProvider and ToastProvider internally;\nRadio : The Radio component presents users with predefined choices and enables them to select only one option. It is commonly used for providing a single-choice selection in forms or surveys;\nSlider : The Slider component enables an intuitive selection of values within a designated range. Users can easily adjust their selection by sliding a visual indicator along the track;\nSpinner : Spinners are designed to give visual cues to users that an action is being processed or that a change or result is expected. They are useful for improving the user experience by reducing frustration and uncertainty;\nSwitch : The Switch component offers a stylish alternative to the Checkbox, allowing users to enable or disable an option with a sleek sliding motion. This component is perfect for adding a touch of elegance and interactivity to your user interface;\nText : Looking to add text to your gluestack-ui project? Check out our text component, which supports paragraphs and other formatting options;\nTextarea : The Textarea component is designed to accommodate larger amounts of text input. It allows multi-line input and can be easily customized to fit the user's needs;\nToast : Toast is a component that can display alerts, notifications, or messages on top of an overlay layer. It is commonly used to inform users of important information or actions;\nTooltip : Whether you need to provide helpful hints to new users or display extra details for power users, the Tooltip component is a simple and effective way;\nVStack : VStack organizes items vertically in a layout. Alternatively, you can use Column as an alias for VStack to achieve the same layout;\n```","role":"user"},{"content":"Restrict the icon usage to the following listAddIcon\nArrowLeftIcon\nArrowRightIcon\nArrowUpIcon\nArrowDownIcon\nChevronsLeftIcon\nChevronsRightIcon\nChevronsUpDownIcon\nAtSignIcon\nPaperclipIcon\nBellIcon\nCalendarDaysIcon\nMessageCircleIcon\nCheckIcon\nChevronDownIcon\nChevronUpIcon\nChevronLeftIcon\nChevronRightIcon\nCloseIcon\nCopyIcon\nTrashIcon\nDownloadIcon\nGripVerticalIcon\nEditIcon\nMailIcon\nExternalLinkIcon\nMenuIcon\nInfoIcon\nLinkIcon\nLockIcon\nRemoveIcon\nMoonIcon\nSlashIcon\nCheckCircleIcon\nPhoneIcon\nHelpCircleIcon\nRepeatIcon\nRepeat1Icon\nSearchIcon\nSettingsIcon\nLoaderIcon\nStarIcon\nSunIcon\nClockIcon\nUnlockIcon\nEyeIcon\nEyeOffIcon\nAlertCircleIcon\nCloseCircleIcon\nShareIcon\nCircleIcon\nFavouriteIcon\nGlobeIcon\nThreeDotsIcon\nPlayIcon\n```","role":"user"},{"content":"USER QUERY : \n```\nInstagram profile\n```\n\nYou are a creative designer who is very meticulous in work and designes visually appealing UI, design a component based on your expertises\n","role":"user"}],"email":"deepaka@geekyants.com","query":"Instagram profile"}}
{"level":"info","message":[{"content":"Library components can be used while making the new React component\n\nSuggested library component (1/5) : Avatar - The Avatar component is a versatile UI element representing a user with profile pictures, initials, or a fallback icon. It adds a personal touch to the user interface, making it more engaging.\nSuggested usage : To display the user's profile picture\n\n\n# Avatar can be imported into the new component like this:\n```tsx\nimport {\n  Avatar,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage\n} from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Avatar can be used inside the new component:\n```tsx\n<AvatarGroup>\n  <Avatar>\n    <AvatarFallbackText />\n    <AvatarImage />\n    <AvatarBadge />\n  </Avatar>\n</AvatarGroup>\n```\n\n---\n\n# full code examples of React components that use Avatar :\navatar```\nimport React from 'react'\nimport {\n  Avatar,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage\n} from '@gluestack-ui/themed'\n\nexport default function AvatarExample() {\n  return (\n    <Avatar bgColor='$amber600' {...props}>\n      <AvatarFallbackText>Sandeep Srivastava</AvatarFallbackText>\n    </Avatar>\n  )\n}\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (2/5) : Button - A button component is a graphical user interface element that enables users to act by clicking or tapping. It can be customized in size, shape, color, and behavior to fit the design of the application or website.\nSuggested usage : To display the user's name, bio, and follow stats\n\n\n# Button can be imported into the new component like this:\n```tsx\nimport {\n  Button,\n  ButtonGroup,\n  ButtonText,\n  ButtonSpinner,\n  ButtonIcon\n} from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Button can be used inside the new component:\n```tsx\n<ButtonGroup>\n  <Button>\n    <ButtonText />\n    <ButtonSpinner />\n    <ButtonIcon />\n  </Button>\n</ButtonGroup>\n```\n\n---\n\n# full code examples of React components that use Button :\nbutton```\nimport {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-outline-isDisabled() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-outline-isDisabled;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (3/5) : Image - With the Image component, you can enhance the look and feel of your app or website by incorporating compelling imagery.\nSuggested usage : To display a grid of the user's recent posts\n\n\n# Image can be imported into the new component like this:\n```tsx\nimport { Image } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Image can be used inside the new component:\n```tsx\n<Image source={source} />\n```\n\n---\n\n# full code examples of React components that use Image :\nimage```\nimport React from 'react'\nimport { Image } from '@gluestack-ui/themed'\n\nconst ImageBasic = ({\n  uri = 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n}: any) => {\n  return (\n    <Image\n      size='md'\n      source={{\n        uri: uri\n      }}\n    />\n  )\n}\n```\n\nimage```\nimport React from 'react'\nimport {Image} from '@gluestack-ui/themed'\n\nfunction ImageBasic() {\n\n\n  return (\n<Image size=\"md\" source={{\n  uri: uri\n}} />\n  );\n}\n\nexport default ImageBasic;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (4/5) : Popover - Popovers often provide contextual information or quick access to related actions without requiring the user to navigate to a different page or view.\nSuggested usage : To provide optional 'follow' and 'message' action buttons\n\n\n# Popover can be imported into the new component like this:\n```tsx\nimport { Popover } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Popover can be used inside the new component:\n```tsx\n<Popover>\n  <PopoverBackdrop />\n  <PopoverContent>\n    <PopoverHeader>\n      <PopoverCloseButton />\n    </PopoverHeader>\n    <PopoverBody />\n    <PopoverFooter />\n  </PopoverContent>\n</Popover>\n```\n\n---\n\n# full code examples of React components that use Popover :\npopover```\nimport React, { useState } from 'react'\nimport {\n        Box,\n        Heading,\n        Text: PopoverText,\n        Popover,\n        PopoverBackdrop,\n        PopoverContent,\n        PopoverHeader,\n        PopoverBody,\n        PopoverFooter,\n        PopoverCloseButton,\n        Pressable,\n        Button,\n        ButtonText,\n        HStack,\n        VStack,\n        CircleIcon,\n        PhoneIcon,\n        Clock3Icon,\n        MailIcon,\n        Avatar,\n        AvatarFallbackText,\n        Icon,\n} from '@gluestack-ui/themed'\n\nconst PopoverExample = () => {\n   return <Box h='$80'>\n        {\\/* PhoneIcon, Clock3Icon, MailIcon are imported from 'lucide-react-native' *\\/}\n          <Popover\n            trigger={(triggerProps) => {\n              return (\n                <HStack>\n                  <Pressable\n                    borderRadius='$full'\n                    {...triggerProps}\n                  >\n                    <Avatar bg='$indigo600'>\n                      <AvatarFallbackText >\n                        Kevin James\n                      </AvatarFallbackText>\n                    </Avatar>\n                  </Pressable>\n                  <VStack ml='$2.5'>\n                    <Heading fontSize='$md'>\n                      Kevin James\n                    </Heading>\n                    <Text size='sm'>\n                      Hi Rachel, What’s up?\n                    </Text>\n                  </VStack>\n                </HStack>\n              );\n            }}\n          >\n            <PopoverBackdrop/>\n            <PopoverContent w='$80'>\n              <PopoverHeader  px='$5' pt='$5'>\n                <HStack>\n                  <Avatar bg='$indigo600' >\n                    <AvatarFallbackText>\n                      Kevin James\n                    </AvatarFallbackText>\n                  </Avatar>\n                  <VStack ml='$2.5'>\n                    <Heading fontSize='$md'>\n                      Kevin James\n                    </Heading>\n                    <HStack alignItems='center'>\n                      <CircleIcon color='$green700' h='$2' w='$2'/>\n                      <Text size='sm'  pl='$1.5'>\n                        Active\n                      </Text>\n                    </HStack>\n                  </VStack>\n                </HStack>\n              </PopoverHeader>\n              <PopoverBody  px='$5' pb='$5'>\n                <VStack space='lg'>\n                  <VStack space='sm'>\n                    <HStack alignItems='center'>\n                      <Icon as={PhoneIcon} size='sm' />\n                      <Text size='sm'  ml='$1.5'>\n                        (603) 555-0123\n                      </Text>\n                    </HStack>\n                    <HStack alignItems='center'>\n                      <Icon as={Clock3Icon} size='sm'/>\n                      <Text size='sm'  ml='$1.5'>\n                        5:21 PM local time\n                      </Text>\n                    </HStack>\n                    <HStack alignItems='center'>\n                      <Icon as={MailIcon} size='sm'/>\n                      <Text size='sm'  ml='$1.5'>\n                        kevinjames@sample.com\n                      </Text>\n                    </HStack>\n                  </VStack>\n                  <Button bg='$darkBlue700' sx={{\n                    _dark:{\n                      bg:\"$darkBlue500\"\n                    }\n                  }}>\n                    <ButtonText>View Profile</ButtonText>\n                  </Button>\n                </VStack>\n              </PopoverBody>\n            </PopoverContent>\n          </Popover>\n        </Box>\n}\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (5/5) : Text - Looking to add text to your gluestack-ui project? Check out our text component, which supports paragraphs and other formatting options.\nSuggested usage : To provide a dropdown for profile options\n\n\n# Text can be imported into the new component like this:\n```tsx\nimport { Text } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Text can be used inside the new component:\n```tsx\n<Text>Text</Text>\n```\n\n---\n\n# full code examples of React components that use Text :\ntext```\nimport React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-light() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"light\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-light;\n```","role":"user"},{"content":"The style for this library uses the following ways be careful ans use only the style for this libraryBorder\nxs: Represents an extra-small border radius.\nsm: Represents a small border radius.\nmd: Represents a medium border radius.\nlg: Represents a large border radius.\nxl: Represents an extra-large border radius.\n2xl: Represents a twice-extra-large border radius.\n3xl: Represents a thrice-extra-large border radius.\nfull: Represents a full border radius, creating a circular or fully rounded appearance.\nplatform\n\n```json\n{\n  \"platforms\": [\n    {\n      \"selector\": \"_android\",\n      \"description\": \"Same as the component. Passed props will be applied on Android.\"\n    },\n    {\n      \"selector\": \"_ios\",\n      \"description\": \"Same as the component. Passed props will be applied on iOS.\"\n    },\n    {\n      \"selector\": \"_web\",\n      \"description\": \"Same as the component. Passed props will be applied on web.\"\n    }\n  ]\n}\n```\npositions\n\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"position\",\n      \"cssEquivalent\": \"position\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"zIndex\",\n      \"cssEquivalent\": \"z-index\",\n      \"themeKey\": \"zIndices\"\n    },\n    {\n      \"abbreviation\": \"top\",\n      \"cssEquivalent\": \"top\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"right\",\n      \"cssEquivalent\": \"right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"bottom\",\n      \"cssEquivalent\": \"bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"left\",\n      \"cssEquivalent\": \"left\",\n      \"themeKey\": \"space\"\n    }\n  ]\n}\n```\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"hardShadow\",\n      \"cssEquivalent\": \"box-shadow\",\n      \"themeKey\": \"shadows\"\n    },\n    {\n      \"abbreviation\": \"softShadow\",\n      \"cssEquivalent\": \"box-shadow\",\n      \"themeKey\": \"shadows\"\n    }\n  ]\n}\n```\n## Sizes\n\nThe sizes key allows you to customize the global sizing scale for your project. By default, these spacing values can be referenced by the padding, margin, and top, left, right, and bottom props.\n\n### Sizes Tokens\n\n```json\n[\n  { \"value\": 0, \"representation\": \"0px\" },\n  { \"value\": 1, \"representation\": \"0.5\" },\n  { \"value\": 2, \"representation\": \"4px\" },\n  { \"value\": 3, \"representation\": \"6px\" },\n  { \"value\": 4, \"representation\": \"8px\" },\n  { \"value\": 5, \"representation\": \"10px\" },\n  { \"value\": 6, \"representation\": \"12px\" },\n  { \"value\": 7, \"representation\": \"14px\" },\n  { \"value\": 8, \"representation\": \"16px\" },\n  { \"value\": 9, \"representation\": \"18px\" },\n  { \"value\": 10, \"representation\": \"20px\" },\n  { \"value\": 11, \"representation\": \"24px\" },\n  { \"value\": 12, \"representation\": \"28px\" },\n  { \"value\": 16, \"representation\": \"32px\" },\n  { \"value\": 20, \"representation\": \"36px\" },\n  { \"value\": 24, \"representation\": \"40px\" },\n  { \"value\": 32, \"representation\": \"44px\" },\n  { \"value\": 40, \"representation\": \"48px\" },\n  { \"value\": 48, \"representation\": \"64px\" },\n  { \"value\": 56, \"representation\": \"80px\" },\n  { \"value\": 64, \"representation\": \"96px\" },\n  { \"value\": 72, \"representation\": \"128px\" },\n  { \"value\": 80, \"representation\": \"160px\" },\n  { \"value\": 96, \"representation\": \"192px\" },\n  { \"value\": \"1/2\", \"representation\": \"50%\" },\n  { \"value\": \"1/3\", \"representation\": \"33.333%\" },\n  { \"value\": \"2/3\", \"representation\": \"66.666%\" },\n  { \"value\": \"1/4\", \"representation\": \"25%\" },\n  { \"value\": \"2/4\", \"representation\": \"50%\" },\n  { \"value\": \"3/4\", \"representation\": \"75%\" },\n  { \"value\": \"1/5\", \"representation\": \"20%\" },\n  { \"value\": \"2/5\", \"representation\": \"40%\" },\n  { \"value\": \"3/5\", \"representation\": \"60%\" },\n  { \"value\": \"4/5\", \"representation\": \"80%\" },\n  { \"value\": \"1/6\", \"representation\": \"16.666%\" },\n  { \"value\": \"2/6\", \"representation\": \"33.333%\" },\n  { \"value\": \"3/6\", \"representation\": \"50%\" },\n  { \"value\": \"4/6\", \"representation\": \"66.666%\" },\n  { \"value\": \"5/6\", \"representation\": \"83.333%\" },\n  { \"value\": \"full\", \"representation\": \"100%\" }\n]\n```\n## Space\n\nThe space key allows you to customize the global spacing and sizing scale for your project. By default, these spacing values can be referenced by the padding, margin, and top, left, right, and bottom props.\n\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"m\",\n      \"cssEquivalent\": \"margin\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mt\",\n      \"cssEquivalent\": \"margin-top\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mr\",\n      \"cssEquivalent\": \"margin-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mb\",\n      \"cssEquivalent\": \"margin-bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"ml\",\n      \"cssEquivalent\": \"margin-left\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mx\",\n      \"cssEquivalent\": \"margin-left and margin-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"my\",\n      \"cssEquivalent\": \"margin-top and margin-bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"p\",\n      \"cssEquivalent\": \"padding\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pt\",\n      \"cssEquivalent\": \"padding-top\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pr\",\n      \"cssEquivalent\": \"padding-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pb\",\n      \"cssEquivalent\": \"padding-bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pl\",\n      \"cssEquivalent\": \"padding-left\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"px\",\n      \"cssEquivalent\": \"padding-left and padding-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"py\",\n      \"cssEquivalent\": \"padding-top and padding-bottom\",\n      \"themeKey\": \"space\"\n    }\n  ]\n}\n```\nTypography\nTo manage Typography options, the tokens object supports the following keys:\nfonts (font families)\nfontSizes\nfontWeights\nlineHeights\nletterSpacings\n\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"FontFamily\",\n      \"cssEquivalent\": \"font-family\",\n      \"themeKey\": \"fonts\"\n    },\n    {\n      \"abbreviation\": \"FontSize\",\n      \"cssEquivalent\": \"font-size\",\n      \"themeKey\": \"fontSizes\"\n    },\n    {\n      \"abbreviation\": \"fontWeight\",\n      \"cssEquivalent\": \"font-weight\",\n      \"themeKey\": \"fontWeights\"\n    },\n    {\n      \"abbreviation\": \"lineHeight\",\n      \"cssEquivalent\": \"line-height\",\n      \"themeKey\": \"lineHeights\"\n    },\n    {\n      \"abbreviation\": \"letterSpacing\",\n      \"cssEquivalent\": \"letter-spacing\",\n      \"themeKey\": \"letterSpacings\"\n    },\n    {\n      \"abbreviation\": \"textAlign\",\n      \"cssEquivalent\": \"text-align\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"fontStyle\",\n      \"cssEquivalent\": \"font-style\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"textTransform\",\n      \"cssEquivalent\": \"text-transform\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"textDecoration\",\n      \"cssEquivalent\": \"text-decoration\",\n      \"themeKey\": \"-\"\n    }\n  ]\n}\n```\n","role":"user"}]}
{"level":"info","message":{"completion":"```tsx\nimport React from 'react'\nimport { Avatar, Button, Image, Popover, Text } from '@gluestack-ui/themed'\n\nconst InstagramProfileComponent = () => {\n  return (\n    <div>\n      <Avatar>\n        <img\n          src=\"https://via.placeholder.com/150\"\n          alt=\"profile\"\n        />\n      </Avatar>\n      <Text as=\"h2\">Username</Text>\n      <Text as=\"p\">Bio</Text>\n      <div>\n        <Text>Followers: 1000</Text>\n        <Text>Following: 500</Text>\n        <Text>Posts: 100</Text>\n      </div>\n      <div>\n        <Button>Follow</Button>\n        <Button>Message</Button>\n        <Popover>\n          <button>Options</button>\n          <div>\n            <button>Option 1</button>\n            <button>Option 2</button>\n            <button>Option 3</button>\n          </div>\n        </Popover>\n      </div>\n      <div>\n        <Image\n          src=\"https://via.placeholder.com/150\"\n          alt=\"post\"\n        />\n        <Image\n          src=\"https://via.placeholder.com/150\"\n          alt=\"post\"\n        />\n        <Image\n          src=\"https://via.placeholder.com/150\"\n          alt=\"post\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default InstagramProfileComponent;\n```","context":[{"content":"You are an experinced react devloper who can write code that satisfy all the coding standards and the UI you make is visually appealing.\nYour task is to write a new React component for a web app, according to the provided task details.\nIf you judge it is relevant to do so, you can use library components and icons.\n\nYou will write the full React component code, which should include all imports.Your generated code will be directly written to a .tsx React component file and used in production.","role":"system"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (1/5) : Avatar - The Avatar component is a versatile UI element representing a user with profile pictures, initials, or a fallback icon. It adds a personal touch to the user interface, making it more engaging.\nSuggested usage : To display the user's profile picture\n\n\n# Avatar can be imported into the new component like this:\n```tsx\nimport {\n  Avatar,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage\n} from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Avatar can be used inside the new component:\n```tsx\n<AvatarGroup>\n  <Avatar>\n    <AvatarFallbackText />\n    <AvatarImage />\n    <AvatarBadge />\n  </Avatar>\n</AvatarGroup>\n```\n\n---\n\n# full code examples of React components that use Avatar :\navatar```\nimport React from 'react'\nimport {\n  Avatar,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage\n} from '@gluestack-ui/themed'\n\nexport default function AvatarExample() {\n  return (\n    <Avatar bgColor='$amber600' {...props}>\n      <AvatarFallbackText>Sandeep Srivastava</AvatarFallbackText>\n    </Avatar>\n  )\n}\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (2/5) : Button - A button component is a graphical user interface element that enables users to act by clicking or tapping. It can be customized in size, shape, color, and behavior to fit the design of the application or website.\nSuggested usage : To display the user's name, bio, and follow stats\n\n\n# Button can be imported into the new component like this:\n```tsx\nimport {\n  Button,\n  ButtonGroup,\n  ButtonText,\n  ButtonSpinner,\n  ButtonIcon\n} from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Button can be used inside the new component:\n```tsx\n<ButtonGroup>\n  <Button>\n    <ButtonText />\n    <ButtonSpinner />\n    <ButtonIcon />\n  </Button>\n</ButtonGroup>\n```\n\n---\n\n# full code examples of React components that use Button :\nbutton```\nimport {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-outline-isDisabled() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-outline-isDisabled;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (3/5) : Image - With the Image component, you can enhance the look and feel of your app or website by incorporating compelling imagery.\nSuggested usage : To display a grid of the user's recent posts\n\n\n# Image can be imported into the new component like this:\n```tsx\nimport { Image } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Image can be used inside the new component:\n```tsx\n<Image source={source} />\n```\n\n---\n\n# full code examples of React components that use Image :\nimage```\nimport React from 'react'\nimport { Image } from '@gluestack-ui/themed'\n\nconst ImageBasic = ({\n  uri = 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n}: any) => {\n  return (\n    <Image\n      size='md'\n      source={{\n        uri: uri\n      }}\n    />\n  )\n}\n```\n\nimage```\nimport React from 'react'\nimport {Image} from '@gluestack-ui/themed'\n\nfunction ImageBasic() {\n\n\n  return (\n<Image size=\"md\" source={{\n  uri: uri\n}} />\n  );\n}\n\nexport default ImageBasic;\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (4/5) : Popover - Popovers often provide contextual information or quick access to related actions without requiring the user to navigate to a different page or view.\nSuggested usage : To provide optional 'follow' and 'message' action buttons\n\n\n# Popover can be imported into the new component like this:\n```tsx\nimport { Popover } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Popover can be used inside the new component:\n```tsx\n<Popover>\n  <PopoverBackdrop />\n  <PopoverContent>\n    <PopoverHeader>\n      <PopoverCloseButton />\n    </PopoverHeader>\n    <PopoverBody />\n    <PopoverFooter />\n  </PopoverContent>\n</Popover>\n```\n\n---\n\n# full code examples of React components that use Popover :\npopover```\nimport React, { useState } from 'react'\nimport {\n        Box,\n        Heading,\n        Text: PopoverText,\n        Popover,\n        PopoverBackdrop,\n        PopoverContent,\n        PopoverHeader,\n        PopoverBody,\n        PopoverFooter,\n        PopoverCloseButton,\n        Pressable,\n        Button,\n        ButtonText,\n        HStack,\n        VStack,\n        CircleIcon,\n        PhoneIcon,\n        Clock3Icon,\n        MailIcon,\n        Avatar,\n        AvatarFallbackText,\n        Icon,\n} from '@gluestack-ui/themed'\n\nconst PopoverExample = () => {\n   return <Box h='$80'>\n        {\\/* PhoneIcon, Clock3Icon, MailIcon are imported from 'lucide-react-native' *\\/}\n          <Popover\n            trigger={(triggerProps) => {\n              return (\n                <HStack>\n                  <Pressable\n                    borderRadius='$full'\n                    {...triggerProps}\n                  >\n                    <Avatar bg='$indigo600'>\n                      <AvatarFallbackText >\n                        Kevin James\n                      </AvatarFallbackText>\n                    </Avatar>\n                  </Pressable>\n                  <VStack ml='$2.5'>\n                    <Heading fontSize='$md'>\n                      Kevin James\n                    </Heading>\n                    <Text size='sm'>\n                      Hi Rachel, What’s up?\n                    </Text>\n                  </VStack>\n                </HStack>\n              );\n            }}\n          >\n            <PopoverBackdrop/>\n            <PopoverContent w='$80'>\n              <PopoverHeader  px='$5' pt='$5'>\n                <HStack>\n                  <Avatar bg='$indigo600' >\n                    <AvatarFallbackText>\n                      Kevin James\n                    </AvatarFallbackText>\n                  </Avatar>\n                  <VStack ml='$2.5'>\n                    <Heading fontSize='$md'>\n                      Kevin James\n                    </Heading>\n                    <HStack alignItems='center'>\n                      <CircleIcon color='$green700' h='$2' w='$2'/>\n                      <Text size='sm'  pl='$1.5'>\n                        Active\n                      </Text>\n                    </HStack>\n                  </VStack>\n                </HStack>\n              </PopoverHeader>\n              <PopoverBody  px='$5' pb='$5'>\n                <VStack space='lg'>\n                  <VStack space='sm'>\n                    <HStack alignItems='center'>\n                      <Icon as={PhoneIcon} size='sm' />\n                      <Text size='sm'  ml='$1.5'>\n                        (603) 555-0123\n                      </Text>\n                    </HStack>\n                    <HStack alignItems='center'>\n                      <Icon as={Clock3Icon} size='sm'/>\n                      <Text size='sm'  ml='$1.5'>\n                        5:21 PM local time\n                      </Text>\n                    </HStack>\n                    <HStack alignItems='center'>\n                      <Icon as={MailIcon} size='sm'/>\n                      <Text size='sm'  ml='$1.5'>\n                        kevinjames@sample.com\n                      </Text>\n                    </HStack>\n                  </VStack>\n                  <Button bg='$darkBlue700' sx={{\n                    _dark:{\n                      bg:\"$darkBlue500\"\n                    }\n                  }}>\n                    <ButtonText>View Profile</ButtonText>\n                  </Button>\n                </VStack>\n              </PopoverBody>\n            </PopoverContent>\n          </Popover>\n        </Box>\n}\n```","role":"user"},{"content":"Library components can be used while making the new React component\n\nSuggested library component (5/5) : Text - Looking to add text to your gluestack-ui project? Check out our text component, which supports paragraphs and other formatting options.\nSuggested usage : To provide a dropdown for profile options\n\n\n# Text can be imported into the new component like this:\n```tsx\nimport { Text } from '@gluestack-ui/themed'\n```\n\n---\n\n# examples of how Text can be used inside the new component:\n```tsx\n<Text>Text</Text>\n```\n\n---\n\n# full code examples of React components that use Text :\ntext```\nimport React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-light() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"light\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-light;\n```","role":"user"},{"content":"The style for this library uses the following ways be careful ans use only the style for this libraryBorder\nxs: Represents an extra-small border radius.\nsm: Represents a small border radius.\nmd: Represents a medium border radius.\nlg: Represents a large border radius.\nxl: Represents an extra-large border radius.\n2xl: Represents a twice-extra-large border radius.\n3xl: Represents a thrice-extra-large border radius.\nfull: Represents a full border radius, creating a circular or fully rounded appearance.\nplatform\n\n```json\n{\n  \"platforms\": [\n    {\n      \"selector\": \"_android\",\n      \"description\": \"Same as the component. Passed props will be applied on Android.\"\n    },\n    {\n      \"selector\": \"_ios\",\n      \"description\": \"Same as the component. Passed props will be applied on iOS.\"\n    },\n    {\n      \"selector\": \"_web\",\n      \"description\": \"Same as the component. Passed props will be applied on web.\"\n    }\n  ]\n}\n```\npositions\n\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"position\",\n      \"cssEquivalent\": \"position\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"zIndex\",\n      \"cssEquivalent\": \"z-index\",\n      \"themeKey\": \"zIndices\"\n    },\n    {\n      \"abbreviation\": \"top\",\n      \"cssEquivalent\": \"top\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"right\",\n      \"cssEquivalent\": \"right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"bottom\",\n      \"cssEquivalent\": \"bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"left\",\n      \"cssEquivalent\": \"left\",\n      \"themeKey\": \"space\"\n    }\n  ]\n}\n```\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"hardShadow\",\n      \"cssEquivalent\": \"box-shadow\",\n      \"themeKey\": \"shadows\"\n    },\n    {\n      \"abbreviation\": \"softShadow\",\n      \"cssEquivalent\": \"box-shadow\",\n      \"themeKey\": \"shadows\"\n    }\n  ]\n}\n```\n## Sizes\n\nThe sizes key allows you to customize the global sizing scale for your project. By default, these spacing values can be referenced by the padding, margin, and top, left, right, and bottom props.\n\n### Sizes Tokens\n\n```json\n[\n  { \"value\": 0, \"representation\": \"0px\" },\n  { \"value\": 1, \"representation\": \"0.5\" },\n  { \"value\": 2, \"representation\": \"4px\" },\n  { \"value\": 3, \"representation\": \"6px\" },\n  { \"value\": 4, \"representation\": \"8px\" },\n  { \"value\": 5, \"representation\": \"10px\" },\n  { \"value\": 6, \"representation\": \"12px\" },\n  { \"value\": 7, \"representation\": \"14px\" },\n  { \"value\": 8, \"representation\": \"16px\" },\n  { \"value\": 9, \"representation\": \"18px\" },\n  { \"value\": 10, \"representation\": \"20px\" },\n  { \"value\": 11, \"representation\": \"24px\" },\n  { \"value\": 12, \"representation\": \"28px\" },\n  { \"value\": 16, \"representation\": \"32px\" },\n  { \"value\": 20, \"representation\": \"36px\" },\n  { \"value\": 24, \"representation\": \"40px\" },\n  { \"value\": 32, \"representation\": \"44px\" },\n  { \"value\": 40, \"representation\": \"48px\" },\n  { \"value\": 48, \"representation\": \"64px\" },\n  { \"value\": 56, \"representation\": \"80px\" },\n  { \"value\": 64, \"representation\": \"96px\" },\n  { \"value\": 72, \"representation\": \"128px\" },\n  { \"value\": 80, \"representation\": \"160px\" },\n  { \"value\": 96, \"representation\": \"192px\" },\n  { \"value\": \"1/2\", \"representation\": \"50%\" },\n  { \"value\": \"1/3\", \"representation\": \"33.333%\" },\n  { \"value\": \"2/3\", \"representation\": \"66.666%\" },\n  { \"value\": \"1/4\", \"representation\": \"25%\" },\n  { \"value\": \"2/4\", \"representation\": \"50%\" },\n  { \"value\": \"3/4\", \"representation\": \"75%\" },\n  { \"value\": \"1/5\", \"representation\": \"20%\" },\n  { \"value\": \"2/5\", \"representation\": \"40%\" },\n  { \"value\": \"3/5\", \"representation\": \"60%\" },\n  { \"value\": \"4/5\", \"representation\": \"80%\" },\n  { \"value\": \"1/6\", \"representation\": \"16.666%\" },\n  { \"value\": \"2/6\", \"representation\": \"33.333%\" },\n  { \"value\": \"3/6\", \"representation\": \"50%\" },\n  { \"value\": \"4/6\", \"representation\": \"66.666%\" },\n  { \"value\": \"5/6\", \"representation\": \"83.333%\" },\n  { \"value\": \"full\", \"representation\": \"100%\" }\n]\n```\n## Space\n\nThe space key allows you to customize the global spacing and sizing scale for your project. By default, these spacing values can be referenced by the padding, margin, and top, left, right, and bottom props.\n\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"m\",\n      \"cssEquivalent\": \"margin\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mt\",\n      \"cssEquivalent\": \"margin-top\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mr\",\n      \"cssEquivalent\": \"margin-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mb\",\n      \"cssEquivalent\": \"margin-bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"ml\",\n      \"cssEquivalent\": \"margin-left\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"mx\",\n      \"cssEquivalent\": \"margin-left and margin-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"my\",\n      \"cssEquivalent\": \"margin-top and margin-bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"p\",\n      \"cssEquivalent\": \"padding\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pt\",\n      \"cssEquivalent\": \"padding-top\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pr\",\n      \"cssEquivalent\": \"padding-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pb\",\n      \"cssEquivalent\": \"padding-bottom\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"pl\",\n      \"cssEquivalent\": \"padding-left\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"px\",\n      \"cssEquivalent\": \"padding-left and padding-right\",\n      \"themeKey\": \"space\"\n    },\n    {\n      \"abbreviation\": \"py\",\n      \"cssEquivalent\": \"padding-top and padding-bottom\",\n      \"themeKey\": \"space\"\n    }\n  ]\n}\n```\nTypography\nTo manage Typography options, the tokens object supports the following keys:\nfonts (font families)\nfontSizes\nfontWeights\nlineHeights\nletterSpacings\n\n```json\n{\n  \"properties\": [\n    {\n      \"abbreviation\": \"FontFamily\",\n      \"cssEquivalent\": \"font-family\",\n      \"themeKey\": \"fonts\"\n    },\n    {\n      \"abbreviation\": \"FontSize\",\n      \"cssEquivalent\": \"font-size\",\n      \"themeKey\": \"fontSizes\"\n    },\n    {\n      \"abbreviation\": \"fontWeight\",\n      \"cssEquivalent\": \"font-weight\",\n      \"themeKey\": \"fontWeights\"\n    },\n    {\n      \"abbreviation\": \"lineHeight\",\n      \"cssEquivalent\": \"line-height\",\n      \"themeKey\": \"lineHeights\"\n    },\n    {\n      \"abbreviation\": \"letterSpacing\",\n      \"cssEquivalent\": \"letter-spacing\",\n      \"themeKey\": \"letterSpacings\"\n    },\n    {\n      \"abbreviation\": \"textAlign\",\n      \"cssEquivalent\": \"text-align\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"fontStyle\",\n      \"cssEquivalent\": \"font-style\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"textTransform\",\n      \"cssEquivalent\": \"text-transform\",\n      \"themeKey\": \"-\"\n    },\n    {\n      \"abbreviation\": \"textDecoration\",\n      \"cssEquivalent\": \"text-decoration\",\n      \"themeKey\": \"-\"\n    }\n  ]\n}\n```\n","role":"user"},{"content":"- COMPONENT NAME : InstagramProfileComponent\n\n- COMPONENT DESCRIPTION :\n```\nInstagram profile\n```\n\n- additional component suggestions :\n```\nThe InstagramProfileComponent will display a user's Instagram profile information in a stylized manner. It will feature the user's profile picture, name, bio, follow stats (followers, following, and post count), and a grid of their recent posts. Optionally, it can include action buttons such as 'follow' and 'message', as well as a dropdown for profile options. The user's profile picture (Avatar) will be prominently displayed alongside their username and bio. Their follow stats (Text) will be listed neatly below this, and their recent posts (Image) will be displayed as small thumbnails in a grid formation. If the optional action buttons are included, they will be located next to the user's username, and the profile options dropdown (Popover) will be in the top right corner of the component.\n```\n\n\nThe full code of the new React component that you write will be written directly to a .tsx file inside the React project. Make sure all necessary imports are done, and that your full code is enclosed with tsx``` blocks. Answer with generated code only, DO NOT ADD ANY EXTRA TEXT DESCRIPTION OR COMMENTS BESIDES THE CODE. YOUR ANSWER CONTAINS CODE ONLY ! COMPONENT CODE ONLY !\nImportant :\n- DO NOT USE LIBRARIES OR IMPORTS OUTSIDE OF WHAT IS PROVIDED IN THIS TASK; otherwise it would crash the component because not installed. DO NOT IMPORT EXTRA LIBRARIES BESIDES WHAT IS PROVIDED ABOVE!\n- DO NOT HAVE ANY DYNAMIC DATA! Components are meant to be working as is without supplying any variable to them when importing them ! ONLY WRITE A COMPONENT THAT RENDER DIRECTLY WITH PLACEHOLDERS AS DATA, COMPONENT NOT SUPPLIED WITH ANY DYNAMIC DATA.\n- Only write the code for the component; Do not write extra code to import it! The code will directly be stored in an individual React .tsx file !\nWrite the React component code as the creative genius and React component genius you are - with good ui formatting.\n","role":"user"}],"generated_code":"import React from 'react'\nimport { Avatar, Button, Image, Popover, Text } from '@gluestack-ui/themed'\n\nconst InstagramProfileComponent = () => {\n  return (\n    <div>\n      <Avatar>\n        <img\n          src=\"https://via.placeholder.com/150\"\n          alt=\"profile\"\n        />\n      </Avatar>\n      <Text as=\"h2\">Username</Text>\n      <Text as=\"p\">Bio</Text>\n      <div>\n        <Text>Followers: 1000</Text>\n        <Text>Following: 500</Text>\n        <Text>Posts: 100</Text>\n      </div>\n      <div>\n        <Button>Follow</Button>\n        <Button>Message</Button>\n        <Popover>\n          <button>Options</button>\n          <div>\n            <button>Option 1</button>\n            <button>Option 2</button>\n            <button>Option 3</button>\n          </div>\n        </Popover>\n      </div>\n      <div>\n        <Image\n          src=\"https://via.placeholder.com/150\"\n          alt=\"post\"\n        />\n        <Image\n          src=\"https://via.placeholder.com/150\"\n          alt=\"post\"\n        />\n        <Image\n          src=\"https://via.placeholder.com/150\"\n          alt=\"post\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default InstagramProfileComponent;","task":{"description":{"by_llm":"The InstagramProfileComponent will display a user's Instagram profile information in a stylized manner. It will feature the user's profile picture, name, bio, follow stats (followers, following, and post count), and a grid of their recent posts. Optionally, it can include action buttons such as 'follow' and 'message', as well as a dropdown for profile options. The user's profile picture (Avatar) will be prominently displayed alongside their username and bio. Their follow stats (Text) will be listed neatly below this, and their recent posts (Image) will be displayed as small thumbnails in a grid formation. If the optional action buttons are included, they will be located next to the user's username, and the profile options dropdown (Popover) will be in the top right corner of the component.","by_user":"Instagram profile"},"icons":["atsignicon","chevrondownicon","paperclipicon"],"library_components":[{"name":"Avatar","usage":"To display the user's profile picture"},{"name":"Text","usage":"To display the user's name, bio, and follow stats"},{"name":"Image","usage":"To display a grid of the user's recent posts"},{"name":"Button","usage":"To provide optional 'follow' and 'message' action buttons"},{"name":"Popover","usage":"To provide a dropdown for profile options"}],"name":"InstagramProfileComponent"}}}
