[
  {
    "name": "AlertDialog",
    "description": "AlertDialog effectively interrupts a user's flow and prompts them to take a specific action. It's commonly used for mandatory confirmations or call-to-actions.",
    "docs_path": "library/gluestack-ui/docs/alert-dialog.mdx",
    "docs": {
      "import": {
        "source": "alert-dialog",
        "code": "import {\n  AlertDialog,\n  AlertDialogBackdrop,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogCloseButton,\n  AlertDialogFooter,\n  AlertDialogBody\n} from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "alert-dialog",
          "code": "<AlertDialog>\n  <AlertDialogBackdrop />\n  <AlertDialogContent>\n    <AlertDialogHeader>\n      <AlertDialogCloseButton />\n    </AlertDialogHeader>\n    <AlertDialogBody />\n    <AlertDialogFooter />\n  </AlertDialogContent>\n</AlertDialog>"
        }
      ],
      "examples": [
        {
          "source": "alert-dialog",
          "code": "import React, { useState } from 'react'\nimport {\n  AlertDialog,\n  AlertDialogBackdrop,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogCloseButton,\n  AlertDialogFooter,\n  AlertDialogBody,\n  Button\n} from '@gluestack-ui/themed'\n\nconst AlertDialogExample = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const onClose = () => setIsOpen(false)\n  const cancelRef = React.useRef()\n\n  return (\n    <>\n      <Button onClick={() => setIsOpen(true)}>Delete Customer</Button>\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogBackdrop />\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogCloseButton />\n          </AlertDialogHeader>\n          <AlertDialogBody>\n            Are you sure? You can't undo this action afterwards.\n          </AlertDialogBody>\n          <AlertDialogFooter>\n            <Button ref={cancelRef} onClick={onClose}>\n              Cancel\n            </Button>\n            <Button colorScheme='red' onClick={onClose} ml={3}>\n              Delete\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  )\n}"
        },
        {
          "source": "alert-dialog",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {CloseIcon, AlertDialog, AlertDialogBackdrop, AlertDialogContent, AlertDialogHeader, AlertDialogCloseButton, AlertDialogFooter, AlertDialogBody, Button, ButtonText, ButtonGroup, Text, Center, Icon, Heading, AlertCircleIcon, CheckCircleIcon, HStack} from '@gluestack-ui/themed'\nimport {AlertTriangleIcon} from 'lucide-react-native'\n\nfunction AlertDialogBasicAlertDialog() {\nconst [showAlertDialog, setShowAlertDialog] = useState(false)\nconst handleClose = () => setShowAlertDialog(!showAlertDialog)\n\n  return (\n<AlertDialog isOpen={showAlertDialog || showAlertDialogProp} onClose={handleClose} size={\"md\"}>\n      <AlertDialogBackdrop />\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <Heading>\n            Return Policy\n          </Heading>\n          <AlertDialogCloseButton>\n            <Icon as={CloseIcon} />\n          </AlertDialogCloseButton>\n        </AlertDialogHeader>\n        <AlertDialogBody>\n          <Text>\n            Whoa, slow down there! This modal is like a red light at an\n            intersection, reminding you to stop and think before you proceed. Is\n            deleting this folder the right choice?\n          </Text>\n        </AlertDialogBody>\n        <AlertDialogFooter>\n          <Button variant=\"outline\" action=\"secondary\" onPress={handleClose} mr=\"\\$3\">\n            <ButtonText>\n              Cancel\n            </ButtonText>\n          </Button>\n          <Button action=\"negative\" onPress={handleClose}>\n            <ButtonText>\n              Delete\n            </ButtonText>\n          </Button>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n\nexport default AlertDialogBasicAlertDialog;\n"
        },
        {
          "source": "alert-dialog",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {CloseIcon, AlertDialog, AlertDialogBackdrop, AlertDialogContent, AlertDialogHeader, AlertDialogCloseButton, AlertDialogFooter, AlertDialogBody, Button, ButtonText, ButtonGroup, Text, Center, Icon, Heading, AlertCircleIcon, CheckCircleIcon, HStack} from '@gluestack-ui/themed'\nimport {AlertTriangleIcon} from 'lucide-react-native'\n\nfunction AlertDialogBasic-full() {\nconst [showAlertDialog, setShowAlertDialog] = useState(false)\nconst handleClose = () => setShowAlertDialog(!showAlertDialog)\n\n  return (\n<AlertDialog isOpen={showAlertDialog || showAlertDialogProp} onClose={handleClose} size={\"full\"}>\n      <AlertDialogBackdrop />\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <Heading>\n            Return Policy\n          </Heading>\n          <AlertDialogCloseButton>\n            <Icon as={CloseIcon} />\n          </AlertDialogCloseButton>\n        </AlertDialogHeader>\n        <AlertDialogBody>\n          <Text>\n            Whoa, slow down there! This modal is like a red light at an\n            intersection, reminding you to stop and think before you proceed. Is\n            deleting this folder the right choice?\n          </Text>\n        </AlertDialogBody>\n        <AlertDialogFooter>\n          <Button variant=\"outline\" action=\"secondary\" onPress={handleClose} mr=\"\\$3\">\n            <ButtonText>\n              Cancel\n            </ButtonText>\n          </Button>\n          <Button action=\"negative\" onPress={handleClose}>\n            <ButtonText>\n              Delete\n            </ButtonText>\n          </Button>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n\nexport default AlertDialogBasic-full;\n"
        }
      ]
    }
  },
  {
    "name": "Slider Alert",
    "description": "Alerts are used to communicate the status of a system, feature, or page. They indicate a specific state that may require attention from the user.",
    "docs_path": "library/gluestack-ui/docs/alert.mdx",
    "docs": {
      "import": {
        "source": "alert",
        "code": "import { Alert, AlertIcon, AlertText } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "alert",
          "code": "<Alert>\n  <AlertIcon />\n  <AlertText>This is an alert</AlertText>\n</Alert>"
        }
      ],
      "examples": [
        {
          "source": "alert",
          "code": "import React from 'react'\nimport { Alert, AlertIcon, AlertText } from '@gluestack-ui/themed'\n\nconst AlertExample = () => {\n  return (\n    <Alert>\n      <AlertIcon />\n      <AlertText>This is an alert</AlertText>\n    </Alert>\n  )\n}"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-info() {\n\n\n  return (\n<Alert variant={\"solid\"} action={\"info\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-info;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-error() {\n\n\n  return (\n<Alert variant={\"solid\"} action={\"error\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-error;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-warning() {\n\n\n  return (\n<Alert variant={\"solid\"} action={\"warning\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-warning;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-muted() {\n\n\n  return (\n<Alert variant={\"solid\"} action={\"muted\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-muted;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasicAlert() {\n\n\n  return (\n<Alert variant={\"solid\"} action={\"success\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasicAlert;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-accent-info() {\n\n\n  return (\n<Alert variant={\"accent\"} action={\"info\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-accent-info;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-accent-error() {\n\n\n  return (\n<Alert variant={\"accent\"} action={\"error\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-accent-error;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-accent-warning() {\n\n\n  return (\n<Alert variant={\"accent\"} action={\"warning\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-accent-warning;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-accent-muted() {\n\n\n  return (\n<Alert variant={\"accent\"} action={\"muted\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-accent-muted;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-accent() {\n\n\n  return (\n<Alert variant={\"accent\"} action={\"success\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-accent;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-outline-info() {\n\n\n  return (\n<Alert variant={\"outline\"} action={\"info\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-outline-info;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-outline-error() {\n\n\n  return (\n<Alert variant={\"outline\"} action={\"error\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-outline-error;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-outline-warning() {\n\n\n  return (\n<Alert variant={\"outline\"} action={\"warning\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-outline-warning;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-outline-muted() {\n\n\n  return (\n<Alert variant={\"outline\"} action={\"muted\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-outline-muted;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-outline() {\n\n\n  return (\n<Alert variant={\"outline\"} action={\"success\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-outline;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-AlertCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"AlertCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-AlertCircleIcon;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {CloseIcon, AlertDialog, AlertDialogBackdrop, AlertDialogContent, AlertDialogHeader, AlertDialogCloseButton, AlertDialogFooter, AlertDialogBody, Button, ButtonText, ButtonGroup, Text, Center, Icon, Heading, AlertCircleIcon, CheckCircleIcon, HStack} from '@gluestack-ui/themed'\nimport {AlertTriangleIcon} from 'lucide-react-native'\n\nfunction AlertDialogBasicAlertDialog() {\nconst [showAlertDialog, setShowAlertDialog] = useState(false)\nconst handleClose = () => setShowAlertDialog(!showAlertDialog)\n\n  return (\n<AlertDialog isOpen={showAlertDialog || showAlertDialogProp} onClose={handleClose} size={\"md\"}>\n      <AlertDialogBackdrop />\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <Heading>\n            Return Policy\n          </Heading>\n          <AlertDialogCloseButton>\n            <Icon as={CloseIcon} />\n          </AlertDialogCloseButton>\n        </AlertDialogHeader>\n        <AlertDialogBody>\n          <Text>\n            Whoa, slow down there! This modal is like a red light at an\n            intersection, reminding you to stop and think before you proceed. Is\n            deleting this folder the right choice?\n          </Text>\n        </AlertDialogBody>\n        <AlertDialogFooter>\n          <Button variant=\"outline\" action=\"secondary\" onPress={handleClose} mr=\"\\$3\">\n            <ButtonText>\n              Cancel\n            </ButtonText>\n          </Button>\n          <Button action=\"negative\" onPress={handleClose}>\n            <ButtonText>\n              Delete\n            </ButtonText>\n          </Button>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n\nexport default AlertDialogBasicAlertDialog;\n"
        },
        {
          "source": "alert",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {CloseIcon, AlertDialog, AlertDialogBackdrop, AlertDialogContent, AlertDialogHeader, AlertDialogCloseButton, AlertDialogFooter, AlertDialogBody, Button, ButtonText, ButtonGroup, Text, Center, Icon, Heading, AlertCircleIcon, CheckCircleIcon, HStack} from '@gluestack-ui/themed'\nimport {AlertTriangleIcon} from 'lucide-react-native'\n\nfunction AlertDialogBasic-full() {\nconst [showAlertDialog, setShowAlertDialog] = useState(false)\nconst handleClose = () => setShowAlertDialog(!showAlertDialog)\n\n  return (\n<AlertDialog isOpen={showAlertDialog || showAlertDialogProp} onClose={handleClose} size={\"full\"}>\n      <AlertDialogBackdrop />\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <Heading>\n            Return Policy\n          </Heading>\n          <AlertDialogCloseButton>\n            <Icon as={CloseIcon} />\n          </AlertDialogCloseButton>\n        </AlertDialogHeader>\n        <AlertDialogBody>\n          <Text>\n            Whoa, slow down there! This modal is like a red light at an\n            intersection, reminding you to stop and think before you proceed. Is\n            deleting this folder the right choice?\n          </Text>\n        </AlertDialogBody>\n        <AlertDialogFooter>\n          <Button variant=\"outline\" action=\"secondary\" onPress={handleClose} mr=\"\\$3\">\n            <ButtonText>\n              Cancel\n            </ButtonText>\n          </Button>\n          <Button action=\"negative\" onPress={handleClose}>\n            <ButtonText>\n              Delete\n            </ButtonText>\n          </Button>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n\nexport default AlertDialogBasic-full;\n"
        }
      ]
    }
  },
  {
    "name": "Avatar",
    "description": "The Avatar component is a versatile UI element representing a user with profile pictures, initials, or a fallback icon. It adds a personal touch to the user interface, making it more engaging.",
    "docs_path": "library/gluestack-ui/docs/avatar.mdx",
    "docs": {
      "import": {
        "source": "avatar",
        "code": "import {\n  Avatar,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage\n} from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "avatar",
          "code": "<AvatarGroup>\n  <Avatar>\n    <AvatarFallbackText />\n    <AvatarImage />\n    <AvatarBadge />\n  </Avatar>\n</AvatarGroup>"
        }
      ],
      "examples": [
        {
          "source": "avatar",
          "code": "import React from 'react'\nimport {\n  Avatar,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage\n} from '@gluestack-ui/themed'\n\nexport default function AvatarExample() {\n  return (\n    <Avatar bgColor='$amber600' {...props}>\n      <AvatarFallbackText>Sandeep Srivastava</AvatarFallbackText>\n    </Avatar>\n  )\n}"
        },
        {
          "source": "avatar",
          "code": "import React from 'react'\nimport {\n  Avatar,\n  AvatarGroup,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage,\n  HStack,\n  VStack,\n  Text\n} from '@gluestack-ui/themed'\n\nexport default function AvatarExample() {\n  return (\n    <VStack space='2xl'>\n      <HStack space='md'>\n        <Avatar bgColor='$indigo600'>\n          <AvatarFallbackText>Ronald Richards</AvatarFallbackText>\n          <AvatarBadge\n            sx={{\n              _dark: {\n                borderColor: '$black'\n              }\n            }}\n          />\n        </Avatar>\n        <VStack>\n          <Heading size='sm'>Ronald Richards</Heading>\n          <Text size='sm'>Nursing Assistant</Text>\n        </VStack>\n      </HStack>\n      <HStack space='md'>\n        <Avatar bgColor='$orange600'>\n          <AvatarFallbackText>Arlene McCoy</AvatarFallbackText>\n        </Avatar>\n        <VStack>\n          <Heading size='sm'>Arlene McCoy</Heading>\n          <Text size='sm'>Marketing Coordinator</Text>\n        </VStack>\n      </HStack>\n    </VStack>\n  )\n}"
        },
        {
          "source": "avatar",
          "code": "import React from 'react'\nimport {\n  Avatar,\n  AvatarGroup,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage,\n  HStack,\n  VStack,\n  Text\n} from '@gluestack-ui/themed'\n\nexport default function AvatarExample() {\n  return (\n    <VStack space='2xl'>\n      <HStack space='md'>\n        <Avatar>\n          <AvatarFallbackText>SS</AvatarFallbackText>\n          <AvatarImage\n            source={{\n              uri: 'https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8dXNlcnxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=800&q=60'\n            }}\n          />\n        </Avatar>\n        <VStack>\n          <Heading size='sm'>Ronald Richards</Heading>\n          <Text size='sm'>Nursing Assistant</Text>\n        </VStack>\n      </HStack>\n      <HStack space='md'>\n        <Avatar>\n          <AvatarFallbackText>SS</AvatarFallbackText>\n          <AvatarImage\n            source={{\n              uri: 'https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dXNlcnxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=800&q=60'\n            }}\n          />\n        </Avatar>\n        <VStack>\n          <Heading size='sm'>Arlene McCoy</Heading>\n          <Text size='sm'>Marketing Coordinator</Text>\n        </VStack>\n      </HStack>\n    </VStack>\n  )\n}"
        },
        {
          "source": "avatar",
          "code": "import React from 'react'\nimport {\n  Avatar,\n  AvatarGroup,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage,\n  HStack,\n  VStack,\n  Text\n} from '@gluestack-ui/themed'\n\nexport default function AvatarExample() {\n  return (\n    <AvatarGroup>\n      <Avatar size='md'>\n        <AvatarFallbackText>John Doe</AvatarFallbackText>\n        <AvatarImage\n          source={{\n            uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80'\n          }}\n        />\n      </Avatar>\n      <Avatar size='md'>\n        <AvatarFallbackText>John Doe</AvatarFallbackText>\n        <AvatarImage\n          source={{\n            uri: 'https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80'\n          }}\n        />\n      </Avatar>\n      <Avatar size='md'>\n        <AvatarFallbackText>John Doe</AvatarFallbackText>\n        <AvatarImage\n          source={{\n            uri: 'https://images.unsplash.com/photo-1614289371518-722f2615943d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80'\n          }}\n        />\n      </Avatar>\n      <Avatar size='md'>\n        <AvatarFallbackText>John Doe</AvatarFallbackText>\n        <AvatarImage\n          source={{\n            uri: 'https://images.unsplash.com/photo-1607746882042-944635dfe10e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80'\n          }}\n        />\n      </Avatar>\n    </AvatarGroup>\n  )\n}"
        },
        {
          "source": "avatar",
          "code": "import React from 'react'\nimport {\n  Avatar,\n  AvatarGroup,\n  AvatarBadge,\n  AvatarFallbackText,\n  AvatarImage,\n  HStack,\n  VStack,\n  Text\n} from '@gluestack-ui/themed'\n\nexport default function AvatarExample() {\n  return (\n    <AvatarGroup>\n      <Avatar size='md'>\n        <AvatarFallbackText>John Doe</AvatarFallbackText>\n        <AvatarImage\n          source={{\n            uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80'\n          }}\n        />\n        <AvatarBadge\n          sx={{\n            _dark: {\n              borderColor: '$black'\n            }\n          }}\n        />\n      </Avatar>\n      <Avatar size='md'>\n        <AvatarFallbackText>John Doe</AvatarFallbackText>\n        <AvatarImage\n          source={{\n            uri: 'https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80'\n          }}\n        />\n        <AvatarBadge\n          sx={{\n            _dark: {\n              borderColor: '$black'\n            }\n          }}\n        />\n      </Avatar>\n      <Avatar size='md'>\n        <AvatarFallbackText>John Doe</AvatarFallbackText>\n        <AvatarImage\n          source={{\n            uri: 'https://images.unsplash.com/photo-1614289371518-722f2615943d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80'\n          }}\n        />\n        <AvatarBadge\n          sx={{\n            _dark: {\n              borderColor: '$black'\n            }\n          }}\n        />\n      </Avatar>\n      <Avatar size='md'>\n        <AvatarFallbackText>John Doe</AvatarFallbackText>\n        <AvatarImage\n          source={{\n            uri: 'https://images.unsplash.com/photo-1607746882042-944635dfe10e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80'\n          }}\n        />\n        <AvatarBadge\n          sx={{\n            _dark: {\n              borderColor: '$black'\n            }\n          }}\n        />\n      </Avatar>\n    </AvatarGroup>\n  )\n}"
        },
        {
          "source": "avatar",
          "code": "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasicAvatar() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={true} uri={\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasicAvatar;\n"
        },
        {
          "source": "avatar",
          "code": "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-https://broken.link() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={true} uri={\"https://broken.link\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-https://broken.link;\n"
        },
        {
          "source": "avatar",
          "code": "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-false() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={false} uri={\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-false;\n"
        },
        {
          "source": "avatar",
          "code": "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-false-https://broken.link() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={false} uri={\"https://broken.link\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-false-https://broken.link;\n"
        },
        {
          "source": "avatar",
          "code": "import {HStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction AvatarGroupBasic() {\n\n\n  return (\n<HStack space=\"md\" h=\"100%\" justifyContent=\"center\" alignItems=\"center\">\n      <AvatarGroup>\n        <Avatar size={size}>\n          <AvatarFallbackText>\n            John Doe\n          </AvatarFallbackText>\n          <AvatarImage source={{\n        uri: 'https:\n      }} />\n          {badge && <AvatarBadge />}\n        </Avatar>\n        <Avatar size={size}>\n          <AvatarFallbackText>\n            John Doe\n          </AvatarFallbackText>\n          <AvatarImage source={{\n        uri: 'https:\n      }} />\n          {badge && <AvatarBadge />}\n        </Avatar>\n        <Avatar size={size}>\n          <AvatarFallbackText>\n            John Doe\n          </AvatarFallbackText>\n          <AvatarImage source={{\n        uri: 'https:\n      }} />\n          {badge && <AvatarBadge />}\n        </Avatar>\n        <Avatar size={size}>\n          <AvatarFallbackText>\n            John Doe\n          </AvatarFallbackText>\n          <AvatarImage source={{\n        uri: 'https:\n      }} />\n          {badge && <AvatarBadge />}\n        </Avatar>\n      </AvatarGroup>\n    </HStack>\n  );\n}\n\nexport default AvatarGroupBasic;\n"
        }
      ]
    }
  },
  {
    "name": "Badge",
    "description": "The badge component lets you quickly and easily add status indicators to your interface for improved usability. They are designed to be attention-grabbing and quickly convey important information.",
    "docs_path": "library/gluestack-ui/docs/badge.mdx",
    "docs": {
      "import": {
        "source": "badge",
        "code": "import { Badge, BadgeText, BadgeIcon } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "badge",
          "code": "<Badge>\n  <BadgeText />\n  <BadgeIcon />\n</Badge>"
        }
      ],
      "examples": [
        {
          "source": "badge",
          "code": "import { Badge, BadgeText, BadgeIcon, GlobeIcon } from '@gluestack-ui/themed'\nconst BadgeExample = (props) => {\n  return (\n    <Badge {...props}>\n      <BadgeText>New feature</BadgeText>\n      <BadgeIcon as={GlobeIcon} ml='$2' />\n    </Badge>\n  )\n}"
        },
        {
          "source": "badge",
          "code": "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-outline-error() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"outline\"} action={\"error\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-outline-error;\n"
        },
        {
          "source": "badge",
          "code": "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-outline-warning() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"outline\"} action={\"warning\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-outline-warning;\n"
        },
        {
          "source": "badge",
          "code": "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-outline-success() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"outline\"} action={\"success\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-outline-success;\n"
        },
        {
          "source": "badge",
          "code": "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-outline-info() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"outline\"} action={\"info\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-outline-info;\n"
        },
        {
          "source": "badge",
          "code": "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-outline() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"outline\"} action={\"muted\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-outline;\n"
        },
        {
          "source": "badge",
          "code": "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-error() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"solid\"} action={\"error\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-error;\n"
        },
        {
          "source": "badge",
          "code": "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-warning() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"solid\"} action={\"warning\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-warning;\n"
        },
        {
          "source": "badge",
          "code": "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-success() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"solid\"} action={\"success\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-success;\n"
        },
        {
          "source": "badge",
          "code": "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-info() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"solid\"} action={\"info\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-info;\n"
        },
        {
          "source": "badge",
          "code": "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasicBadge() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"solid\"} action={\"muted\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasicBadge;\n"
        }
      ]
    }
  },
  {
    "name": "Box",
    "description": "If you're looking for a flexible component to help with low-level layout needs, the Box component might be just what you need. With its customizable styles and props, it can be used to create a wide range of UI elements, from simple containers to complex layout structures.",
    "docs_path": "library/gluestack-ui/docs/box.mdx",
    "docs": {
      "import": {
        "source": "box",
        "code": "import { Box } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "box", "code": "<Box />" }],
      "examples": [
        {
          "source": "box",
          "code": "import { Box, Text } from '@gluestack-ui/themed'\n\nconst Example = () => (\n  <Box bg='$primary500' p='$5'>\n    <Text color='white'>This is the Box</Text>\n  </Box>\n)"
        },
        {
          "source": "box",
          "code": "import React from 'react'\nimport {Center, Text, CheckIcon, Icon, HStack, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Heading, VStack, RemoveIcon, Box, FormControl} from '@gluestack-ui/themed'\n\nfunction CheckboxGroupBasic() {\nconst [values, setValues] = React.useState(['Label 1'])\n\n  return (\n<CheckboxGroup accessibilityLabel=\"Checkbox Group\" value={values} onChange={setValues} nativeID=\"checkbox-group\">\n      <Checkbox m=\"\\$2\" size=\"$1\" isInvalid=\"$1\" isIndeterminate value=\"Label 1\" aria-label=\"Label 1\" accessibilityLabel=\"Checkbox\" onChange={(isSelected: boolean) =>\n  \n  console.log(isSelected, '###')} nativeID=\"checkbox-1\">\n        <CheckboxIndicator mr=\"\\$2\">\n          <CheckboxIcon as={CheckIcon} />\n        </CheckboxIndicator>\n        <CheckboxLabel>Label 1</CheckboxLabel>\n      </Checkbox>\n      <Checkbox m=\"\\$2\" isInvalid=\"$1\" size=\"$1\" aria-label=\"Label 2\" value=\"Label 2\" accessibilityLabel=\"Checkbox\" onChange={(isSelected: boolean) =>\n  \n  console.log(isSelected, '###')} nativeID=\"checkbox-2\">\n        <CheckboxIndicator mr=\"\\$2\">\n          <CheckboxIcon as={CheckIcon} />\n        </CheckboxIndicator>\n        <CheckboxLabel>Label 2</CheckboxLabel>\n      </Checkbox>\n    </CheckboxGroup>\n  );\n}\n\nexport default CheckboxGroupBasic;\n"
        },
        {
          "source": "box",
          "code": "import {Text, Box} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction BoxBasic() {\n\n\n  return (\n<Box {...props} bg={`\\$\\${bg}`} h={h} w={w} justifyContent=\"center\" alignItems=\"center\">\n      <Text color=\"white\" fontWeight=\"\\$bold\">\n        BOX\n      </Text>\n    </Box>\n  );\n}\n\nexport default BoxBasic;\n"
        },
        {
          "source": "box",
          "code": "import {Box} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction BoxWithRef() {\nconst myRef = React.useRef<any>({})\nconst styleObj = {\n  borderWidth: 8,\n  borderRadius: 4,\n  borderColor: '#22D3EE'\n}\n\n  return (\n<Box {...props} sx={{\n  h: 100,\n  w: 100,\n  bg: '\\$red500'\n}} ref={myRef} />\n  );\n}\n\nexport default BoxWithRef;\n"
        }
      ]
    }
  },
  {
    "name": "Button",
    "description": "A button component is a graphical user interface element that enables users to act by clicking or tapping. It can be customized in size, shape, color, and behavior to fit the design of the application or website.",
    "docs_path": "library/gluestack-ui/docs/button.mdx",
    "docs": {
      "import": {
        "source": "button",
        "code": "import {\n  Button,\n  ButtonGroup,\n  ButtonText,\n  ButtonSpinner,\n  ButtonIcon\n} from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "button",
          "code": "<ButtonGroup>\n  <Button>\n    <ButtonText />\n    <ButtonSpinner />\n    <ButtonIcon />\n  </Button>\n</ButtonGroup>"
        }
      ],
      "examples": [
        {
          "source": "button",
          "code": "import {\n  Button,\n  ButtonGroup,\n  ButtonText,\n  ButtonSpinner,\n  ButtonIcon,\n  AddIcon\n} from '@gluestack-ui/themed'\n\nconst ButtonExample = () => {\n  return (\n    <Button {...props}>\n      <ButtonText>Add </ButtonText>\n      <ButtonIcon as={AddIcon} />\n    </Button>\n  )\n}"
        },
        {
          "source": "button",
          "code": "import {\n  Button,\n  ButtonGroup,\n  ButtonText,\n  ButtonSpinner,\n  ButtonIcon,\n  AddIcon\n} from '@gluestack-ui/themed'\n\nconst ButtonExample = () => {\n  return (\n    <Button isDisabled={true} bg='$darkBlue600' p='$3'>\n      <ButtonSpinner mr='$1' />\n      <ButtonText fontWeight='$medium' fontSize='$sm'>\n        Please wait...\n      </ButtonText>\n    </Button>\n  )\n}"
        },
        {
          "source": "button",
          "code": "import {\n  Button,\n  ButtonText,\n  ButtonIcon,\n  ButtonGroup,\n  Box,\n  Heading,\n  Text,\n  HStack\n} from '@gluestack-ui/themed'\n\nconst ButtonExample = () => {\n  return (\n    <HStack\n      p='$12'\n      alignItems='center'\n      borderColor='$backgroundLight300'\n      borderWidth={1}\n      borderRadius='$lg'\n      sx={{\n        _dark: {\n          borderColor: '$backgroundDark700'\n        }\n      }}\n    >\n      <Box maxWidth='$64' mr='$9'>\n        <Heading mb='$1.5'>Was this page helpful?</Heading>\n        <Text fontSize='$sm'>\n          We use this feedback to improve the quality of our documentation.\n        </Text>\n      </Box>\n      <ButtonGroup space='md'>\n        <Button variant='outline' py='$2.5' action='secondary'>\n          <ButtonText fontSize='$sm' fontWeight='$medium'>\n            No\n          </ButtonText>\n        </Button>\n        <Button\n          variant='solid'\n          bg='$success700'\n          borderColor='$success700'\n          sx={{\n            ':hover': {\n              bg: '$success800'\n            },\n            ':active': {\n              bg: '$success700'\n            }\n          }}\n        >\n          <ButtonText fontSize='$sm' fontWeight='$medium'>\n            Yes\n          </ButtonText>\n        </Button>\n      </ButtonGroup>\n    </HStack>\n  )\n}"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-isDisabled() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasicButton() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasicButton;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-outline-isDisabled() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-outline-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-outline() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-outline;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-link-isDisabled() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-link-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-link() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-link;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-isDisabled() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-outline-isDisabled() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-outline-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-outline() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-outline;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-link-isDisabled() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-link-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-link() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-link;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-isDisabled() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-outline-isDisabled() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-outline-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-outline() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-outline;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-link-isDisabled() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-link-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-link() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-link;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-isDisabled() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-outline-isDisabled() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-outline-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-outline() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-outline;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-link-isDisabled() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-link-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-link() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-link;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasicButton() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasicButton;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-outline-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-outline-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-outline() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-outline;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-link-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-link() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-link;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-outline-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-outline-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-outline() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-outline;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-link-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-link() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-link;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-outline-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-outline-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-outline() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-outline;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-link-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-link() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-link;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-outline-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-outline-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-outline() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-outline;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-link-isDisabled;\n"
        },
        {
          "source": "button",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-link() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-link;\n"
        },
        {
          "source": "button",
          "code": "import React from 'react'\nimport {HStack, Button, ButtonSpinner, ButtonText} from '@gluestack-ui/themed'\n\nfunction ButtonIsLoading() {\nconst [isLoading] = React.useState(true)\n\n  return (\n<HStack space=\"md\">\n      <Button disabled={isLoading} focusable={!isLoading} opacity={isLoading ? 0.4 : 1} action=\"negative\">\n        <ButtonSpinner color=\"white\" />\n      </Button>\n      <Button disabled={isLoading} focusable={!isLoading} opacity={isLoading ? 0.4 : 1} action=\"negative\">\n        <ButtonSpinner color=\"white\" mr=\"\\$2\" />\n        <ButtonText>Submitting</ButtonText>\n      </Button>\n      <Button disabled={isLoading} focusable={!isLoading} opacity={isLoading ? 0.4 : 1} action=\"negative\">\n        <ButtonText>Submitting</ButtonText>\n        <ButtonSpinner color=\"white\" ml=\"\\$2\" />\n      </Button>\n    </HStack>\n  );\n}\n\nexport default ButtonIsLoading;\n"
        },
        {
          "source": "button",
          "code": "import React from 'react'\nimport {AddIcon, InfoIcon, HStack, Button, ButtonIcon, ButtonText} from '@gluestack-ui/themed'\n\nfunction ButtonWithIcons() {\n\n\n  return (\n<HStack space=\"md\">\n      <Button>\n        <ButtonIcon as={InfoIcon} mr=\"\\$2\" />\n        <ButtonText>LeftIcon</ButtonText>\n      </Button>\n      <Button variant=\"solid\">\n        <ButtonText>RightIcon</ButtonText>\n        <ButtonIcon as={AddIcon} ml=\"\\$2\" />\n      </Button>\n    </HStack>\n  );\n}\n\nexport default ButtonWithIcons;\n"
        }
      ]
    }
  },
  {
    "name": "Center",
    "description": "When you need to center-align content, the Center component comes in handy. It is a layout component that can be used with other components to create complex layouts and positioning.",
    "docs_path": "library/gluestack-ui/docs/center.mdx",
    "docs": {
      "import": {
        "source": "center",
        "code": "import { Center } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "center", "code": "<Center />" }],
      "examples": [
        {
          "source": "center",
          "code": "import { Center, Text } from '@gluestack-ui/themed'\n\nconst Demo = () => (\n  <Center bg='$primary500' h={200} w={300}>\n    <Text color='white' fontWeight='$bold'>\n      This is the center.\n    </Text>\n  </Center>\n)"
        },
        {
          "source": "center",
          "code": "import {Text, Center} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction CenterBasic() {\n\n\n  return (\n\n  );\n}\n\nexport default CenterBasic;\n"
        }
      ]
    }
  },
  {
    "name": "Checkbox",
    "description": "Whether you're building a simple form or a complex data collection system, the Checkbox component offers a user-friendly way for users to select multiple options from a list.",
    "docs_path": "library/gluestack-ui/docs/checkbox.mdx",
    "docs": {
      "import": {
        "source": "checkbox",
        "code": "import {\n  Checkbox,\n  CheckboxGroup,\n  CheckboxIndicator,\n  CheckboxIcon,\n  CheckboxLabel\n} from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "checkbox",
          "code": "<CheckboxGroup>\n  <Checkbox>\n    <CheckboxIndicator>\n      <CheckboxIcon />\n    </CheckboxIndicator>\n    <CheckboxLabel />\n  </Checkbox>\n</CheckboxGroup>"
        }
      ],
      "examples": [
        {
          "source": "checkbox",
          "code": "import {\n  Checkbox,\n  CheckboxIndicator,\n  CheckboxIcon,\n  CheckboxLabel\n} from '@gluestack-ui/themed'\n\nconst CheckBoxExample = (props) => {\n  return (\n    <Checkbox {...props}>\n      <CheckboxIndicator mr='$2'>\n        <CheckboxIcon as={CheckIcon} />\n      </CheckboxIndicator>\n      <CheckboxLabel>Label</CheckboxLabel>\n    </Checkbox>\n  )\n}"
        },
        {
          "source": "checkbox",
          "code": "import { useState } from 'react'\nimport {\n  Checkbox,\n  CheckboxGroup,\n  CheckboxIndicator,\n  CheckboxIcon,\n  CheckboxLabel,\n  Center,\n  CheckIcon,\n  Icon,\n  VStack\n} from '@gluestack-ui/themed'\n\nconst CheckBoxExample = (props) => {\n  const [values, setValues] = useState(['Eng'])\n  return (\n    <CheckboxGroup\n      value={values}\n      onChange={(keys) => {\n        setValues(keys)\n      }}\n    >\n      <VStack space='3xl'>\n        <Checkbox value='Eng'>\n          <CheckboxIndicator mr='$2'>\n            <CheckboxIcon as={CheckIcon} />\n          </CheckboxIndicator>\n          <CheckboxLabel>Framer</CheckboxLabel>\n        </Checkbox>\n        <Checkbox value='invison'>\n          <CheckboxIndicator mr='$2'>\n            <CheckboxIcon as={CheckIcon} />\n          </CheckboxIndicator>\n          <CheckboxLabel>Invision Studio</CheckboxLabel>\n        </Checkbox>\n        <Checkbox value='adobe'>\n          <CheckboxIndicator mr='$2'>\n            <CheckboxIcon as={CheckIcon} />\n          </CheckboxIndicator>\n          <CheckboxLabel>Adobe XD</CheckboxLabel>\n        </Checkbox>\n      </VStack>\n    </CheckboxGroup>\n  )\n}"
        },
        {
          "source": "checkbox",
          "code": "import React from 'react'\nimport {Center, Text, CheckIcon, Icon, HStack, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Heading, VStack, RemoveIcon, Box, FormControl} from '@gluestack-ui/themed'\n\nfunction CheckboxGroupBasic() {\nconst [values, setValues] = React.useState(['Label 1'])\n\n  return (\n<CheckboxGroup accessibilityLabel=\"Checkbox Group\" value={values} onChange={setValues} nativeID=\"checkbox-group\">\n      <Checkbox m=\"\\$2\" size=\"$1\" isInvalid=\"$1\" isIndeterminate value=\"Label 1\" aria-label=\"Label 1\" accessibilityLabel=\"Checkbox\" onChange={(isSelected: boolean) =>\n  \n  console.log(isSelected, '###')} nativeID=\"checkbox-1\">\n        <CheckboxIndicator mr=\"\\$2\">\n          <CheckboxIcon as={CheckIcon} />\n        </CheckboxIndicator>\n        <CheckboxLabel>Label 1</CheckboxLabel>\n      </Checkbox>\n      <Checkbox m=\"\\$2\" isInvalid=\"$1\" size=\"$1\" aria-label=\"Label 2\" value=\"Label 2\" accessibilityLabel=\"Checkbox\" onChange={(isSelected: boolean) =>\n  \n  console.log(isSelected, '###')} nativeID=\"checkbox-2\">\n        <CheckboxIndicator mr=\"\\$2\">\n          <CheckboxIcon as={CheckIcon} />\n        </CheckboxIndicator>\n        <CheckboxLabel>Label 2</CheckboxLabel>\n      </Checkbox>\n    </CheckboxGroup>\n  );\n}\n\nexport default CheckboxGroupBasic;\n"
        }
      ]
    }
  },
  {
    "name": "Divider",
    "description": "Revamp your content organization with the Divider component! Use it to visually separate different sections of a list or group for a more structured and easy-to-read interface.",
    "docs_path": "library/gluestack-ui/docs/divider.mdx",
    "docs": {
      "import": {
        "source": "divider",
        "code": "import { Divider } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "divider", "code": "<Divider />" }],
      "examples": [
        {
          "source": "divider",
          "code": "import { Divider, Center, Text } from '@gluestack-ui/themed'\n\nconst DividerExample = () => (\n  <Center>\n    <Text>Easy</Text>\n    <Divider my='$0.5' />\n    <Text>Difficult</Text>\n  </Center>\n)"
        },
        {
          "source": "divider",
          "code": "import React from 'react'\nimport {Text, Divider, VStack, HStack, Box, Center, Heading, Button, ButtonText} from '@gluestack-ui/themed'\n\nfunction DividerBasicDivider() {\n\n\n  return (\n<HStack flexDirection={props.orientation === 'vertical' ? 'row' : 'column'} h={props.orientation === 'vertical' ? 30 : 'auto'} alignItems=\"center\" justifyContent=\"center\">\n      <Heading size=\"sm\" fontWeight=\"\\$semibold\">\n        Firefox\n      </Heading>\n      <Divider orientation={\"vertical\"} m=\"\\$3\" />\n      <Heading size=\"sm\" fontWeight=\"\\$semibold\">\n        Chrome\n      </Heading>\n    </HStack>\n  );\n}\n\nexport default DividerBasicDivider;\n"
        },
        {
          "source": "divider",
          "code": "import React from 'react'\nimport {Text, Divider, VStack, HStack, Box, Center, Heading, Button, ButtonText} from '@gluestack-ui/themed'\n\nfunction DividerBasic-horizontal() {\n\n\n  return (\n<HStack flexDirection={props.orientation === 'vertical' ? 'row' : 'column'} h={props.orientation === 'vertical' ? 30 : 'auto'} alignItems=\"center\" justifyContent=\"center\">\n      <Heading size=\"sm\" fontWeight=\"\\$semibold\">\n        Firefox\n      </Heading>\n      <Divider orientation={\"horizontal\"} m=\"\\$3\" />\n      <Heading size=\"sm\" fontWeight=\"\\$semibold\">\n        Chrome\n      </Heading>\n    </HStack>\n  );\n}\n\nexport default DividerBasic-horizontal;\n"
        }
      ]
    }
  },
  {
    "name": "Fab",
    "description": "The Floating Action Button (FAB) is a dynamic button that stays visible and provides access to a primary action throughout the user's journey in the application. It is a powerful UI element that adds a touch of elegance and convenience to the user experience.",
    "docs_path": "library/gluestack-ui/docs/fab.mdx",
    "docs": {
      "import": {
        "source": "fab",
        "code": "import { Fab } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "fab",
          "code": "<Fab>\n  <FabLabel />\n  <FabIcon />\n</Fab>"
        }
      ],
      "examples": [
        {
          "source": "fab",
          "code": "import React from 'react'\n\nimport {\n  AddIcon,\n  Fab,\n  FabIcon,\n  FabLabel,\n  Box,\n  MenuIcon,\n  Checkbox,\n  CheckboxIndicator,\n  CheckboxLabel,\n  SearchIcon,\n  Link,\n  VStack,\n  HStack,\n  Avatar,\n  AvatarImage,\n  Heading,\n  Text,\n  Divider,\n  Image,\n  CheckboxIcon\n} from '@gluestack-ui/themed'\n\nimport { CheckIcon, EditIcon, ShoppingCartIcon } from 'lucide-react-native'\n\nconst FabBasic = ({\n  placement = 'bottom right',\n  showLabel = true,\n  showIcon = true,\n  ...props\n}: any) => {\n  return (\n    <Box\n      position='relative'\n      bg='$trueGray200'\n      h='$full'\n      w='$full'\n      sx={{ _web: { w: 300, h: 300 } }}\n    >\n      <Fab placement={placement} {...props}>\n        {showIcon && (\n          <FabIcon\n            as={MenuIcon}\n            mr={showLabel ? '$1' : '$0'}\n            dataSet={{\n              'component-props': JSON.stringify({\n                instance: true,\n                'instance-name': 'Icon',\n                name: 'CloseIcon',\n                size: 'md'\n              })\n            }}\n          />\n        )}\n        {showLabel && <FabLabel>Menu</FabLabel>}\n      </Fab>\n    </Box>\n  )\n}\n\nconst FigmaFabStory = ({\n  placement = 'bottom right',\n  showLabel = true,\n  _showIcon = true,\n  ...props\n}: any) => {\n  return (\n    <Box\n      position='relative'\n      bg='$trueGray200'\n      h='$full'\n      w='$full'\n      sx={{ _web: { w: 300, h: 300 } }}\n    >\n      <Fab placement={placement} {...props}>\n        <Fab.Icon\n          as={MenuIcon}\n          mr={showLabel ? '$1' : '$0'}\n          dataSet={{\n            'component-props': JSON.stringify({\n              instance: true,\n              'instance-name': 'Icon',\n              name: 'MenuIcon',\n              size: 'md'\n            })\n          }}\n        />\n        {showLabel && <Fab.Label>Menu</Fab.Label>}\n      </Fab>\n    </Box>\n  )\n}"
        },
        {
          "source": "fab",
          "code": "import React from 'react'\nimport {AddIcon, Fab, FabIcon, FabLabel, Box, MenuIcon, Checkbox, CheckboxIndicator, CheckboxLabel, SearchIcon, Link, VStack, HStack, Avatar, AvatarImage, Heading, Text, Divider, Image, CheckboxIcon} from '@gluestack-ui/themed'\nimport {CheckIcon, EditIcon, ShoppingCartIcon} from 'lucide-react-native'\n\nfunction FabBasicFab() {\n\n\n  return (\n<Box position=\"relative\" bg=\"\\$trueGray200\" h=\"\\$full\" w=\"\\$full\" sx={{\n  _web: {\n    w: 300,\n    h: 300\n  }\n}}>\n      <Fab placement={placement} size={\"md\"} showLabel={true}>\n        {showIcon && <FabIcon as={MenuIcon} mr={showLabel ? '\\$1' : '\\$0'} />}\n        {showLabel && <FabLabel>Menu</FabLabel>}\n      </Fab>\n    </Box>\n  );\n}\n\nexport default FabBasicFab;\n"
        },
        {
          "source": "fab",
          "code": "import React from 'react'\nimport {AddIcon, Fab, FabIcon, FabLabel, Box, MenuIcon, Checkbox, CheckboxIndicator, CheckboxLabel, SearchIcon, Link, VStack, HStack, Avatar, AvatarImage, Heading, Text, Divider, Image, CheckboxIcon} from '@gluestack-ui/themed'\nimport {CheckIcon, EditIcon, ShoppingCartIcon} from 'lucide-react-native'\n\nfunction FabBasic-false() {\n\n\n  return (\n<Box position=\"relative\" bg=\"\\$trueGray200\" h=\"\\$full\" w=\"\\$full\" sx={{\n  _web: {\n    w: 300,\n    h: 300\n  }\n}}>\n      <Fab placement={placement} size={\"md\"} showLabel={false}>\n        {showIcon && <FabIcon as={MenuIcon} mr={showLabel ? '\\$1' : '\\$0'} />}\n        {showLabel && <FabLabel>Menu</FabLabel>}\n      </Fab>\n    </Box>\n  );\n}\n\nexport default FabBasic-false;\n"
        }
      ]
    }
  },
  {
    "name": "FormControl",
    "description": "By using FormControl, developers can provide important context to form elements. This context can include whether the element is invalid, disabled, or required.",
    "docs_path": "library/gluestack-ui/docs/formcontrol.mdx",
    "docs": {
      "import": {
        "source": "formcontrol",
        "code": "import {\n  FormControl,\n  FormControlLabel,\n  FormControlLabelText,\n  FormControlHelper,\n  FormControlHelperText,\n  FormControlError,\n  FormControlErrorIcon,\n  FormControlErrorText\n} from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "formcontrol",
          "code": "<FormControl>\n  <FormControlLabel>\n    <FormControlLabelText />\n  </FormControlLabel>\n  <FormControlHelper>\n    <FormControlHelperText />\n  </FormControlHelper>\n  <FormControlError>\n    <FormControlErrorIcon />\n    <FormControlErrorText />\n  </FormControlError>\n</FormControl>"
        }
      ],
      "examples": [
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {\n  FormControl,\n  FormControlLabel,\n  FormControlLabelText,\n  FormControlHelper,\n  FormControlHelperText,\n  FormControlError,\n  FormControlErrorIcon,\n  FormControlErrorText,\n  Icon,\n  Input,\n  InputField,\n  AlertCircleIcon,\n  Box\n} from '@gluestack-ui/themed'\n\nconst FormControlExample = () => {\n  return (\n    <Box h='$32' w='$72'>\n      <FormControl {...props}>\n        <FormControlLabel mb='$1'>\n          <FormControlLabelText>Password</FormControlLabelText>\n        </FormControlLabel>\n        <Input>\n          <InputField\n            type='password'\n            defaultValue='12345'\n            placeholder='password'\n          />\n        </Input>\n        <FormControlHelper>\n          <FormControlHelperText>\n            Must be atleast 6 characters.\n          </FormControlHelperText>\n        </FormControlHelper>\n        <FormControlError>\n          <FormControlErrorIcon as={AlertCircleIcon} />\n          <FormControlErrorText>\n            Atleast 6 characters are required.\n          </FormControlErrorText>\n        </FormControlError>\n      </FormControl>\n    </Box>\n  )\n}"
        },
        {
          "source": "formcontrol",
          "code": "import React, { useState } from 'react'\nimport {\n  Box,\n  Center,\n  FormControl,\n  FormControlLabel,\n  FormControlLabelText,\n  FormControlHelper,\n  FormControlHelperText,\n  FormControlError,\n  FormControlErrorIcon,\n  FormControlErrorText,\n  Input,\n  InputField,\n  Button,\n  ButtonText,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  Switch,\n  Modal,\n  ModalBackdrop,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  Text,\n  Heading,\n  VStack,\n  HStack\n} from '@gluestack-ui/themed'\n\nconst FormControlExample = () => {\n  const [showModal, setShowModal] = useState(false)\n  return (\n    <Center h={500}>\n      <Button\n        py='$2.5'\n        px='$3'\n        bg='$darkBlue600'\n        onPress={() => {\n          setShowModal(true)\n        }}\n      >\n        <ButtonText>Change Settings</ButtonText>\n      </Button>\n      <Modal\n        isOpen={showModal}\n        onClose={() => {\n          setShowModal(false)\n        }}\n      >\n        <ModalBackdrop />\n        <ModalContent maxWidth='$96'>\n          <ModalBody p='$5'>\n            <VStack space='xs' mb='$4'>\n              <Heading>Change Settings</Heading>\n              <Text size='sm'>\n                Make modifications to the settings with ease.\n              </Text>\n            </VStack>\n            <VStack py='$2' space='xl'>\n              <FormControl>\n                <FormControlLabel>\n                  <FormControlLabelText>Name</FormControlLabelText>\n                </FormControlLabel>\n                <Input>\n                  <InputField value='Wade Warren' />\n                </Input>\n              </FormControl>\n              <FormControl>\n                <FormControlLabel>\n                  <FormControlLabelText>Email</FormControlLabelText>\n                </FormControlLabel>\n                <Input>\n                  <InputField value='wadewarren@sample.com' />\n                </Input>\n              </FormControl>\n              <FormControl>\n                <FormControlLabel>\n                  <FormControlLabelText>Volume</FormControlLabelText>\n                </FormControlLabel>\n                <Slider defaultValue={60} sliderTrackHeight={4}>\n                  <SliderTrack>\n                    <SliderFilledTrack />\n                  </SliderTrack>\n                  <SliderThumb />\n                </Slider>\n              </FormControl>\n              <FormControl>\n                <HStack space='sm'>\n                  <Switch size='sm' />\n                  <FormControlLabelText>Dark Mode</FormControlLabelText>\n                </HStack>\n              </FormControl>\n            </VStack>\n            <Button\n              mt='$4'\n              onPress={() => {\n                setShowModal(false)\n              }}\n            >\n              <ButtonText>Save Changes</ButtonText>\n            </Button>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </Center>\n  )\n}"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isDisabled() {\n\n\n  return (\n<FormControl isInvalid={true} size={\"md\"} isDisabled={true} isRequired={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isDisabled;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isDisabled-isRequired() {\n\n\n  return (\n<FormControl isInvalid={true} size={\"md\"} isDisabled={true} isRequired={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isDisabled-isRequired;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasicFormControl() {\n\n\n  return (\n<FormControl isInvalid={true} size={\"md\"} isDisabled={false} isRequired={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasicFormControl;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isRequired() {\n\n\n  return (\n<FormControl isInvalid={true} size={\"md\"} isDisabled={false} isRequired={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isRequired;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isInvalid-isDisabled() {\n\n\n  return (\n<FormControl isInvalid={false} size={\"md\"} isDisabled={true} isRequired={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isInvalid-isDisabled;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isInvalid-isDisabled-isRequired() {\n\n\n  return (\n<FormControl isInvalid={false} size={\"md\"} isDisabled={true} isRequired={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isInvalid-isDisabled-isRequired;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isInvalid() {\n\n\n  return (\n<FormControl isInvalid={false} size={\"md\"} isDisabled={false} isRequired={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isInvalid;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isInvalid-isRequired() {\n\n\n  return (\n<FormControl isInvalid={false} size={\"md\"} isDisabled={false} isRequired={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isInvalid-isRequired;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-isInvalid-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"outline\"} isInvalid={true} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-isInvalid-isDisabled;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-isInvalid() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"outline\"} isInvalid={true} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-isInvalid;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"outline\"} isInvalid={false} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-isDisabled;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControlSelect() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"outline\"} isInvalid={false} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControlSelect;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-underlined-isInvalid-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"underlined\"} isInvalid={true} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-underlined-isInvalid-isDisabled;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-underlined-isInvalid() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"underlined\"} isInvalid={true} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-underlined-isInvalid;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-underlined-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"underlined\"} isInvalid={false} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-underlined-isDisabled;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-underlined() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"underlined\"} isInvalid={false} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-underlined;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-rounded-isInvalid-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"rounded\"} isInvalid={true} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-rounded-isInvalid-isDisabled;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-rounded-isInvalid() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"rounded\"} isInvalid={true} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-rounded-isInvalid;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-rounded-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"rounded\"} isInvalid={false} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-rounded-isDisabled;\n"
        },
        {
          "source": "formcontrol",
          "code": "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-rounded() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"rounded\"} isInvalid={false} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-rounded;\n"
        }
      ]
    }
  },
  {
    "name": "Heading",
    "description": "Heading component gives you the ability to create headings for your page with different sizes and symantics from h1 to h6.",
    "docs_path": "library/gluestack-ui/docs/heading.mdx",
    "docs": {
      "import": {
        "source": "heading",
        "code": "import { Heading } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "heading", "code": "<Heading>Heading</Heading>" }],
      "examples": [
        {
          "source": "heading",
          "code": "import { Heading } from '@gluestack-ui/themed'\n\nconst ExampleHeading = () => {\n  const sizes = ['xs', 'sm', 'md', 'lg', 'xl', '2xl', '3xl', '4xl', '5xl']\n  return (\n    <Center>\n      {sizes.map((size) => (\n        <Heading size={size}>{size}</Heading>\n      ))}\n    </Center>\n  )\n}"
        },
        {
          "source": "heading",
          "code": "import React from 'react'\nimport {Center, Heading} from '@gluestack-ui/themed'\n\nfunction HeadingBasicHeading() {\n\n\n  return (\n<Heading size={\"2xl\"}>{text}</Heading>\n  );\n}\n\nexport default HeadingBasicHeading;\n"
        }
      ]
    }
  },
  {
    "name": "HStack",
    "description": "HStack arranges its child elements horizontally, making it a suitable layout component for creating a row of items. It is worth noting that Row is just an alternative name for HStack.",
    "docs_path": "library/gluestack-ui/docs/hstack.mdx",
    "docs": {
      "import": {
        "source": "hstack",
        "code": "import { HStack } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "hstack", "code": "<HStack />" }],
      "examples": [
        {
          "source": "hstack",
          "code": "import { HStack } from '@gluestack-ui/themed'\n\nconst ExampleHStack = () => (\n  <HStack>\n    <Box w='$20' h='$20' bg='$blue300' />\n    <Box w='$20' h='$20' bg='$blue400' />\n    <Box w='$20' h='$20' bg='$blue500' />\n  </HStack>\n)"
        },
        {
          "source": "hstack",
          "code": "const ExampleHStack = () => (\n  <HStack space='md' reversed>\n    <Box w='$20' h='$20' bg='$blue300' />\n    <Box w='$20' h='$20' bg='$blue400' />\n    <Box w='$20' h='$20' bg='$blue500' />\n  </HStack>\n)"
        },
        {
          "source": "hstack",
          "code": "import React from 'react'\nimport {HStack, Box} from '@gluestack-ui/themed'\n\nfunction HStackBasicHStack() {\n\n\n  return (\n<HStack space={space} mt=\"\\$5\" reversed={reversed} space={\"md\"}>\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue300'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue400'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue500'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue600'\n  }} />\n    </HStack>\n  );\n}\n\nexport default HStackBasicHStack;\n"
        }
      ]
    }
  },
  {
    "name": "Icon",
    "description": "Icons are often used to enhance the usability and accessibility of digital products by providing users with clear and intuitive visual cues. It serves as an intuitive and easily recognizable way to communicate with users.",
    "docs_path": "library/gluestack-ui/docs/icon.mdx",
    "docs": {
      "import": {
        "source": "icon",
        "code": "import { Icon } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "icon", "code": "<Icon />" }],
      "examples": [
        {
          "source": "icon",
          "code": "import React from 'react'\n\nimport {\n  AddIcon,\n  ArrowLeftIcon,\n  ArrowRightIcon,\n  ArrowUpIcon,\n  ArrowDownIcon,\n  ChevronsLeftIcon,\n  ChevronsRightIcon,\n  ChevronsUpDownIcon,\n  AtSignIcon,\n  PaperclipIcon,\n  BellIcon,\n  CalendarDaysIcon,\n  MessageCircleIcon,\n  CheckIcon,\n  ChevronDownIcon,\n  ChevronUpIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  CloseIcon,\n  CopyIcon,\n  TrashIcon,\n  DownloadIcon,\n  GripVerticalIcon,\n  EditIcon,\n  MailIcon,\n  ExternalLinkIcon,\n  MenuIcon,\n  InfoIcon,\n  LinkIcon,\n  LockIcon,\n  RemoveIcon,\n  MoonIcon,\n  SlashIcon,\n  CheckCircleIcon,\n  PhoneIcon,\n  HelpCircleIcon,\n  RepeatIcon,\n  Repeat1Icon,\n  SearchIcon,\n  SettingsIcon,\n  LoaderIcon,\n  StarIcon,\n  SunIcon,\n  ClockIcon,\n  UnlockIcon,\n  EyeIcon,\n  EyeOffIcon,\n  AlertCircleIcon,\n  CloseCircleIcon,\n  ShareIcon,\n  CircleIcon,\n  FavouriteIcon,\n  GlobeIcon,\n  ThreeDotsIcon,\n  PlayIcon\n} from '@gluestack-ui/themed'\n\nconst IconBasic = ({ size, name, ...props }: any) => {\n  return <Icon as={name} size={size} {...props} />\n}"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {useEffect} from 'react'\nimport {Actionsheet, ActionsheetBackdrop, ActionsheetContent, ActionsheetDragIndicator, ActionsheetDragIndicatorWrapper, ActionsheetItem, ActionsheetItemText, ActionsheetIcon, Button, Icon, TrashIcon, ShareIcon, PlayIcon, FavouriteIcon, CloseIcon} from '@gluestack-ui/themed'\n\nfunction ActionsheetWithIcon() {\nconst [showActionsheet, setShowActionsheet] = React.useState(props.showActionsheet)\nconst handleClose = () => setShowActionsheet(false)\n\n  return (\n<Actionsheet isOpen={showActionsheet || showActionsheetProp} onClose={handleClose} {...props}>\n      <ActionsheetBackdrop />\n      <ActionsheetContent>\n        <ActionsheetDragIndicatorWrapper>\n          <ActionsheetDragIndicator />\n        </ActionsheetDragIndicatorWrapper>\n        <ActionsheetItem onPress={handleClose}>\n          <ActionsheetIcon as={TrashIcon} />\n          <ActionsheetItemText>\n            Delete\n          </ActionsheetItemText>\n        </ActionsheetItem>\n        <ActionsheetItem onPress={handleClose}>\n          <ActionsheetIcon as={ShareIcon} />\n          <ActionsheetItemText>\n            Share\n          </ActionsheetItemText>\n        </ActionsheetItem>\n        <ActionsheetItem onPress={handleClose}>\n          <ActionsheetIcon as={PlayIcon} />\n          <ActionsheetItemText>\n            Play\n          </ActionsheetItemText>\n        </ActionsheetItem>\n        <ActionsheetItem onPress={handleClose}>\n          <ActionsheetIcon as={FavouriteIcon} />\n          <ActionsheetItemText>\n            Favourite\n          </ActionsheetItemText>\n        </ActionsheetItem>\n        <ActionsheetItem onPress={handleClose}>\n          <ActionsheetIcon as={CloseIcon} />\n          <ActionsheetItemText>\n            Cancel\n          </ActionsheetItemText>\n        </ActionsheetItem>\n      </ActionsheetContent>\n    </Actionsheet>\n  );\n}\n\nexport default ActionsheetWithIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {AddIcon, InfoIcon, HStack, Button, ButtonIcon, ButtonText} from '@gluestack-ui/themed'\n\nfunction ButtonWithIcons() {\n\n\n  return (\n<HStack space=\"md\">\n      <Button>\n        <ButtonIcon as={InfoIcon} mr=\"\\$2\" />\n        <ButtonText>LeftIcon</ButtonText>\n      </Button>\n      <Button variant=\"solid\">\n        <ButtonText>RightIcon</ButtonText>\n        <ButtonIcon as={AddIcon} ml=\"\\$2\" />\n      </Button>\n    </HStack>\n  );\n}\n\nexport default ButtonWithIcons;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isInvalid-isDisabled;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isInvalid;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isDisabled;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIconInput() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIconInput;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isInvalid-isDisabled;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isInvalid;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isDisabled;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isInvalid-isDisabled;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isInvalid;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isDisabled;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasicIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"AddIcon\"} />\n  );\n}\n\nexport default IconBasicIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-AlertCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"AlertCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-AlertCircleIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ArrowUpIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ArrowUpIcon\"} />\n  );\n}\n\nexport default IconBasic-ArrowUpIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ArrowDownIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ArrowDownIcon\"} />\n  );\n}\n\nexport default IconBasic-ArrowDownIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ArrowRightIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ArrowRightIcon\"} />\n  );\n}\n\nexport default IconBasic-ArrowRightIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ArrowLeftIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ArrowLeftIcon\"} />\n  );\n}\n\nexport default IconBasic-ArrowLeftIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-AtSignIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"AtSignIcon\"} />\n  );\n}\n\nexport default IconBasic-AtSignIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-BellIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"BellIcon\"} />\n  );\n}\n\nexport default IconBasic-BellIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CalendarDaysIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CalendarDaysIcon\"} />\n  );\n}\n\nexport default IconBasic-CalendarDaysIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CheckIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CheckIcon\"} />\n  );\n}\n\nexport default IconBasic-CheckIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CheckCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CheckCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-CheckCircleIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronUpIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronUpIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronUpIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronDownIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronDownIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronDownIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronLeftIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronLeftIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronLeftIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronRightIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronRightIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronRightIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronsLeftIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronsLeftIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronsLeftIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronsRightIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronsRightIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronsRightIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronsUpDownIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronsUpDownIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronsUpDownIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CircleIcon\"} />\n  );\n}\n\nexport default IconBasic-CircleIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ClockIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ClockIcon\"} />\n  );\n}\n\nexport default IconBasic-ClockIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CloseIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CloseIcon\"} />\n  );\n}\n\nexport default IconBasic-CloseIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CloseCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CloseCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-CloseCircleIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CopyIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CopyIcon\"} />\n  );\n}\n\nexport default IconBasic-CopyIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-DownloadIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"DownloadIcon\"} />\n  );\n}\n\nexport default IconBasic-DownloadIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-EditIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"EditIcon\"} />\n  );\n}\n\nexport default IconBasic-EditIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-EyeIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"EyeIcon\"} />\n  );\n}\n\nexport default IconBasic-EyeIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-EyeOffIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"EyeOffIcon\"} />\n  );\n}\n\nexport default IconBasic-EyeOffIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-FavouriteIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"FavouriteIcon\"} />\n  );\n}\n\nexport default IconBasic-FavouriteIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-GlobeIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"GlobeIcon\"} />\n  );\n}\n\nexport default IconBasic-GlobeIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-GripVerticalIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"GripVerticalIcon\"} />\n  );\n}\n\nexport default IconBasic-GripVerticalIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-HelpCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"HelpCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-HelpCircleIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-InfoIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"InfoIcon\"} />\n  );\n}\n\nexport default IconBasic-InfoIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-LinkIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"LinkIcon\"} />\n  );\n}\n\nexport default IconBasic-LinkIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ExternalLinkIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ExternalLinkIcon\"} />\n  );\n}\n\nexport default IconBasic-ExternalLinkIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-LoaderIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"LoaderIcon\"} />\n  );\n}\n\nexport default IconBasic-LoaderIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-LockIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"LockIcon\"} />\n  );\n}\n\nexport default IconBasic-LockIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-MailIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"MailIcon\"} />\n  );\n}\n\nexport default IconBasic-MailIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-MenuIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"MenuIcon\"} />\n  );\n}\n\nexport default IconBasic-MenuIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-MessageCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"MessageCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-MessageCircleIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-MoonIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"MoonIcon\"} />\n  );\n}\n\nexport default IconBasic-MoonIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-PaperclipIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"PaperclipIcon\"} />\n  );\n}\n\nexport default IconBasic-PaperclipIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-PhoneIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"PhoneIcon\"} />\n  );\n}\n\nexport default IconBasic-PhoneIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-PlayIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"PlayIcon\"} />\n  );\n}\n\nexport default IconBasic-PlayIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-RemoveIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"RemoveIcon\"} />\n  );\n}\n\nexport default IconBasic-RemoveIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-RepeatIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"RepeatIcon\"} />\n  );\n}\n\nexport default IconBasic-RepeatIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-Repeat1Icon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"Repeat1Icon\"} />\n  );\n}\n\nexport default IconBasic-Repeat1Icon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-SearchIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"SearchIcon\"} />\n  );\n}\n\nexport default IconBasic-SearchIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-SettingsIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"SettingsIcon\"} />\n  );\n}\n\nexport default IconBasic-SettingsIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ShareIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ShareIcon\"} />\n  );\n}\n\nexport default IconBasic-ShareIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-SlashIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"SlashIcon\"} />\n  );\n}\n\nexport default IconBasic-SlashIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-StarIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"StarIcon\"} />\n  );\n}\n\nexport default IconBasic-StarIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-SunIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"SunIcon\"} />\n  );\n}\n\nexport default IconBasic-SunIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ThreeDotsIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ThreeDotsIcon\"} />\n  );\n}\n\nexport default IconBasic-ThreeDotsIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-TrashIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"TrashIcon\"} />\n  );\n}\n\nexport default IconBasic-TrashIcon;\n"
        },
        {
          "source": "icon",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-UnlockIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"UnlockIcon\"} />\n  );\n}\n\nexport default IconBasic-UnlockIcon;\n"
        }
      ]
    }
  },
  {
    "name": "Image",
    "description": "With the Image component, you can enhance the look and feel of your app or website by incorporating compelling imagery.",
    "docs_path": "library/gluestack-ui/docs/image.mdx",
    "docs": {
      "import": {
        "source": "image",
        "code": "import { Image } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "image", "code": "<Image source={source} />" }],
      "examples": [
        {
          "source": "image",
          "code": "import React from 'react'\nimport { Image } from '@gluestack-ui/themed'\n\nconst ImageBasic = ({\n  uri = 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n}: any) => {\n  return (\n    <Image\n      size='md'\n      source={{\n        uri: uri\n      }}\n    />\n  )\n}"
        },
        {
          "source": "image",
          "code": "import React from 'react'\nimport {Image} from '@gluestack-ui/themed'\n\nfunction ImageBasic() {\n\n\n  return (\n<Image size=\"md\" source={{\n  uri: uri\n}} />\n  );\n}\n\nexport default ImageBasic;\n"
        }
      ]
    }
  },
  {
    "name": "Input",
    "description": "The Input component is your go-to tool for gathering user input in a sleek and user-friendly text field. Whether you're designing a simple login form or a complex search feature, this component has got you covered.",
    "docs_path": "library/gluestack-ui/docs/input.mdx",
    "docs": {
      "import": {
        "source": "input",
        "code": "import { Input, InputField, InputIcon, InputSlot } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "input",
          "code": "<Input>\n  <InputField />\n  <InputSlot>\n    <InputIcon>{/* Some Icon Component */}</InputIcon>\n  </InputSlot>\n</Input>"
        }
      ],
      "examples": [
        {
          "source": "input",
          "code": "import React from 'react'\nimport { Input, InputField, InputIcon, InputSlot } from '@gluestack-ui/themed'\n\nconst InputExample = () => {\n  return (\n    <Input {...props}>\n      <InputField placeholder='Enter Text here' />\n    </Input>\n  )\n}"
        },
        {
          "source": "input",
          "code": "import React, { useState } from 'react'\nimport {\n  Input,\n  InputField,\n  InputIcon,\n  Button,\n  ButtonText,\n  VStack,\n  Text,\n  Heading,\n  Icon,\n  EyeIcon,\n  EyeOffIcon,\n  FormControl,\n  InputSlot\n} from '@gluestack-ui/themed'\n\nconst InputExample = () => {\n  const [showPassword, setShowPassword] = useState(false)\n  const handleState = () => {\n    setShowPassword((showState) => {\n      return !showState\n    })\n  }\n  return (\n    <FormControl\n      p='$4'\n      borderWidth='$1'\n      borderRadius='$lg'\n      borderColor='$borderLight300'\n      sx={{\n        _dark: {\n          borderWidth: '$1',\n          borderRadius: '$lg',\n          borderColor: '$borderDark800'\n        }\n      }}\n    >\n      <VStack space='xl'>\n        <Heading color='$text900' lineHeight='$md'>\n          Login\n        </Heading>\n        <VStack space='xs'>\n          <Text color='$text500' lineHeight='$xs'>\n            Email\n          </Text>\n          <Input>\n            <InputField type='text' />\n          </Input>\n        </VStack>\n        <VStack space='xs'>\n          <Text color='$text500' lineHeight='$xs'>\n            Password\n          </Text>\n          <Input textAlign='center'>\n            <InputField type={showPassword ? 'text' : 'password'} />\n            <InputSlot pr='$3' onPress={handleState}>\n              {/* EyeIcon, EyeOffIcon are both imported from 'lucide-react-native' */}\n              <InputIcon\n                as={showPassword ? EyeIcon : EyeOffIcon}\n                color='$darkBlue500'\n              />\n            </InputSlot>\n          </Input>\n        </VStack>\n        <Button\n          ml='auto'\n          onPress={() => {\n            setShowModal(false)\n          }}\n        >\n          <ButtonText color='$white'>Save</ButtonText>\n        </Button>\n      </VStack>\n    </FormControl>\n  )\n}"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-isInvalid-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-isInvalid() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-isInvalid;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasicInput() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasicInput;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-underlined-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-underlined-isInvalid-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-underlined-isInvalid() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-underlined-isInvalid;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-underlined-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-underlined-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-underlined() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-underlined;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-rounded-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-rounded-isInvalid-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-rounded-isInvalid() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-rounded-isInvalid;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-rounded-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-rounded-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-rounded() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-rounded;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isInvalid-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isInvalid;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIconInput() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIconInput;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isInvalid-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isInvalid;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isInvalid-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isInvalid;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isDisabled;\n"
        },
        {
          "source": "input",
          "code": "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded;\n"
        }
      ]
    }
  },
  {
    "name": "Link",
    "description": "With links, users can navigate seamlessly throughout a website. This component has a hyperlinked appearance for a user-friendly experience.",
    "docs_path": "library/gluestack-ui/docs/link.mdx",
    "docs": {
      "import": {
        "source": "link",
        "code": "import { Link } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "link", "code": "<Link>\n  <LinkText />\n</Link>" }],
      "examples": [
        {
          "source": "link",
          "code": "import React from 'react'\nimport { Link, LinkText } from '@gluestack-ui/themed'\n\nconst LinkExample = () => (\n  <Link href='https://gluestack.io/'>\n    <LinkText>gluestack</LinkText>\n  </Link>\n)"
        },
        {
          "source": "link",
          "code": "import React from 'react'\nimport {\n  Link,\n  LinkText,\n  ArrowUpRightIcon,\n  Icon,\n  HStack,\n  Text\n} from '@gluestack-ui/themed'\n\nconst LinkExample = () => (\n  <HStack>\n    <Text size='lg'>Go to </Text>\n    <Link href='https://gluestack.io/' isExternal>\n      <HStack alignItems='center'>\n        <LinkText size='lg'>Pinterest</LinkText>\n        <Icon\n          as={ArrowUpRightIcon}\n          size='lg'\n          color='$info600'\n          mt='$0.5'\n          sx={{\n            _dark: {\n              color: '$info300'\n            }\n          }}\n        />\n      </HStack>\n    </Link>\n  </HStack>\n)"
        },
        {
          "source": "link",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-link-isDisabled() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-link-isDisabled;\n"
        },
        {
          "source": "link",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-link() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-link;\n"
        },
        {
          "source": "link",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-link-isDisabled() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-link-isDisabled;\n"
        },
        {
          "source": "link",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-link() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-link;\n"
        },
        {
          "source": "link",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-link-isDisabled() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-link-isDisabled;\n"
        },
        {
          "source": "link",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-link() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-link;\n"
        },
        {
          "source": "link",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-link-isDisabled() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-link-isDisabled;\n"
        },
        {
          "source": "link",
          "code": "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-link() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-link;\n"
        },
        {
          "source": "link",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-link-isDisabled;\n"
        },
        {
          "source": "link",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-link() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-link;\n"
        },
        {
          "source": "link",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-link-isDisabled;\n"
        },
        {
          "source": "link",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-link() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-link;\n"
        },
        {
          "source": "link",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-link-isDisabled;\n"
        },
        {
          "source": "link",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-link() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-link;\n"
        },
        {
          "source": "link",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-link-isDisabled;\n"
        },
        {
          "source": "link",
          "code": "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-link() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-link;\n"
        },
        {
          "source": "link",
          "code": "import React from 'react'\nimport {Link, LinkText, Icon, HStack, Text} from '@gluestack-ui/themed'\nimport {ArrowUpRightIcon} from 'lucide-react-native'\n\nfunction LinkBasic() {\n\n\n  return (\n<Link href=\"https:\n      <LinkText\n  \n  >\n        GLUESTACK\n      </LinkText>\n    </Link>\n  );\n}\n\nexport default LinkBasic;\n"
        },
        {
          "source": "link",
          "code": "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-https://broken.link() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={true} uri={\"https://broken.link\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-https://broken.link;\n"
        },
        {
          "source": "link",
          "code": "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-false-https://broken.link() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={false} uri={\"https://broken.link\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-false-https://broken.link;\n"
        },
        {
          "source": "link",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-LinkIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"LinkIcon\"} />\n  );\n}\n\nexport default IconBasic-LinkIcon;\n"
        },
        {
          "source": "link",
          "code": "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ExternalLinkIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ExternalLinkIcon\"} />\n  );\n}\n\nexport default IconBasic-ExternalLinkIcon;\n"
        }
      ]
    }
  },
  {
    "name": "Modal",
    "description": "A Modal is a window on top of the primary content to draw the user's attention to important information or actions. It provides a focused and interruptive way to interact with the application.",
    "docs_path": "library/gluestack-ui/docs/modal.mdx",
    "docs": {
      "import": {
        "source": "modal",
        "code": "import { Modal } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "modal",
          "code": "<Modal>\n  <ModalBackdrop />\n  <ModalContent>\n    <ModalHeader>\n      <ModalCloseButton></ModalCloseButton>\n    </ModalHeader>\n    <ModalBody />\n    <ModalFooter />\n  </ModalContent>\n</Modal>"
        }
      ],
      "examples": [
        {
          "source": "modal",
          "code": "import React, { useState } from 'react'\nimport {\n  Modal,\n  ModalBackdrop,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  Button\n} from '@gluestack-ui/themed'\n\nconst ModalExample = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const onClose = () => setIsOpen(false)\n  const onOpen = () => setIsOpen(true)\n  return (\n    <>\n      <Button onClick={onOpen}>Open Modal</Button>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalBackdrop />\n        <ModalContent>\n          <ModalHeader>\n            <ModalCloseButton onClick={onClose} />\n          </ModalHeader>\n          <ModalBody>\n            <p>Modal Body</p>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}"
        },
        {
          "source": "modal",
          "code": "import React, { useState } from 'react'\nimport {\n  Modal,\n  ModalBackdrop,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  Button\n} from '@gluestack-ui/themed'\n\nconst ModalExample = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const onClose = () => setIsOpen(false)\n  const onOpen = () => setIsOpen(true)\n  return (\n    <>\n      <Button onClick={onOpen}>Open Modal</Button>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalBackdrop />\n        <ModalContent>\n          <ModalHeader>\n            <ModalCloseButton onClick={onClose} />\n          </ModalHeader>\n          <ModalBody>\n            <p>Modal Body</p>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}"
        },
        {
          "source": "modal",
          "code": "import React from 'react'\nimport {CloseIcon, Button, ButtonText, ButtonIcon, Heading, Text, Icon, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, Center, VStack, HStack, CheckCircleIcon, Input, InputField, ArrowLeftIcon, Link} from '@gluestack-ui/themed'\n\nfunction ModalBasicModal() {\nconst [showModal, setShowModal] = React.useState(false)\nconst ref = React.useRef(null)\n\n  return (\n<Modal isOpen={showModal || showModalProp} onClose={() => {\n  setShowModal(false);\n}} size={\"md\"} finalFocusRef={ref}>\n      <ModalBackdrop />\n      <ModalContent>\n        <ModalHeader>\n          <Heading maxWidth=\"80%\">Engage with Modals</Heading>\n          <ModalCloseButton>\n            <Icon as={CloseIcon} />\n          </ModalCloseButton>\n        </ModalHeader>\n        <ModalBody>\n          <Text fontSize=\"\\$sm\">\n            Elevate user interactions with our versatile modals. Seamlessly\n            integrate notifications, forms, and media displays. Make an impact\n            effortlessly.\n          </Text>\n        </ModalBody>\n        <ModalFooter>\n          <Button variant=\"outline\" size=\"sm\" action=\"secondary\" mr=\"\\$3\" onPress={() => {\n        setShowModal(false);\n      }}>\n            <ButtonText>Cancel</ButtonText>\n          </Button>\n          <Button size=\"sm\" action=\"positive\" onPress={() => {\n        setShowModal(false);\n      }} sx={{\n        'bg': '\\$success700',\n        ':hover': {\n          bg: '\\$success800'\n        },\n        ':active': {\n          bg: '\\$success900'\n        },\n        '_dark': {\n          'bg': '\\$success600',\n          ':hover': {\n            bg: '\\$success700'\n          },\n          ':active': {\n            bg: '\\$success800'\n          }\n        }\n      }}>\n            <ButtonText>Explore</ButtonText>\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default ModalBasicModal;\n"
        },
        {
          "source": "modal",
          "code": "import React from 'react'\nimport {CloseIcon, Button, ButtonText, ButtonIcon, Heading, Text, Icon, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, Center, VStack, HStack, CheckCircleIcon, Input, InputField, ArrowLeftIcon, Link} from '@gluestack-ui/themed'\n\nfunction ModalBasic-full() {\nconst [showModal, setShowModal] = React.useState(false)\nconst ref = React.useRef(null)\n\n  return (\n<Modal isOpen={showModal || showModalProp} onClose={() => {\n  setShowModal(false);\n}} size={\"full\"} finalFocusRef={ref}>\n      <ModalBackdrop />\n      <ModalContent>\n        <ModalHeader>\n          <Heading maxWidth=\"80%\">Engage with Modals</Heading>\n          <ModalCloseButton>\n            <Icon as={CloseIcon} />\n          </ModalCloseButton>\n        </ModalHeader>\n        <ModalBody>\n          <Text fontSize=\"\\$sm\">\n            Elevate user interactions with our versatile modals. Seamlessly\n            integrate notifications, forms, and media displays. Make an impact\n            effortlessly.\n          </Text>\n        </ModalBody>\n        <ModalFooter>\n          <Button variant=\"outline\" size=\"sm\" action=\"secondary\" mr=\"\\$3\" onPress={() => {\n        setShowModal(false);\n      }}>\n            <ButtonText>Cancel</ButtonText>\n          </Button>\n          <Button size=\"sm\" action=\"positive\" onPress={() => {\n        setShowModal(false);\n      }} sx={{\n        'bg': '\\$success700',\n        ':hover': {\n          bg: '\\$success800'\n        },\n        ':active': {\n          bg: '\\$success900'\n        },\n        '_dark': {\n          'bg': '\\$success600',\n          ':hover': {\n            bg: '\\$success700'\n          },\n          ':active': {\n            bg: '\\$success800'\n          }\n        }\n      }}>\n            <ButtonText>Explore</ButtonText>\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default ModalBasic-full;\n"
        },
        {
          "source": "modal",
          "code": "import React from 'react'\nimport {Center, Button, ButtonText, CloseIcon, Text, Icon, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, VStack, HStack, Heading} from '@gluestack-ui/themed'\n\nfunction MultipleModalsModal() {\nconst [showModal, setShowModal] = React.useState(false)\nconst [showModal2, setShowModal2] = React.useState(false)\n\n  return (\n<>\n      <Center>\n        <Button onPress={() => setShowModal(true)}>\n          <ButtonText>Button</ButtonText>\n        </Button>\n      </Center>\n\n      <Modal isOpen={showModal} onClose={() => {\n    setShowModal(false);\n  }} size={\"md\"}>\n        <ModalBackdrop />\n        <ModalContent>\n          <ModalHeader>\n            <Heading>Order</Heading>\n            <ModalCloseButton>\n              <Icon as={CloseIcon} />\n            </ModalCloseButton>\n          </ModalHeader>\n          <ModalBody>\n            <VStack space=\"sm\">\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Sub Total</Text>\n                <Text color=\"\\$blueGray400\">\\$298.77</Text>\n              </HStack>\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Tax</Text>\n                <Text color=\"\\$blueGray400\">\\$38.84</Text>\n              </HStack>\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Total Amount</Text>\n                <Text color=\"\\$green500\">\\$337.61</Text>\n              </HStack>\n            </VStack>\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"outline\" action=\"secondary\" onPress={() => {\n          setShowModal(false);\n        }} sx={{\n          mr: '\\$3'\n        }}>\n              <ButtonText>Cancel</ButtonText>\n            </Button>\n            <Button onPress={() => {\n          setShowModal2(true);\n        }}>\n              <ButtonText>Continue</ButtonText>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n\n      <Modal isOpen={showModal2} onClose={() => {\n    setShowModal2(false);\n  }}>\n        <ModalBackdrop />\n        <ModalContent {...props}>\n          <ModalHeader>\n            <Heading>Order</Heading>\n            <ModalCloseButton>\n              <Icon as={CloseIcon} />\n            </ModalCloseButton>\n          </ModalHeader>\n          <ModalBody>\n            <Center h={100}>\n              <Heading>Second Modal</Heading>\n            </Center>\n          </ModalBody>\n          <ModalFooter>\n            <Button onPress={() => {\n          setShowModal2(false);\n        }}>\n              <ButtonText>Cancel</ButtonText>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default MultipleModalsModal;\n"
        },
        {
          "source": "modal",
          "code": "import React from 'react'\nimport {Center, Button, ButtonText, CloseIcon, Text, Icon, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, VStack, HStack, Heading} from '@gluestack-ui/themed'\n\nfunction MultipleModals-full() {\nconst [showModal, setShowModal] = React.useState(false)\nconst [showModal2, setShowModal2] = React.useState(false)\n\n  return (\n<>\n      <Center>\n        <Button onPress={() => setShowModal(true)}>\n          <ButtonText>Button</ButtonText>\n        </Button>\n      </Center>\n\n      <Modal isOpen={showModal} onClose={() => {\n    setShowModal(false);\n  }} size={\"full\"}>\n        <ModalBackdrop />\n        <ModalContent>\n          <ModalHeader>\n            <Heading>Order</Heading>\n            <ModalCloseButton>\n              <Icon as={CloseIcon} />\n            </ModalCloseButton>\n          </ModalHeader>\n          <ModalBody>\n            <VStack space=\"sm\">\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Sub Total</Text>\n                <Text color=\"\\$blueGray400\">\\$298.77</Text>\n              </HStack>\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Tax</Text>\n                <Text color=\"\\$blueGray400\">\\$38.84</Text>\n              </HStack>\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Total Amount</Text>\n                <Text color=\"\\$green500\">\\$337.61</Text>\n              </HStack>\n            </VStack>\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"outline\" action=\"secondary\" onPress={() => {\n          setShowModal(false);\n        }} sx={{\n          mr: '\\$3'\n        }}>\n              <ButtonText>Cancel</ButtonText>\n            </Button>\n            <Button onPress={() => {\n          setShowModal2(true);\n        }}>\n              <ButtonText>Continue</ButtonText>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n\n      <Modal isOpen={showModal2} onClose={() => {\n    setShowModal2(false);\n  }}>\n        <ModalBackdrop />\n        <ModalContent {...props}>\n          <ModalHeader>\n            <Heading>Order</Heading>\n            <ModalCloseButton>\n              <Icon as={CloseIcon} />\n            </ModalCloseButton>\n          </ModalHeader>\n          <ModalBody>\n            <Center h={100}>\n              <Heading>Second Modal</Heading>\n            </Center>\n          </ModalBody>\n          <ModalFooter>\n            <Button onPress={() => {\n          setShowModal2(false);\n        }}>\n              <ButtonText>Cancel</ButtonText>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default MultipleModals-full;\n"
        }
      ]
    }
  },
  {
    "name": "Popover",
    "description": "Popovers often provide contextual information or quick access to related actions without requiring the user to navigate to a different page or view.",
    "docs_path": "library/gluestack-ui/docs/popover.mdx",
    "docs": {
      "import": {
        "source": "popover",
        "code": "import { Popover } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "popover",
          "code": "<Popover>\n  <PopoverBackdrop />\n  <PopoverContent>\n    <PopoverHeader>\n      <PopoverCloseButton />\n    </PopoverHeader>\n    <PopoverBody />\n    <PopoverFooter />\n  </PopoverContent>\n</Popover>"
        }
      ],
      "examples": [
        {
          "source": "popover",
          "code": "import React from 'react'\nimport {\n  Popover,\n  Button,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverCloseButton\n} from '@gluestack-ui/themed'\n\nconst PopoverExample = () => {\n  return (\n    <Popover>\n      <PopoverContent>\n        <PopoverHeader>\n          <PopoverCloseButton />\n        </PopoverHeader>\n        <PopoverBody>\n          <p>Are you sure you want to continue?</p>\n        </PopoverBody>\n        <PopoverFooter>\n          <Button variant='ghost'>Cancel</Button>\n          <Button colorScheme='blue' ml={3}>\n            Apply\n          </Button>\n        </PopoverFooter>\n      </PopoverContent>\n    </Popover>\n  )\n}"
        },
        {
          "source": "popover",
          "code": "import React, { useState } from 'react'\nimport {\n        Center,\n        Text: PopoverText,\n        Heading,\n        Popover,\n        PopoverBackdrop,\n        PopoverContent,\n        PopoverHeader,\n        PopoverBody,\n        PopoverFooter,\n        PopoverCloseButton,\n        Button,\n        ButtonGroup,\n        ButtonText,\n        CloseIcon,\n        Icon,\n} from '@gluestack-ui/themed'\n\nconst PopoverExample = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const handleOpen = () => {\n    setIsOpen(true)\n  }\n  const handleClose = () => {\n    setIsOpen(false)\n  }\n  return (\n    <Popover\n      isOpen={isOpen}\n      onClose={handleClose}\n      onOpen={handleOpen}\n      {...props}\n      trigger={(triggerProps) => {\n        return (\n          <Button {...triggerProps}>\n            <ButtonText>Popover</ButtonText>\n          </Button>\n        )\n      }}\n    >\n      <PopoverBackdrop />\n      <PopoverContent>\n        <PopoverHeader>\n          <Heading size='lg'>Welcome!</Heading>\n          <PopoverCloseButton>\n            <Icon as={CloseIcon} />\n          </PopoverCloseButton>\n        </PopoverHeader>\n        <PopoverBody>\n          <Text size='sm'>\n            Join the product tour and start creating your own checklist. Are you\n            ready to jump in?\n          </Text>\n        </PopoverBody>\n        <PopoverFooter>\n          <Text size='xs' flex={1}>\n            Step 2 of 3\n          </Text>\n          <ButtonGroup space='md'>\n            <Button variant='outline' action='secondary' onPress={handleClose}>\n              <ButtonText>Back</ButtonText>\n            </Button>\n            <Button onPress={handleClose}>\n              <ButtonText>Next</ButtonText>\n            </Button>\n          </ButtonGroup>\n        </PopoverFooter>\n      </PopoverContent>\n    </Popover>\n  )\n}"
        },
        {
          "source": "popover",
          "code": "import React, { useState } from 'react'\nimport {\n        Box,\n        Heading,\n        Text: PopoverText,\n        Popover,\n        PopoverBackdrop,\n        PopoverContent,\n        PopoverHeader,\n        PopoverBody,\n        PopoverFooter,\n        PopoverCloseButton,\n        Pressable,\n        Button,\n        ButtonText,\n        HStack,\n        VStack,\n        CircleIcon,\n        PhoneIcon,\n        Clock3Icon,\n        MailIcon,\n        Avatar,\n        AvatarFallbackText,\n        Icon,\n} from '@gluestack-ui/themed'\n\nconst PopoverExample = () => {\n   return <Box h='$80'>\n        {\\/* PhoneIcon, Clock3Icon, MailIcon are imported from 'lucide-react-native' *\\/}\n          <Popover\n            trigger={(triggerProps) => {\n              return (\n                <HStack>\n                  <Pressable\n                    borderRadius='$full'\n                    {...triggerProps}\n                  >\n                    <Avatar bg='$indigo600'>\n                      <AvatarFallbackText >\n                        Kevin James\n                      </AvatarFallbackText>\n                    </Avatar>\n                  </Pressable>\n                  <VStack ml='$2.5'>\n                    <Heading fontSize='$md'>\n                      Kevin James\n                    </Heading>\n                    <Text size='sm'>\n                      Hi Rachel, What’s up?\n                    </Text>\n                  </VStack>\n                </HStack>\n              );\n            }}\n          >\n            <PopoverBackdrop/>\n            <PopoverContent w='$80'>\n              <PopoverHeader  px='$5' pt='$5'>\n                <HStack>\n                  <Avatar bg='$indigo600' >\n                    <AvatarFallbackText>\n                      Kevin James\n                    </AvatarFallbackText>\n                  </Avatar>\n                  <VStack ml='$2.5'>\n                    <Heading fontSize='$md'>\n                      Kevin James\n                    </Heading>\n                    <HStack alignItems='center'>\n                      <CircleIcon color='$green700' h='$2' w='$2'/>\n                      <Text size='sm'  pl='$1.5'>\n                        Active\n                      </Text>\n                    </HStack>\n                  </VStack>\n                </HStack>\n              </PopoverHeader>\n              <PopoverBody  px='$5' pb='$5'>\n                <VStack space='lg'>\n                  <VStack space='sm'>\n                    <HStack alignItems='center'>\n                      <Icon as={PhoneIcon} size='sm' />\n                      <Text size='sm'  ml='$1.5'>\n                        (603) 555-0123\n                      </Text>\n                    </HStack>\n                    <HStack alignItems='center'>\n                      <Icon as={Clock3Icon} size='sm'/>\n                      <Text size='sm'  ml='$1.5'>\n                        5:21 PM local time\n                      </Text>\n                    </HStack>\n                    <HStack alignItems='center'>\n                      <Icon as={MailIcon} size='sm'/>\n                      <Text size='sm'  ml='$1.5'>\n                        kevinjames@sample.com\n                      </Text>\n                    </HStack>\n                  </VStack>\n                  <Button bg='$darkBlue700' sx={{\n                    _dark:{\n                      bg:\"$darkBlue500\"\n                    }\n                  }}>\n                    <ButtonText>View Profile</ButtonText>\n                  </Button>\n                </VStack>\n              </PopoverBody>\n            </PopoverContent>\n          </Popover>\n        </Box>\n}"
        },
        {
          "source": "popover",
          "code": "import React from 'react'\nimport {useState} from 'react'\nimport {Text, Button, ButtonText, ButtonGroup, Popover, PopoverBackdrop, PopoverContent, PopoverHeader, PopoverBody, PopoverFooter, PopoverCloseButton, CloseIcon, Icon, Box, Center, Heading, Pressable, HStack, VStack, Avatar, AvatarFallbackText, CircleIcon, AddIcon} from '@gluestack-ui/themed'\nimport {PhoneIcon, Clock3Icon, MailIcon} from 'lucide-react-native'\n\nfunction PopoverBasic() {\n\n\n  return (\n<Center w={1200} h={800}>\n      <Popover size={size} offset={10} isOpen={showPopoverProp} placement={placement}\n  \n  trigger={triggerProps => {\n    return <Button {...triggerProps}>\n              <ButtonText>Popover</ButtonText>\n            </Button>;\n  }}>\n        <PopoverBackdrop />\n        <PopoverContent>\n          <PopoverHeader>\n            <Heading>Welcome!</Heading>\n            <PopoverCloseButton>\n              <Icon as={CloseIcon} />\n            </PopoverCloseButton>\n          </PopoverHeader>\n          <PopoverBody>\n            <Text>\n              Join the product tour and start creating your own checklist. Are\n              you ready to jump in?\n            </Text>\n          </PopoverBody>\n          <PopoverFooter>\n            <Text size=\"xs\" flex={1}>\n              Step 2 of 3\n            </Text>\n            {}\n            <ButtonGroup space=\"md\">\n              <Button variant=\"outline\" action=\"secondary\">\n                <ButtonText>Back</ButtonText>\n              </Button>\n              <Button>\n                <ButtonText>Next</ButtonText>\n              </Button>\n            </ButtonGroup>\n          </PopoverFooter>\n        </PopoverContent>\n      </Popover>\n    </Center>\n  );\n}\n\nexport default PopoverBasic;\n"
        }
      ]
    }
  },
  {
    "name": "Pressable",
    "description": "By providing access to hover, pressed, and focus events, Pressable serves as a more flexible alternative to buttons at a lower level of abstraction. It is a useful primitive for advanced customization needs.",
    "docs_path": "library/gluestack-ui/docs/pressable.mdx",
    "docs": {
      "import": {
        "source": "pressable",
        "code": "import { Pressable } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "pressable", "code": "<Pressable />" }],
      "examples": [
        {
          "source": "pressable",
          "code": "import React from 'react'\nimport { Pressable } from '@gluestack-ui/themed'\n\nconst PressableExample = () => {\n  return (\n    <Pressable\n      onPress={() => console.log('Hello')}\n      p='$5'\n      bg='$primary500'\n      sx={{ ':hover': { bg: '$primary400' } }}\n    >\n      <Text color='white'>Press me</Text>\n    </Pressable>\n  )\n}"
        },
        {
          "source": "pressable",
          "code": "import React from 'react'\nimport { Pressable, Text } from '@gluestack-ui/themed'\n\nconst PressableExample = () => {\n  return (\n    <Pressable\n      p='$16'\n      bg='$primary500'\n      sx={{ ':hover': { bg: '$primary400' } }}\n    >\n      {({ pressed }) => (\n        <Text color={pressed ? 'pink' : 'yellow'}>PRESSABLE</Text>\n      )}\n    </Pressable>\n  )\n}"
        },
        {
          "source": "pressable",
          "code": "import React from 'react'\nimport {Center, Pressable, Text} from '@gluestack-ui/themed'\n\nfunction PressableBasicPressable() {\n\n\n  return (\n<Pressable\n\nonPress={() => console.log('Hello')}  sx={{\n  h: 100,\n  w: 200\n}}>\n      <Center sx={{\n    h: '100%',\n    w: '100%',\n    bg: '\\$primary500'\n  }}>\n        <Text sx={{\n      color: '\\$white'\n    }}>PRESSABLE</Text>\n      </Center>\n    </Pressable>\n  );\n}\n\nexport default PressableBasicPressable;\n"
        },
        {
          "source": "pressable",
          "code": "import React from 'react'\nimport {Box, Text, LinearGradient, Button, ButtonIcon, Icon, EditIcon, Pressable} from '@gluestack-ui/themed'\n\nfunction LinearGradientPressable() {\n\n\n  return (\n\n  );\n}\n\nexport default LinearGradientPressable;\n"
        }
      ]
    }
  },
  {
    "name": "Progress",
    "description": "The Progress component is designed to display the progress of a task that involves multiple steps and takes some time to complete. It helps users stay informed about the current status of a lengthy process.",
    "docs_path": "library/gluestack-ui/docs/progress.mdx",
    "docs": {
      "import": {
        "source": "progress",
        "code": "import { Progress, ProgressFilledTrack } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "progress",
          "code": "<Progress>\n  <ProgressFilledTrack />\n</Progress>"
        }
      ],
      "examples": [
        {
          "source": "progress",
          "code": "import { Progress, ProgressFilledTrack } from '@gluestack-ui/themed'\n\nconst ProgressExample = () => {\n  return (\n    <Progress value={40} w={300} {...props}>\n      <ProgressFilledTrack />\n    </Progress>\n  )\n}"
        },
        {
          "source": "progress",
          "code": "import {\n  Progress,\n  ProgressFilledTrack,\n  VStack,\n  Text\n} from '@gluestack-ui/themed'\n\nconst ProgressExample = () => {\n  return (\n    <VStack space='lg'>\n      <Text size='lg'>Downloading 55%</Text>\n      <Progress value={55} w='$80' h='$1'>\n        <ProgressFilledTrack h='$1' />\n      </Progress>\n    </VStack>\n  )\n}"
        },
        {
          "source": "progress",
          "code": "import React from 'react'\nimport {Progress, ProgressFilledTrack, VStack, Text, Box, Heading, Center} from '@gluestack-ui/themed'\n\nfunction ProgressBasicProgress() {\n\n\n  return (\n<Center>\n      <Progress sx={{\n    w: 300,\n    _web: {\n      w: 800\n    }\n  }} value={value} size={\"md\"}>\n        <ProgressFilledTrack />\n      </Progress>\n    </Center>\n  );\n}\n\nexport default ProgressBasicProgress;\n"
        }
      ]
    }
  },
  {
    "name": "Provider",
    "description": "GluestackUIProvider component that can be used to configure the library. It consists of StyledProvider, OverlayProvider and ToastProvider internally.",
    "docs_path": "library/gluestack-ui/docs/provider.mdx",
    "docs": {
      "import": {
        "source": "provider",
        "code": "import { GluestackUIProvider } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "provider",
          "code": "<GluestackUIProvider>{children}</GluestackUIProvider>"
        }
      ],
      "examples": [
        {
          "source": "provider",
          "code": "import { GluestackUIStyledProvider, config } from '@gluestack-ui/themed'\n;<GluestackUIStyledProvider config={config.theme}>\n  <Button>\n    <ButtonText>Hello World</ButtonText>\n  </Button>\n</GluestackUIStyledProvider>"
        },
        {
          "source": "provider",
          "code": "import { OverlayProvider } from '@gluestack-ui/overlay'"
        },
        {
          "source": "provider",
          "code": "import { ToastProvider } from '@gluestack-ui/toast'"
        },
        {
          "source": "provider",
          "code": "import React from 'react'\nimport { createProvider } from '@gluestack-ui/provider'\nimport { StyledProvider } from '@gluestack-style/react'\nimport { OverlayProvider } from '@gluestack-ui/overlay'\nimport { ToastProvider } from '@gluestack-ui/toast'\n\nconst GluestackUIStyledProvider = createProvider({ StyledProvider })\n\nconst GluestackUIProvider = ({ children, ...props }: any) => {\n  return (\n    <GluestackUIStyledProvider {...props}>\n      <OverlayProvider>\n        <ToastProvider>{children}</ToastProvider>\n      </OverlayProvider>\n    </GluestackUIStyledProvider>\n  )\n}"
        },
        {
          "source": "provider",
          "code": "// import the createProvider function\nimport { createProvider } from '@gluestack-ui/provider'\nimport { config } from '../gluestack.config'\nimport { StyledProvider } from '@gluestack-style/react'\n\nexport const Provider = createProvider({\n  StyledProvider\n})\n\n// Using the Provider component\nexport default () => (\n  <Provider config={config.theme}>\n    <Text />\n  </Provider>\n)"
        },
        {
          "source": "provider",
          "code": "// import the createProvider function\nimport { StyledProvider } from '@gluestack-style/react'\nimport { OverlayProvider } from '@gluestack-ui/overlay'\nimport { ToastProvider } from '@gluestack-ui/toast'\n\nconst GluestackUIStyledProvider = createProvider({ StyledProvider })\n\nconst GluestackUIProvider = ({ children, ...props }: any) => {\n  return (\n    <GluestackUIStyledProvider {...props}>\n      <OverlayProvider>\n        <ToastProvider>{children}</ToastProvider>\n      </OverlayProvider>\n    </GluestackUIStyledProvider>\n  )\n}"
        },
        {
          "source": "provider",
          "code": "import React from 'react'\nimport {Button, ButtonText, GluestackUIProvider, Pressable, Text, Box} from '@gluestack-ui/themed'\nimport {config} from '@gluestack-ui/config'\n\nfunction ProviderStory() {\nconst [colorMode, setColorMode] = React.useState<'light' | 'dark' | undefined>('dark')\nconst toggleColorMode = async () => {\n  colorMode === 'light' ? setColorMode('dark') : setColorMode('light');\n}\n\n  return (\n\n  );\n}\n\nexport default ProviderStory;\n"
        }
      ]
    }
  },
  {
    "name": "Radio",
    "description": "The Radio component presents users with predefined choices and enables them to select only one option. It is commonly used for providing a single-choice selection in forms or surveys.",
    "docs_path": "library/gluestack-ui/docs/radio.mdx",
    "docs": {
      "import": {
        "source": "radio",
        "code": "import { Radio } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "radio",
          "code": "<RadioGroup>\n  <Radio>\n    <RadioIndicator>\n      <RadioIcon />\n    </RadioIndicator>\n    <RadioLabel />\n  </Radio>\n</RadioGroup>"
        }
      ],
      "examples": [
        {
          "source": "radio",
          "code": "import {\n  Radio,\n  RadioGroup,\n  RadioIndicator,\n  RadioLabel,\n  RadioIcon,\n  CircleIcon\n} from '@gluestack-ui/themed'\n\nconst RadioExample = (props) => {\n  return (\n    <RadioGroup>\n      <Radio value='change' {...props}>\n        <RadioIndicator mr='$2'>\n          <RadioIcon as={CircleIcon} strokeWidth={1} />\n        </RadioIndicator>\n        <RadioLabel>Label</RadioLabel>\n      </Radio>\n    </RadioGroup>\n  )\n}"
        },
        {
          "source": "radio",
          "code": "import {\n  Center,\n  VStack,\n  Radio,\n  RadioGroup,\n  RadioIcon,\n  RadioIndicator,\n  RadioLabel,\n  CircleIcon\n} from '@gluestack-ui/themed'\n\nconst RadioExample = (props) => {\n  const [values, setValues] = React.useState('Eng')\n  return (\n    <RadioGroup value={values} onChange={setValues}>\n      <VStack space='sm'>\n        <Radio value='Eng'>\n          <RadioIndicator mr='$2'>\n            <RadioIcon as={CircleIcon} />\n          </RadioIndicator>\n          <RadioLabel>English</RadioLabel>\n        </Radio>\n        <Radio value='Fre'>\n          <RadioIndicator mr='$2'>\n            <RadioIcon as={CircleIcon} />\n          </RadioIndicator>\n          <RadioLabel>French</RadioLabel>\n        </Radio>\n        <Radio value='Ger'>\n          <RadioIndicator mr='$2'>\n            <RadioIcon as={CircleIcon} />\n          </RadioIndicator>\n          <RadioLabel>German</RadioLabel>\n        </Radio>\n      </VStack>\n    </RadioGroup>\n  )\n}"
        },
        {
          "source": "radio",
          "code": "import React from 'react'\nimport {Center, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, VStack, HStack, Box, Heading, Text, FormControl, CircleIcon} from '@gluestack-ui/themed'\n\nfunction RadioBasic-isInvalid-isDisabled() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup value={values} onChange={setValues}>\n      <Radio size={\"md\"} isInvalid={true} isDisabled={true} value=\"Label 1\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 1\n        </RadioLabel>\n      </Radio>\n      <Radio {...props} value=\"Label 2\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 2\n        </RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioBasic-isInvalid-isDisabled;\n"
        },
        {
          "source": "radio",
          "code": "import React from 'react'\nimport {Center, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, VStack, HStack, Box, Heading, Text, FormControl, CircleIcon} from '@gluestack-ui/themed'\n\nfunction RadioBasic-isInvalid() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup value={values} onChange={setValues}>\n      <Radio size={\"md\"} isInvalid={true} isDisabled={false} value=\"Label 1\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 1\n        </RadioLabel>\n      </Radio>\n      <Radio {...props} value=\"Label 2\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 2\n        </RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioBasic-isInvalid;\n"
        },
        {
          "source": "radio",
          "code": "import React from 'react'\nimport {Center, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, VStack, HStack, Box, Heading, Text, FormControl, CircleIcon} from '@gluestack-ui/themed'\n\nfunction RadioBasic-isDisabled() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup value={values} onChange={setValues}>\n      <Radio size={\"md\"} isInvalid={false} isDisabled={true} value=\"Label 1\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 1\n        </RadioLabel>\n      </Radio>\n      <Radio {...props} value=\"Label 2\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 2\n        </RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioBasic-isDisabled;\n"
        },
        {
          "source": "radio",
          "code": "import React from 'react'\nimport {Center, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, VStack, HStack, Box, Heading, Text, FormControl, CircleIcon} from '@gluestack-ui/themed'\n\nfunction RadioBasicRadio() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup value={values} onChange={setValues}>\n      <Radio size={\"md\"} isInvalid={false} isDisabled={false} value=\"Label 1\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 1\n        </RadioLabel>\n      </Radio>\n      <Radio {...props} value=\"Label 2\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 2\n        </RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioBasicRadio;\n"
        },
        {
          "source": "radio",
          "code": "import React from 'react'\nimport {CircleIcon, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel} from '@gluestack-ui/themed'\n\nfunction RadioGroupBasic-isInvalid-isDisabled() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup isDisabled={isDisabled} isReadOnly={isReadOnly} value={values} onChange={setValues}>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 1\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} size={\"md\"} isInvalid={true} isDisabled={true}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 1</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 2\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 2</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 3\" accessibilityLabel=\"Radio\" onChange={(isSelected: boolean) => console.log(isSelected, 'isSelected')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 3</RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioGroupBasic-isInvalid-isDisabled;\n"
        },
        {
          "source": "radio",
          "code": "import React from 'react'\nimport {CircleIcon, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel} from '@gluestack-ui/themed'\n\nfunction RadioGroupBasic-isInvalid() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup isDisabled={isDisabled} isReadOnly={isReadOnly} value={values} onChange={setValues}>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 1\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} size={\"md\"} isInvalid={true} isDisabled={false}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 1</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 2\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 2</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 3\" accessibilityLabel=\"Radio\" onChange={(isSelected: boolean) => console.log(isSelected, 'isSelected')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 3</RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioGroupBasic-isInvalid;\n"
        },
        {
          "source": "radio",
          "code": "import React from 'react'\nimport {CircleIcon, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel} from '@gluestack-ui/themed'\n\nfunction RadioGroupBasic-isDisabled() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup isDisabled={isDisabled} isReadOnly={isReadOnly} value={values} onChange={setValues}>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 1\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} size={\"md\"} isInvalid={false} isDisabled={true}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 1</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 2\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 2</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 3\" accessibilityLabel=\"Radio\" onChange={(isSelected: boolean) => console.log(isSelected, 'isSelected')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 3</RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioGroupBasic-isDisabled;\n"
        },
        {
          "source": "radio",
          "code": "import React from 'react'\nimport {CircleIcon, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel} from '@gluestack-ui/themed'\n\nfunction RadioGroupBasicRadio() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup isDisabled={isDisabled} isReadOnly={isReadOnly} value={values} onChange={setValues}>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 1\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} size={\"md\"} isInvalid={false} isDisabled={false}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 1</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 2\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 2</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 3\" accessibilityLabel=\"Radio\" onChange={(isSelected: boolean) => console.log(isSelected, 'isSelected')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 3</RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioGroupBasicRadio;\n"
        }
      ]
    }
  },
  {
    "name": "Slider",
    "description": "The Slider component enables an intuitive selection of values within a designated range. Users can easily adjust their selection by sliding a visual indicator along the track.",
    "docs_path": "library/gluestack-ui/docs/slider.mdx",
    "docs": {
      "import": {
        "source": "slider",
        "code": "import {\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb\n} from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "slider",
          "code": "<Slider>\n  <SliderTrack>\n    <SliderFilledTrack />\n  </SliderTrack>\n  <SliderThumb />\n</Slider>"
        }
      ],
      "examples": [
        {
          "source": "slider",
          "code": "import React from 'react'\nimport {\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  Center\n} from '@gluestack-ui/themed'\n\nexport default function SliderExample() {\n  return (\n    <Center w={300} h={100}>\n      <Slider defaultValue={30} {...props}>\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Center>\n  )\n}"
        },
        {
          "source": "slider",
          "code": "import React, { useState } from 'react'\nimport {\n  Box,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  Center\n} from '@gluestack-ui/themed'\n\nexport default function SliderExample() {\n  const [sliderValue, setSliderValue] = React.useState(45)\n  const handleChange = (value) => {\n    setSliderValue(value)\n  }\n  return (\n    <Center w='$80'>\n      <Slider\n        sliderTrackHeight={4}\n        value={sliderValue}\n        orientation='vertical'\n        h={120}\n        onChange={(value) => {\n          handleChange(value)\n        }}\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Center>\n  )\n}"
        },
        {
          "source": "slider",
          "code": "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-vertical-true-isDisabled() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"vertical\"} isReversed={true} isDisabled={true} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-vertical-true-isDisabled;\n"
        },
        {
          "source": "slider",
          "code": "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-vertical-true() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"vertical\"} isReversed={true} isDisabled={false} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-vertical-true;\n"
        },
        {
          "source": "slider",
          "code": "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-vertical-isDisabled() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"vertical\"} isReversed={false} isDisabled={true} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-vertical-isDisabled;\n"
        },
        {
          "source": "slider",
          "code": "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-vertical() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"vertical\"} isReversed={false} isDisabled={false} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-vertical;\n"
        },
        {
          "source": "slider",
          "code": "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-true-isDisabled() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"horizontal\"} isReversed={true} isDisabled={true} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-true-isDisabled;\n"
        },
        {
          "source": "slider",
          "code": "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-true() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"horizontal\"} isReversed={true} isDisabled={false} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-true;\n"
        },
        {
          "source": "slider",
          "code": "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-isDisabled() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"horizontal\"} isReversed={false} isDisabled={true} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-isDisabled;\n"
        },
        {
          "source": "slider",
          "code": "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasicSlider() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"horizontal\"} isReversed={false} isDisabled={false} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasicSlider;\n"
        }
      ]
    }
  },
  {
    "name": "Spinner",
    "description": "Spinners are designed to give visual cues to users that an action is being processed or that a change or result is expected. They are useful for improving the user experience by reducing frustration and uncertainty.",
    "docs_path": "library/gluestack-ui/docs/spinner.mdx",
    "docs": {
      "import": {
        "source": "spinner",
        "code": "import { Spinner } from '@gluestack-ui/themed'\nexport default () => <Spinner />"
      },
      "use": [{ "source": "spinner", "code": "<Spinner />" }],
      "examples": [
        {
          "source": "spinner",
          "code": "import { Spinner } from '@gluestack-ui/themed'\nexport default () => <Spinner />"
        },
        {
          "source": "spinner",
          "code": "import { Spinner } from '@gluestack-ui/themed'\n\nconst ExampleSpinner = () => (\n  <VStack space='md'>\n    <Spinner color='$indigo600' />\n    <Spinner color='$emerald600' />\n    <Spinner color='$amber600' />\n    <Spinner color='$fuchsia600' />\n  </VStack>\n)"
        },
        {
          "source": "spinner",
          "code": "import React from 'react'\nimport {Spinner, HStack, Text, VStack} from '@gluestack-ui/themed'\n\nfunction SpinnerBasic() {\n\n\n  return (\n\n  );\n}\n\nexport default SpinnerBasic;\n"
        }
      ]
    }
  },
  {
    "name": "Switch",
    "description": "The Switch component offers a stylish alternative to the Checkbox, allowing users to enable or disable an option with a sleek sliding motion. This component is perfect for adding a touch of elegance and interactivity to your user interface.",
    "docs_path": "library/gluestack-ui/docs/switch.mdx",
    "docs": {
      "import": {
        "source": "switch",
        "code": "import { Switch } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "switch", "code": "<Switch />" }],
      "examples": [
        {
          "source": "switch",
          "code": "import { Switch } from '@gluestack-ui/themed'\n\nconst switchExample = () => {\n  const [checked, setChecked] = React.useState(false)\n\n  return (\n    <>\n      <Switch\n        checked={checked}\n        onChange={() => setChecked(!checked)}\n        label='Switch'\n      />\n      <Switch\n        checked={checked}\n        onChange={() => setChecked(!checked)}\n        label='Switch'\n        disabled\n      />\n    </>\n  )\n}"
        },
        {
          "source": "switch",
          "code": "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-isDisabled-true-isInvalid() {\n\n\n  return (\n<Switch defaultValue={true} value={true} size={\"md\"} isDisabled={true} isEnabled={true} isInvalid={true} />\n  );\n}\n\nexport default SwitchBasic-isDisabled-true-isInvalid;\n"
        },
        {
          "source": "switch",
          "code": "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-isDisabled-true() {\n\n\n  return (\n<Switch defaultValue={true} value={true} size={\"md\"} isDisabled={true} isEnabled={true} isInvalid={false} />\n  );\n}\n\nexport default SwitchBasic-isDisabled-true;\n"
        },
        {
          "source": "switch",
          "code": "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-isDisabled-isInvalid() {\n\n\n  return (\n<Switch defaultValue={true} value={false} size={\"md\"} isDisabled={true} isEnabled={false} isInvalid={true} />\n  );\n}\n\nexport default SwitchBasic-isDisabled-isInvalid;\n"
        },
        {
          "source": "switch",
          "code": "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-isDisabled() {\n\n\n  return (\n<Switch defaultValue={true} value={false} size={\"md\"} isDisabled={true} isEnabled={false} isInvalid={false} />\n  );\n}\n\nexport default SwitchBasic-isDisabled;\n"
        },
        {
          "source": "switch",
          "code": "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-true-isInvalid() {\n\n\n  return (\n<Switch defaultValue={true} value={true} size={\"md\"} isDisabled={false} isEnabled={true} isInvalid={true} />\n  );\n}\n\nexport default SwitchBasic-true-isInvalid;\n"
        },
        {
          "source": "switch",
          "code": "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-true() {\n\n\n  return (\n<Switch defaultValue={true} value={true} size={\"md\"} isDisabled={false} isEnabled={true} isInvalid={false} />\n  );\n}\n\nexport default SwitchBasic-true;\n"
        },
        {
          "source": "switch",
          "code": "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-isInvalid() {\n\n\n  return (\n<Switch defaultValue={true} value={false} size={\"md\"} isDisabled={false} isEnabled={false} isInvalid={true} />\n  );\n}\n\nexport default SwitchBasic-isInvalid;\n"
        },
        {
          "source": "switch",
          "code": "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasicSwitch() {\n\n\n  return (\n<Switch defaultValue={true} value={false} size={\"md\"} isDisabled={false} isEnabled={false} isInvalid={false} />\n  );\n}\n\nexport default SwitchBasicSwitch;\n"
        }
      ]
    }
  },
  {
    "name": "Text",
    "description": "Looking to add text to your gluestack-ui project? Check out our text component, which supports paragraphs and other formatting options.",
    "docs_path": "library/gluestack-ui/docs/text.mdx",
    "docs": {
      "import": {
        "source": "text",
        "code": "import { Text } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "text", "code": "<Text>Text</Text>" }],
      "examples": [
        {
          "source": "text",
          "code": "import { Text } from '@gluestack-ui/themed'\n\nconst Example = () => <Text>Hello World!</Text>"
        },
        {
          "source": "text",
          "code": "import { Text } from '@gluestack-ui/themed'\n\nconst Example = () => {\n  const sizes = [\n    'xs',\n    'sm',\n    'md',\n    'lg',\n    'xl',\n    '2xl',\n    '3xl',\n    '4xl',\n    '5xl',\n    '6xl'\n  ]\n  return (\n    <Center>\n      {sizes.map((size) => (\n        <Text size={size}>{size}</Text>\n      ))}\n    </Center>\n  )\n}"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isInvalid-isDisabled() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={true} isDisabled={true} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isInvalid-isDisabled;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isInvalid() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={true} isDisabled={false} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isInvalid;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isDisabled() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={false} isDisabled={true} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isDisabled;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasicTextarea() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={false} isDisabled={false} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasicTextarea;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-hairline() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"hairline\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-hairline;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-thin() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"thin\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-thin;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-light() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"light\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-light;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-normal() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"normal\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-normal;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasicText() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"medium\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasicText;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-semibold() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"semibold\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-semibold;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-bold() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"bold\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-bold;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-extrabold() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"extrabold\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-extrabold;\n"
        },
        {
          "source": "text",
          "code": "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-black() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"black\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-black;\n"
        }
      ]
    }
  },
  {
    "name": "Textarea",
    "description": "The Textarea component is designed to accommodate larger amounts of text input. It allows multi-line input and can be easily customized to fit the user's needs.",
    "docs_path": "library/gluestack-ui/docs/textarea.mdx",
    "docs": {
      "import": {
        "source": "textarea",
        "code": "import { Textarea } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "textarea",
          "code": "<Textarea>\n  <TextareaInput />\n</Textarea>"
        }
      ],
      "examples": [
        {
          "source": "textarea",
          "code": "import { Textarea } from '@gluestack-ui/themed'\n\nconst TextAreaExample = () => {\n  return (\n    <Textarea>\n      <TextareaInput placeholder='Your text goes here...' />\n    </Textarea>\n  )\n}"
        },
        {
          "source": "textarea",
          "code": "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isInvalid-isDisabled() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={true} isDisabled={true} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isInvalid-isDisabled;\n"
        },
        {
          "source": "textarea",
          "code": "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isInvalid() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={true} isDisabled={false} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isInvalid;\n"
        },
        {
          "source": "textarea",
          "code": "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isDisabled() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={false} isDisabled={true} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isDisabled;\n"
        },
        {
          "source": "textarea",
          "code": "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasicTextarea() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={false} isDisabled={false} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasicTextarea;\n"
        }
      ]
    }
  },
  {
    "name": "Toast",
    "description": "Toast is a component that can display alerts, notifications, or messages on top of an overlay layer. It is commonly used to inform users of important information or actions.",
    "docs_path": "library/gluestack-ui/docs/toast.mdx",
    "docs": {
      "import": {
        "source": "toast",
        "code": "import { Toast, ToastTitle, ToastDescription } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "toast",
          "code": "<Toast>\n  <ToastTitle />\n  <ToastDescription />\n</Toast>"
        }
      ],
      "examples": [
        {
          "source": "toast",
          "code": "import {\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  useToast\n} from '@gluestack-ui/themed'\n\nconst Example = () => {\n  const toast = useToast()\n  return (\n    <Button\n      onPress={() => {\n        toast.show({\n          placement: 'top',\n          render: ({ id }) => {\n            return (\n              <Toast nativeID={id} {...props}>\n                <VStack space='xs'>\n                  <ToastTitle>New Message</ToastTitle>\n                  <ToastDescription>\n                    Hey, just wanted to touch base and see how you're doing.\n                    Let's catch up soon!\n                  </ToastDescription>\n                </VStack>\n              </Toast>\n            )\n          }\n        })\n      }}\n    >\n      <ButtonText>Press Me</ButtonText>\n    </Button>\n  )\n}"
        },
        {
          "source": "toast",
          "code": "import {\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  useToast,\n  Text,\n  Button,\n  ButtonText,\n  VStack,\n  Center\n} from '@gluestack-ui/themed'\n\nconst Example = () => {\n  const toast = useToast()\n  const toastActions = [\n    {\n      actionType: 'info',\n      title: 'Info',\n      description:\n        'Your order has been received and is being processed. You will receive a confirmation email shortly.'\n    },\n    {\n      actionType: 'success',\n      title: 'Success!',\n      description: 'Your changes have been saved successfully.'\n    },\n    {\n      actionType: 'warning',\n      title: 'Warning!',\n      description:\n        'Your account subscription will expire in 5 days. Please renew your subscription to avoid interruption of service.'\n    },\n    {\n      actionType: 'error',\n      title: 'Error!',\n      description:\n        'There was an error processing your request. Please try again later.'\n    },\n    {\n      actionType: 'attention',\n      title: 'Attention!',\n      description:\n        'Please review and accept our updated terms and conditions before continuing to use the application.'\n    }\n  ]\n  return (\n    <Center h='$80'>\n      <VStack space='md'>\n        {toastActions.map((action, index) => {\n          return (\n            <Button\n              key={index}\n              onPress={() => {\n                toast.show({\n                  placement: 'top',\n                  render: ({ id }) => {\n                    return (\n                      <Toast nativeID={id} action={action.actionType}>\n                        <VStack space='xs'>\n                          <ToastTitle>{action.title}</ToastTitle>\n                          <ToastDescription>\n                            {action.description}\n                          </ToastDescription>\n                        </VStack>\n                      </Toast>\n                    )\n                  }\n                })\n              }}\n            >\n              <ButtonText>{action.actionType}</ButtonText>\n            </Button>\n          )\n        })}\n      </VStack>\n    </Center>\n  )\n}"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacementToast() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacementToast;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastDuplicatePrevent() {\nconst toast = useToast()\nconst idTest = 'test-id'\n\n  return (\n<Toast>\n                  <ToastTitle>\n                    Hello World Toast {id}\n                  </ToastTitle>\n                </Toast>\n  );\n}\n\nexport default ToastDuplicatePrevent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasicToast() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasicToast;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-error;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-error-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-error-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-warning;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-warning-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-warning-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-success;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-success-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-success-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-info;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-info-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-info-accent;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-outline;\n"
        },
        {
          "source": "toast",
          "code": "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-accent;\n"
        }
      ]
    }
  },
  {
    "name": "Tooltip",
    "description": "Whether you need to provide helpful hints to new users or display extra details for power users, the Tooltip component is a simple and effective way.",
    "docs_path": "library/gluestack-ui/docs/tooltip.mdx",
    "docs": {
      "import": {
        "source": "tooltip",
        "code": "import { Tooltip } from '@gluestack-ui/themed'"
      },
      "use": [
        {
          "source": "tooltip",
          "code": "<Tooltip>\n  <TooltipContent>\n    <TooltipText />\n  </TooltipContent>\n</Tooltip>"
        }
      ],
      "examples": [
        {
          "source": "tooltip",
          "code": "import React from 'react'\nimport { Tooltip, TooltipContent, TooltipText } from '@gluestack-ui/themed'\nconst TooltipExample = (props) => (\n  <Tooltip\n    {...props}\n    trigger={(triggerProps) => {\n      return (\n        <Button h='$24' {...triggerProps}>\n          <ButtonText>Hover on me!</ButtonText>\n        </Button>\n      )\n    }}\n  >\n    <TooltipContent>\n      <TooltipText>Tooltip</TooltipText>\n    </TooltipContent>\n  </Tooltip>\n)"
        },
        {
          "source": "tooltip",
          "code": "import React from 'react'\nimport {\n  Avatar,\n  AvatarGroup,\n  AvatarFallbackText,\n  Wrapper,\n  HStack,\n  Tooltip,\n  TooltipContent,\n  TooltipText,\n  Text,\n  Box,\n  Heading,\n  VStack,\n  Center\n} from '@gluestack-ui/themed'\nconst TooltipExample = (props) => {\n  const avatars = [\n    {\n      src: 'https://example.com.jpg',\n      alt: 'Sandeep Srivastva',\n      color: '$emerald600'\n    },\n    { src: 'https://example.com.jpg', alt: 'Arjun Kapoor', color: '$cyan600' },\n    {\n      src: 'https://example.com.jpg',\n      alt: 'Ritik Sharma ',\n      color: '$indigo600'\n    }\n  ]\n  return (\n    <Box h='$96' justifyContent='center'>\n      <AvatarGroup flexDirection='row'>\n        <Tooltip\n          placement={'top'}\n          trigger={(triggerProps) => {\n            return (\n              <Avatar\n                size='lg'\n                color='$white'\n                borderColor='$white'\n                borderWidth='$2'\n                sx={{ _dark: { borderColor: '$black' } }}\n                {...triggerProps}\n              >\n                <AvatarFallbackText>+ 3</AvatarFallbackText>\n              </Avatar>\n            )\n          }}\n        >\n          <TooltipContent\n            p='$5'\n            maxWidth='$72'\n            sx={{\n              bg: '$white',\n              _dark: {\n                bg: '$backgroundDark900'\n              }\n            }}\n          >\n            <VStack boderRadius='$2' space='md'>\n              <Heading size='sm' lineHeight='$md'>\n                View all members of this channel\n              </Heading>\n              <Center>\n                <Text fontSize='$sm' lineHeight='$md'>\n                  Includes John, Sarah, Mike, Emily\n                </Text>\n                <Text fontSize='$sm' lineHeight='$md'>\n                  and David\n                </Text>\n              </Center>\n            </VStack>\n          </TooltipContent>\n        </Tooltip>\n        {avatars.map((avatar, index) => {\n          return (\n            <Avatar\n              key={index}\n              size='lg'\n              borderColor='$white'\n              borderWidth='$2'\n              bgColor={avatar.color}\n              sx={{ _dark: { borderColor: '$black' } }}\n            >\n              <AvatarFallbackText>{avatar.alt}</AvatarFallbackText>\n            </Avatar>\n          )\n        })}\n      </AvatarGroup>\n    </Box>\n  )\n}"
        },
        {
          "source": "tooltip",
          "code": "import React from 'react'\nimport {\n  Avatar,\n  AvatarFallbackText,\n  HStack,\n  Tooltip,\n  TooltipContent,\n  TooltipText,\n  Text,\n  Box,\n  Edit,\n  Icon\n} from '@gluestack-ui/themed'\nconst TooltipExample = (props) => {\n  return (\n    <Box h='$96' justifyContent='center'>\n      <Tooltip\n        placement={'top'}\n        trigger={(triggerProps) => {\n          return (\n            <Avatar size='md' {...triggerProps} bg='$indigo600'>\n              <Icon as={Edit} color='$white' size='sm' />\n            </Avatar>\n          )\n        }}\n      >\n        <TooltipContent\n          sx={{\n            bg: '$white',\n            _dark: {\n              bg: '$backgroundDark900'\n            }\n          }}\n        >\n          <Box p='$2.5' boderRadius='$2'>\n            <Text size='sm'>New message</Text>\n            <HStack space='xs' p='$1' ml='$3'>\n              <Avatar size='xs' bg='$trueGray500' rounded='$sm'>\n                <Icon as={Command} color='$white' />\n              </Avatar>\n              <Avatar size='xs' bg='$trueGray500' rounded='$sm'>\n                <AvatarFallbackText>N</AvatarFallbackText>\n              </Avatar>\n            </HStack>\n          </Box>\n        </TooltipContent>\n      </Tooltip>\n    </Box>\n  )\n}"
        },
        {
          "source": "tooltip",
          "code": "import React from 'react'\nimport {Center, Button, ButtonText, Tooltip, TooltipContent, TooltipText, Text, Avatar, AvatarGroup, AvatarFallbackText, Box, Heading, VStack, HStack, Icon} from '@gluestack-ui/themed'\nimport {Edit, Command} from 'lucide-react-native'\n\nfunction TooltipBasic() {\n\n\n  return (\n<Tooltip offset={10} placement={placement} isOpen={showTooltipProp}\n\ntrigger={(triggerProps: any) => {\n  return <Button {...triggerProps}>\n            <ButtonText>More</ButtonText>\n          </Button>;\n}}>\n      <TooltipContent>\n        <TooltipText>{text}</TooltipText>\n      </TooltipContent>\n    </Tooltip>\n  );\n}\n\nexport default TooltipBasic;\n"
        }
      ]
    }
  },
  {
    "name": "VStack",
    "description": "VStack organizes items vertically in a layout. Alternatively, you can use Column as an alias for VStack to achieve the same layout.",
    "docs_path": "library/gluestack-ui/docs/vstack.mdx",
    "docs": {
      "import": {
        "source": "vstack",
        "code": "import { VStack } from '@gluestack-ui/themed'"
      },
      "use": [{ "source": "vstack", "code": "<VStack />" }],
      "examples": [
        {
          "source": "vstack",
          "code": "import { VStack } from '@gluestack-ui/themed'\n\nconst VstackExample = () => (\n  <VStack>\n    <Box bg='primary.500' w='100%' h='40px' />\n    <Box bg='primary.500' w='100%' h='40px' />\n    <Box bg='primary.500' w='100%' h='40px' />\n  </VStack>\n)"
        },
        {
          "source": "vstack",
          "code": "import React from 'react'\nimport {VStack, Box} from '@gluestack-ui/themed'\n\nfunction VStackBasicVStack() {\n\n\n  return (\n<VStack space={space}\n\nsx={{\n  justifyContent: 'center',\n  alignItems: 'center'\n}} reversed={reversed} space={\"md\"}>\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue300'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue400'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue500'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue600'\n  }} />\n    </VStack>\n  );\n}\n\nexport default VStackBasicVStack;\n"
        }
      ]
    }
  }
]
