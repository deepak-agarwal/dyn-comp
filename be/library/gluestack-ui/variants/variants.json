{
  "badge": [
    "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-outline-error() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"outline\"} action={\"error\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-outline-error;\n",
    "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-outline-warning() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"outline\"} action={\"warning\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-outline-warning;\n",
    "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-outline-success() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"outline\"} action={\"success\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-outline-success;\n",
    "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-outline-info() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"outline\"} action={\"info\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-outline-info;\n",
    "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-outline() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"outline\"} action={\"muted\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-outline;\n",
    "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-error() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"solid\"} action={\"error\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-error;\n",
    "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-warning() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"solid\"} action={\"warning\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-warning;\n",
    "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-success() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"solid\"} action={\"success\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-success;\n",
    "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasic-info() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"solid\"} action={\"info\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasic-info;\n",
    "import React from 'react'\nimport {Center, Badge, BadgeText, BadgeIcon, Icon, Box, Text, VStack, HStack, SettingsIcon, Divider, AddIcon, Image, CheckIcon, Heading, Avatar, AvatarFallbackText, AvatarImage, Button, ButtonText, Menu, MenuIcon, MenuItem, MenuItemLabel, GlobeIcon} from '@gluestack-ui/themed'\nimport {PaintBucket, PuzzleIcon, BadgeCheckIcon, BadgePlusIcon} from 'lucide-react-native'\n\nfunction BadgeBasicBadge() {\nlet badgeIconAndTextSize = ''\n\n  return (\n<Badge variant={\"solid\"} action={\"muted\"} size={\"md\"}>\n      <BadgeText>\n        {text}\n      </BadgeText>\n      <BadgeIcon ml=\"\\$1\" as={GlobeIcon} />\n    </Badge>\n  );\n}\n\nexport default BadgeBasicBadge;\n"
  ],
  "divider": [
    "import React from 'react'\nimport {Text, Divider, VStack, HStack, Box, Center, Heading, Button, ButtonText} from '@gluestack-ui/themed'\n\nfunction DividerBasicDivider() {\n\n\n  return (\n<HStack flexDirection={props.orientation === 'vertical' ? 'row' : 'column'} h={props.orientation === 'vertical' ? 30 : 'auto'} alignItems=\"center\" justifyContent=\"center\">\n      <Heading size=\"sm\" fontWeight=\"\\$semibold\">\n        Firefox\n      </Heading>\n      <Divider orientation={\"vertical\"} m=\"\\$3\" />\n      <Heading size=\"sm\" fontWeight=\"\\$semibold\">\n        Chrome\n      </Heading>\n    </HStack>\n  );\n}\n\nexport default DividerBasicDivider;\n",
    "import React from 'react'\nimport {Text, Divider, VStack, HStack, Box, Center, Heading, Button, ButtonText} from '@gluestack-ui/themed'\n\nfunction DividerBasic-horizontal() {\n\n\n  return (\n<HStack flexDirection={props.orientation === 'vertical' ? 'row' : 'column'} h={props.orientation === 'vertical' ? 30 : 'auto'} alignItems=\"center\" justifyContent=\"center\">\n      <Heading size=\"sm\" fontWeight=\"\\$semibold\">\n        Firefox\n      </Heading>\n      <Divider orientation={\"horizontal\"} m=\"\\$3\" />\n      <Heading size=\"sm\" fontWeight=\"\\$semibold\">\n        Chrome\n      </Heading>\n    </HStack>\n  );\n}\n\nexport default DividerBasic-horizontal;\n"
  ],
  "icon": [
    "import React from 'react'\nimport {useEffect} from 'react'\nimport {Actionsheet, ActionsheetBackdrop, ActionsheetContent, ActionsheetDragIndicator, ActionsheetDragIndicatorWrapper, ActionsheetItem, ActionsheetItemText, ActionsheetIcon, Button, Icon, TrashIcon, ShareIcon, PlayIcon, FavouriteIcon, CloseIcon} from '@gluestack-ui/themed'\n\nfunction ActionsheetWithIcon() {\nconst [showActionsheet, setShowActionsheet] = React.useState(props.showActionsheet)\nconst handleClose = () => setShowActionsheet(false)\n\n  return (\n<Actionsheet isOpen={showActionsheet || showActionsheetProp} onClose={handleClose} {...props}>\n      <ActionsheetBackdrop />\n      <ActionsheetContent>\n        <ActionsheetDragIndicatorWrapper>\n          <ActionsheetDragIndicator />\n        </ActionsheetDragIndicatorWrapper>\n        <ActionsheetItem onPress={handleClose}>\n          <ActionsheetIcon as={TrashIcon} />\n          <ActionsheetItemText>\n            Delete\n          </ActionsheetItemText>\n        </ActionsheetItem>\n        <ActionsheetItem onPress={handleClose}>\n          <ActionsheetIcon as={ShareIcon} />\n          <ActionsheetItemText>\n            Share\n          </ActionsheetItemText>\n        </ActionsheetItem>\n        <ActionsheetItem onPress={handleClose}>\n          <ActionsheetIcon as={PlayIcon} />\n          <ActionsheetItemText>\n            Play\n          </ActionsheetItemText>\n        </ActionsheetItem>\n        <ActionsheetItem onPress={handleClose}>\n          <ActionsheetIcon as={FavouriteIcon} />\n          <ActionsheetItemText>\n            Favourite\n          </ActionsheetItemText>\n        </ActionsheetItem>\n        <ActionsheetItem onPress={handleClose}>\n          <ActionsheetIcon as={CloseIcon} />\n          <ActionsheetItemText>\n            Cancel\n          </ActionsheetItemText>\n        </ActionsheetItem>\n      </ActionsheetContent>\n    </Actionsheet>\n  );\n}\n\nexport default ActionsheetWithIcon;\n",
    "import React from 'react'\nimport {AddIcon, InfoIcon, HStack, Button, ButtonIcon, ButtonText} from '@gluestack-ui/themed'\n\nfunction ButtonWithIcons() {\n\n\n  return (\n<HStack space=\"md\">\n      <Button>\n        <ButtonIcon as={InfoIcon} mr=\"\\$2\" />\n        <ButtonText>LeftIcon</ButtonText>\n      </Button>\n      <Button variant=\"solid\">\n        <ButtonText>RightIcon</ButtonText>\n        <ButtonIcon as={AddIcon} ml=\"\\$2\" />\n      </Button>\n    </HStack>\n  );\n}\n\nexport default ButtonWithIcons;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isInvalid;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIconInput() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIconInput;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isInvalid;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isInvalid;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasicIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"AddIcon\"} />\n  );\n}\n\nexport default IconBasicIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-AlertCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"AlertCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-AlertCircleIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ArrowUpIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ArrowUpIcon\"} />\n  );\n}\n\nexport default IconBasic-ArrowUpIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ArrowDownIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ArrowDownIcon\"} />\n  );\n}\n\nexport default IconBasic-ArrowDownIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ArrowRightIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ArrowRightIcon\"} />\n  );\n}\n\nexport default IconBasic-ArrowRightIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ArrowLeftIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ArrowLeftIcon\"} />\n  );\n}\n\nexport default IconBasic-ArrowLeftIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-AtSignIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"AtSignIcon\"} />\n  );\n}\n\nexport default IconBasic-AtSignIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-BellIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"BellIcon\"} />\n  );\n}\n\nexport default IconBasic-BellIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CalendarDaysIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CalendarDaysIcon\"} />\n  );\n}\n\nexport default IconBasic-CalendarDaysIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CheckIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CheckIcon\"} />\n  );\n}\n\nexport default IconBasic-CheckIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CheckCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CheckCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-CheckCircleIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronUpIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronUpIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronUpIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronDownIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronDownIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronDownIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronLeftIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronLeftIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronLeftIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronRightIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronRightIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronRightIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronsLeftIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronsLeftIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronsLeftIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronsRightIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronsRightIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronsRightIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ChevronsUpDownIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ChevronsUpDownIcon\"} />\n  );\n}\n\nexport default IconBasic-ChevronsUpDownIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CircleIcon\"} />\n  );\n}\n\nexport default IconBasic-CircleIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ClockIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ClockIcon\"} />\n  );\n}\n\nexport default IconBasic-ClockIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CloseIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CloseIcon\"} />\n  );\n}\n\nexport default IconBasic-CloseIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CloseCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CloseCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-CloseCircleIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-CopyIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"CopyIcon\"} />\n  );\n}\n\nexport default IconBasic-CopyIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-DownloadIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"DownloadIcon\"} />\n  );\n}\n\nexport default IconBasic-DownloadIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-EditIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"EditIcon\"} />\n  );\n}\n\nexport default IconBasic-EditIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-EyeIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"EyeIcon\"} />\n  );\n}\n\nexport default IconBasic-EyeIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-EyeOffIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"EyeOffIcon\"} />\n  );\n}\n\nexport default IconBasic-EyeOffIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-FavouriteIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"FavouriteIcon\"} />\n  );\n}\n\nexport default IconBasic-FavouriteIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-GlobeIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"GlobeIcon\"} />\n  );\n}\n\nexport default IconBasic-GlobeIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-GripVerticalIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"GripVerticalIcon\"} />\n  );\n}\n\nexport default IconBasic-GripVerticalIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-HelpCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"HelpCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-HelpCircleIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-InfoIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"InfoIcon\"} />\n  );\n}\n\nexport default IconBasic-InfoIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-LinkIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"LinkIcon\"} />\n  );\n}\n\nexport default IconBasic-LinkIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ExternalLinkIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ExternalLinkIcon\"} />\n  );\n}\n\nexport default IconBasic-ExternalLinkIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-LoaderIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"LoaderIcon\"} />\n  );\n}\n\nexport default IconBasic-LoaderIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-LockIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"LockIcon\"} />\n  );\n}\n\nexport default IconBasic-LockIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-MailIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"MailIcon\"} />\n  );\n}\n\nexport default IconBasic-MailIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-MenuIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"MenuIcon\"} />\n  );\n}\n\nexport default IconBasic-MenuIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-MessageCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"MessageCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-MessageCircleIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-MoonIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"MoonIcon\"} />\n  );\n}\n\nexport default IconBasic-MoonIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-PaperclipIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"PaperclipIcon\"} />\n  );\n}\n\nexport default IconBasic-PaperclipIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-PhoneIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"PhoneIcon\"} />\n  );\n}\n\nexport default IconBasic-PhoneIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-PlayIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"PlayIcon\"} />\n  );\n}\n\nexport default IconBasic-PlayIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-RemoveIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"RemoveIcon\"} />\n  );\n}\n\nexport default IconBasic-RemoveIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-RepeatIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"RepeatIcon\"} />\n  );\n}\n\nexport default IconBasic-RepeatIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-Repeat1Icon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"Repeat1Icon\"} />\n  );\n}\n\nexport default IconBasic-Repeat1Icon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-SearchIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"SearchIcon\"} />\n  );\n}\n\nexport default IconBasic-SearchIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-SettingsIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"SettingsIcon\"} />\n  );\n}\n\nexport default IconBasic-SettingsIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ShareIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ShareIcon\"} />\n  );\n}\n\nexport default IconBasic-ShareIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-SlashIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"SlashIcon\"} />\n  );\n}\n\nexport default IconBasic-SlashIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-StarIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"StarIcon\"} />\n  );\n}\n\nexport default IconBasic-StarIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-SunIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"SunIcon\"} />\n  );\n}\n\nexport default IconBasic-SunIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ThreeDotsIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ThreeDotsIcon\"} />\n  );\n}\n\nexport default IconBasic-ThreeDotsIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-TrashIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"TrashIcon\"} />\n  );\n}\n\nexport default IconBasic-TrashIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-UnlockIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"UnlockIcon\"} />\n  );\n}\n\nexport default IconBasic-UnlockIcon;\n"
  ],
  "alert": [
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-info() {\n\n\n  return (\n<Alert variant={\"solid\"} action={\"info\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-info;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-error() {\n\n\n  return (\n<Alert variant={\"solid\"} action={\"error\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-error;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-warning() {\n\n\n  return (\n<Alert variant={\"solid\"} action={\"warning\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-warning;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-muted() {\n\n\n  return (\n<Alert variant={\"solid\"} action={\"muted\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-muted;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasicAlert() {\n\n\n  return (\n<Alert variant={\"solid\"} action={\"success\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasicAlert;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-accent-info() {\n\n\n  return (\n<Alert variant={\"accent\"} action={\"info\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-accent-info;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-accent-error() {\n\n\n  return (\n<Alert variant={\"accent\"} action={\"error\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-accent-error;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-accent-warning() {\n\n\n  return (\n<Alert variant={\"accent\"} action={\"warning\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-accent-warning;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-accent-muted() {\n\n\n  return (\n<Alert variant={\"accent\"} action={\"muted\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-accent-muted;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-accent() {\n\n\n  return (\n<Alert variant={\"accent\"} action={\"success\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-accent;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-outline-info() {\n\n\n  return (\n<Alert variant={\"outline\"} action={\"info\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-outline-info;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-outline-error() {\n\n\n  return (\n<Alert variant={\"outline\"} action={\"error\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-outline-error;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-outline-warning() {\n\n\n  return (\n<Alert variant={\"outline\"} action={\"warning\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-outline-warning;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-outline-muted() {\n\n\n  return (\n<Alert variant={\"outline\"} action={\"muted\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-outline-muted;\n",
    "import React from 'react'\nimport {Alert, AlertIcon, AlertText, InfoIcon, CheckCircleIcon, CloseCircleIcon, BellIcon, AlertCircleIcon, VStack, Icon} from '@gluestack-ui/themed'\n\nfunction AlertBasic-outline() {\n\n\n  return (\n<Alert variant={\"outline\"} action={\"success\"}>\n      <AlertIcon as={InfoIcon} mr=\"\\$3\" />\n      <AlertText>\n        Selection successfully moved!\n      </AlertText>\n    </Alert>\n  );\n}\n\nexport default AlertBasic-outline;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-AlertCircleIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"AlertCircleIcon\"} />\n  );\n}\n\nexport default IconBasic-AlertCircleIcon;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {CloseIcon, AlertDialog, AlertDialogBackdrop, AlertDialogContent, AlertDialogHeader, AlertDialogCloseButton, AlertDialogFooter, AlertDialogBody, Button, ButtonText, ButtonGroup, Text, Center, Icon, Heading, AlertCircleIcon, CheckCircleIcon, HStack} from '@gluestack-ui/themed'\nimport {AlertTriangleIcon} from 'lucide-react-native'\n\nfunction AlertDialogBasicAlertDialog() {\nconst [showAlertDialog, setShowAlertDialog] = useState(false)\nconst handleClose = () => setShowAlertDialog(!showAlertDialog)\n\n  return (\n<AlertDialog isOpen={showAlertDialog || showAlertDialogProp} onClose={handleClose} size={\"md\"}>\n      <AlertDialogBackdrop />\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <Heading>\n            Return Policy\n          </Heading>\n          <AlertDialogCloseButton>\n            <Icon as={CloseIcon} />\n          </AlertDialogCloseButton>\n        </AlertDialogHeader>\n        <AlertDialogBody>\n          <Text>\n            Whoa, slow down there! This modal is like a red light at an\n            intersection, reminding you to stop and think before you proceed. Is\n            deleting this folder the right choice?\n          </Text>\n        </AlertDialogBody>\n        <AlertDialogFooter>\n          <Button variant=\"outline\" action=\"secondary\" onPress={handleClose} mr=\"\\$3\">\n            <ButtonText>\n              Cancel\n            </ButtonText>\n          </Button>\n          <Button action=\"negative\" onPress={handleClose}>\n            <ButtonText>\n              Delete\n            </ButtonText>\n          </Button>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n\nexport default AlertDialogBasicAlertDialog;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {CloseIcon, AlertDialog, AlertDialogBackdrop, AlertDialogContent, AlertDialogHeader, AlertDialogCloseButton, AlertDialogFooter, AlertDialogBody, Button, ButtonText, ButtonGroup, Text, Center, Icon, Heading, AlertCircleIcon, CheckCircleIcon, HStack} from '@gluestack-ui/themed'\nimport {AlertTriangleIcon} from 'lucide-react-native'\n\nfunction AlertDialogBasic-full() {\nconst [showAlertDialog, setShowAlertDialog] = useState(false)\nconst handleClose = () => setShowAlertDialog(!showAlertDialog)\n\n  return (\n<AlertDialog isOpen={showAlertDialog || showAlertDialogProp} onClose={handleClose} size={\"full\"}>\n      <AlertDialogBackdrop />\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <Heading>\n            Return Policy\n          </Heading>\n          <AlertDialogCloseButton>\n            <Icon as={CloseIcon} />\n          </AlertDialogCloseButton>\n        </AlertDialogHeader>\n        <AlertDialogBody>\n          <Text>\n            Whoa, slow down there! This modal is like a red light at an\n            intersection, reminding you to stop and think before you proceed. Is\n            deleting this folder the right choice?\n          </Text>\n        </AlertDialogBody>\n        <AlertDialogFooter>\n          <Button variant=\"outline\" action=\"secondary\" onPress={handleClose} mr=\"\\$3\">\n            <ButtonText>\n              Cancel\n            </ButtonText>\n          </Button>\n          <Button action=\"negative\" onPress={handleClose}>\n            <ButtonText>\n              Delete\n            </ButtonText>\n          </Button>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n\nexport default AlertDialogBasic-full;\n"
  ],
  "progress": [
    "import React from 'react'\nimport {Progress, ProgressFilledTrack, VStack, Text, Box, Heading, Center} from '@gluestack-ui/themed'\n\nfunction ProgressBasicProgress() {\n\n\n  return (\n<Center>\n      <Progress sx={{\n    w: 300,\n    _web: {\n      w: 800\n    }\n  }} value={value} size={\"md\"}>\n        <ProgressFilledTrack />\n      </Progress>\n    </Center>\n  );\n}\n\nexport default ProgressBasicProgress;\n"
  ],
  "spinner": [
    "import React from 'react'\nimport {Spinner, HStack, Text, VStack} from '@gluestack-ui/themed'\n\nfunction SpinnerBasic() {\n\n\n  return (\n\n  );\n}\n\nexport default SpinnerBasic;\n"
  ],
  "toast": [
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top right-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top right-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-top left-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-top left-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacementToast() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacementToast;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom left-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom left-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-error() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-error-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-error-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-warning() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-warning-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-warning-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-success() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-success-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-success-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-info() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-info-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-info-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"solid\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-outline() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"outline\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastPlacement-bottom right-accent() {\nconst toast = useToast()\n\n  return (\n<Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"accent\"}>\n                <ToastTitle>\n                  Hello World Toast {id}\n                </ToastTitle>\n              </Toast>\n  );\n}\n\nexport default ToastPlacement-bottom right-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, useToast} from '@gluestack-ui/themed'\n\nfunction ToastDuplicatePrevent() {\nconst toast = useToast()\nconst idTest = 'test-id'\n\n  return (\n<Toast>\n                  <ToastTitle>\n                    Hello World Toast {id}\n                  </ToastTitle>\n                </Toast>\n  );\n}\n\nexport default ToastDuplicatePrevent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top right-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top right\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top right-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-top left-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"top left\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-top left-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasicToast() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasicToast;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom left-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom left\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom left-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-error() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-error;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-error-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-error-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-error-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"error\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-error-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-warning() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-warning;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-warning-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-warning-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-warning-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"warning\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-warning-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-success() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-success;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-success-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-success-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-success-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"success\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-success-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-info() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-info;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-info-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-info-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-info-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"info\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-info-accent;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"solid\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-outline() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"outline\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-outline;\n",
    "import React from 'react'\nimport {Button, ButtonText, Toast, ToastTitle, ToastDescription, useToast, Icon, CloseIcon, VStack, CheckIcon, Pressable, Center} from '@gluestack-ui/themed'\nimport {MessageCircle, AlertTriangleIcon} from 'lucide-react-native'\n\nfunction ToastBasic-bottom right-accent() {\nconst toast = useToast()\n\n  return (\n<>\n                <Toast nativeID={id} placement={\"bottom right\"} action={\"attention\"} variant={\"accent\"}>\n                  <VStack space=\"xs\">\n                    <ToastTitle>\n                      Hello World Toast\n                    </ToastTitle>\n                    <ToastDescription>\n                      Please create a support tibnnbcket from the support page\n                    </ToastDescription>\n                  </VStack>\n                  <Pressable onPress={() => toast.close(id)}>\n                    <Icon as={CloseIcon} />\n                  </Pressable>\n                </Toast>\n              </>\n  );\n}\n\nexport default ToastBasic-bottom right-accent;\n"
  ],
  "button": [
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-isDisabled() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasicButton() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasicButton;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-outline-isDisabled() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-outline-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-outline() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-outline;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-link-isDisabled() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-link-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-link() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-link;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-isDisabled() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-outline-isDisabled() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-outline-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-outline() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-outline;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-link-isDisabled() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-link-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-link() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-link;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-isDisabled() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-outline-isDisabled() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-outline-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-outline() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-outline;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-link-isDisabled() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-link-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-link() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-link;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-isDisabled() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-outline-isDisabled() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-outline-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-outline() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-outline;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-link-isDisabled() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-link-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-link() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-link;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasicButton() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasicButton;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-outline-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-outline-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-outline() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-outline;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-link-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-link() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-link;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-outline-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-outline-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-outline() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-outline;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-link-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-link() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-link;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-outline-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-outline-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-outline() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-outline;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-link-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-link() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-link;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"solid\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"solid\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-outline-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"outline\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-outline-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-outline() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"outline\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-outline;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-link-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-link() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-link;\n",
    "import React from 'react'\nimport {HStack, Button, ButtonSpinner, ButtonText} from '@gluestack-ui/themed'\n\nfunction ButtonIsLoading() {\nconst [isLoading] = React.useState(true)\n\n  return (\n<HStack space=\"md\">\n      <Button disabled={isLoading} focusable={!isLoading} opacity={isLoading ? 0.4 : 1} action=\"negative\">\n        <ButtonSpinner color=\"white\" />\n      </Button>\n      <Button disabled={isLoading} focusable={!isLoading} opacity={isLoading ? 0.4 : 1} action=\"negative\">\n        <ButtonSpinner color=\"white\" mr=\"\\$2\" />\n        <ButtonText>Submitting</ButtonText>\n      </Button>\n      <Button disabled={isLoading} focusable={!isLoading} opacity={isLoading ? 0.4 : 1} action=\"negative\">\n        <ButtonText>Submitting</ButtonText>\n        <ButtonSpinner color=\"white\" ml=\"\\$2\" />\n      </Button>\n    </HStack>\n  );\n}\n\nexport default ButtonIsLoading;\n",
    "import React from 'react'\nimport {AddIcon, InfoIcon, HStack, Button, ButtonIcon, ButtonText} from '@gluestack-ui/themed'\n\nfunction ButtonWithIcons() {\n\n\n  return (\n<HStack space=\"md\">\n      <Button>\n        <ButtonIcon as={InfoIcon} mr=\"\\$2\" />\n        <ButtonText>LeftIcon</ButtonText>\n      </Button>\n      <Button variant=\"solid\">\n        <ButtonText>RightIcon</ButtonText>\n        <ButtonIcon as={AddIcon} ml=\"\\$2\" />\n      </Button>\n    </HStack>\n  );\n}\n\nexport default ButtonWithIcons;\n"
  ],
  "link": [
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-link-isDisabled() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-link-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-link() {\n\n\n  return (\n<Button action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-link;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-link-isDisabled() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-link-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-secondary-link() {\n\n\n  return (\n<Button action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-secondary-link;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-link-isDisabled() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-link-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-positive-link() {\n\n\n  return (\n<Button action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-positive-link;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-link-isDisabled() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-link-isDisabled;\n",
    "import {Box, Center, Button, ButtonText, ButtonIcon, ButtonGroup, Icon, AddIcon, InfoIcon, ButtonSpinner, ArrowUpIcon, Heading, Text, HStack, VStack, ThreeDotsIcon, Input, InputField} from '@gluestack-ui/themed'\nimport React from 'react'\nimport {EditIcon, ArrowLeftIcon} from 'lucide-react-native'\n\nfunction ButtonBasic-negative-link() {\n\n\n  return (\n<Button action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <ButtonText>\n        Button\n      </ButtonText>\n    </Button>\n  );\n}\n\nexport default ButtonBasic-negative-link;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-link-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-link() {\n\n\n  return (\n\n<ButtonGroup action={\"primary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-link;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-link-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-secondary-link() {\n\n\n  return (\n\n<ButtonGroup action={\"secondary\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-secondary-link;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-link-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-positive-link() {\n\n\n  return (\n\n<ButtonGroup action={\"positive\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-positive-link;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-link-isDisabled() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={true}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-link-isDisabled;\n",
    "import {Button, ButtonGroup, ButtonText} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction ButtonGroupBasic-negative-link() {\n\n\n  return (\n\n<ButtonGroup action={\"negative\"} variant={\"link\"} size={\"md\"} isDisabled={false}>\n      <Button>\n        <ButtonText>Button 1</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 2</ButtonText>\n      </Button>\n      <Button>\n        <ButtonText>Button 3</ButtonText>\n      </Button>\n    </ButtonGroup>\n  );\n}\n\nexport default ButtonGroupBasic-negative-link;\n",
    "import React from 'react'\nimport {Link, LinkText, Icon, HStack, Text} from '@gluestack-ui/themed'\nimport {ArrowUpRightIcon} from 'lucide-react-native'\n\nfunction LinkBasic() {\n\n\n  return (\n<Link href=\"https:\n      <LinkText\n  \n  >\n        GLUESTACK\n      </LinkText>\n    </Link>\n  );\n}\n\nexport default LinkBasic;\n",
    "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-https://broken.link() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={true} uri={\"https://broken.link\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-https://broken.link;\n",
    "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-false-https://broken.link() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={false} uri={\"https://broken.link\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-false-https://broken.link;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-LinkIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"LinkIcon\"} />\n  );\n}\n\nexport default IconBasic-LinkIcon;\n",
    "import React from 'react'\nimport {Icon, AddIcon, AlertCircleIcon, ArrowUpIcon, ArrowDownIcon, ArrowRightIcon, ArrowLeftIcon, AtSignIcon, BellIcon, CalendarDaysIcon, CheckIcon, CheckCircleIcon, ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, ChevronsLeftIcon, ChevronsRightIcon, ChevronsUpDownIcon, CircleIcon, ClockIcon, CloseIcon, CloseCircleIcon, CopyIcon, DownloadIcon, EditIcon, EyeIcon, EyeOffIcon, FavouriteIcon, GlobeIcon, GripVerticalIcon, HelpCircleIcon, InfoIcon, LinkIcon, ExternalLinkIcon, LoaderIcon, LockIcon, MailIcon, MenuIcon, MessageCircleIcon, MoonIcon, PaperclipIcon, PhoneIcon, PlayIcon, RemoveIcon, RepeatIcon, Repeat1Icon, SearchIcon, SettingsIcon, ShareIcon, SlashIcon, StarIcon, SunIcon, ThreeDotsIcon, TrashIcon, UnlockIcon, createIcon} from '@gluestack-ui/themed'\nimport {ChromeIcon, InstagramIcon, FacebookIcon} from 'lucide-react-native'\n\nfunction IconBasic-ExternalLinkIcon() {\n\n\n  return (\n<Icon as={name} size={size} size={\"md\"} name={\"ExternalLinkIcon\"} />\n  );\n}\n\nexport default IconBasic-ExternalLinkIcon;\n"
  ],
  "box": [
    "import React from 'react'\nimport {Center, Text, CheckIcon, Icon, HStack, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Heading, VStack, RemoveIcon, Box, FormControl} from '@gluestack-ui/themed'\n\nfunction CheckboxGroupBasic() {\nconst [values, setValues] = React.useState(['Label 1'])\n\n  return (\n<CheckboxGroup accessibilityLabel=\"Checkbox Group\" value={values} onChange={setValues} nativeID=\"checkbox-group\">\n      <Checkbox m=\"\\$2\" size=\"$1\" isInvalid=\"$1\" isIndeterminate value=\"Label 1\" aria-label=\"Label 1\" accessibilityLabel=\"Checkbox\" onChange={(isSelected: boolean) =>\n  \n  console.log(isSelected, '###')} nativeID=\"checkbox-1\">\n        <CheckboxIndicator mr=\"\\$2\">\n          <CheckboxIcon as={CheckIcon} />\n        </CheckboxIndicator>\n        <CheckboxLabel>Label 1</CheckboxLabel>\n      </Checkbox>\n      <Checkbox m=\"\\$2\" isInvalid=\"$1\" size=\"$1\" aria-label=\"Label 2\" value=\"Label 2\" accessibilityLabel=\"Checkbox\" onChange={(isSelected: boolean) =>\n  \n  console.log(isSelected, '###')} nativeID=\"checkbox-2\">\n        <CheckboxIndicator mr=\"\\$2\">\n          <CheckboxIcon as={CheckIcon} />\n        </CheckboxIndicator>\n        <CheckboxLabel>Label 2</CheckboxLabel>\n      </Checkbox>\n    </CheckboxGroup>\n  );\n}\n\nexport default CheckboxGroupBasic;\n",
    "import {Text, Box} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction BoxBasic() {\n\n\n  return (\n<Box {...props} bg={`\\$\\${bg}`} h={h} w={w} justifyContent=\"center\" alignItems=\"center\">\n      <Text color=\"white\" fontWeight=\"\\$bold\">\n        BOX\n      </Text>\n    </Box>\n  );\n}\n\nexport default BoxBasic;\n",
    "import {Box} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction BoxWithRef() {\nconst myRef = React.useRef<any>({})\nconst styleObj = {\n  borderWidth: 8,\n  borderRadius: 4,\n  borderColor: '#22D3EE'\n}\n\n  return (\n<Box {...props} sx={{\n  h: 100,\n  w: 100,\n  bg: '\\$red500'\n}} ref={myRef} />\n  );\n}\n\nexport default BoxWithRef;\n"
  ],
  "checkbox": [
    "import React from 'react'\nimport {Center, Text, CheckIcon, Icon, HStack, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Heading, VStack, RemoveIcon, Box, FormControl} from '@gluestack-ui/themed'\n\nfunction CheckboxGroupBasic() {\nconst [values, setValues] = React.useState(['Label 1'])\n\n  return (\n<CheckboxGroup accessibilityLabel=\"Checkbox Group\" value={values} onChange={setValues} nativeID=\"checkbox-group\">\n      <Checkbox m=\"\\$2\" size=\"$1\" isInvalid=\"$1\" isIndeterminate value=\"Label 1\" aria-label=\"Label 1\" accessibilityLabel=\"Checkbox\" onChange={(isSelected: boolean) =>\n  \n  console.log(isSelected, '###')} nativeID=\"checkbox-1\">\n        <CheckboxIndicator mr=\"\\$2\">\n          <CheckboxIcon as={CheckIcon} />\n        </CheckboxIndicator>\n        <CheckboxLabel>Label 1</CheckboxLabel>\n      </Checkbox>\n      <Checkbox m=\"\\$2\" isInvalid=\"$1\" size=\"$1\" aria-label=\"Label 2\" value=\"Label 2\" accessibilityLabel=\"Checkbox\" onChange={(isSelected: boolean) =>\n  \n  console.log(isSelected, '###')} nativeID=\"checkbox-2\">\n        <CheckboxIndicator mr=\"\\$2\">\n          <CheckboxIcon as={CheckIcon} />\n        </CheckboxIndicator>\n        <CheckboxLabel>Label 2</CheckboxLabel>\n      </Checkbox>\n    </CheckboxGroup>\n  );\n}\n\nexport default CheckboxGroupBasic;\n"
  ],
  "formcontrol": [
    "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isDisabled() {\n\n\n  return (\n<FormControl isInvalid={true} size={\"md\"} isDisabled={true} isRequired={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isDisabled;\n",
    "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isDisabled-isRequired() {\n\n\n  return (\n<FormControl isInvalid={true} size={\"md\"} isDisabled={true} isRequired={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isDisabled-isRequired;\n",
    "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasicFormControl() {\n\n\n  return (\n<FormControl isInvalid={true} size={\"md\"} isDisabled={false} isRequired={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasicFormControl;\n",
    "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isRequired() {\n\n\n  return (\n<FormControl isInvalid={true} size={\"md\"} isDisabled={false} isRequired={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isRequired;\n",
    "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isInvalid-isDisabled() {\n\n\n  return (\n<FormControl isInvalid={false} size={\"md\"} isDisabled={true} isRequired={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isInvalid-isDisabled-isRequired() {\n\n\n  return (\n<FormControl isInvalid={false} size={\"md\"} isDisabled={true} isRequired={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isInvalid-isDisabled-isRequired;\n",
    "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isInvalid() {\n\n\n  return (\n<FormControl isInvalid={false} size={\"md\"} isDisabled={false} isRequired={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isInvalid;\n",
    "import React from 'react'\nimport {FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, Input, InputField, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, Button, ButtonText, Box, Checkbox, CheckboxGroup, CheckboxIndicator, CheckboxIcon, CheckboxLabel, Textarea, TextareaInput, Select, SelectTrigger, SelectInput, SelectIcon, SelectPortal, SelectBackdrop, SelectContent, SelectDragIndicatorWrapper, SelectDragIndicator, SelectItem, Slider, SliderTrack, SliderFilledTrack, SliderThumb, Switch, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, HStack, VStack, Heading, Text, Center, Icon, CircleIcon, CheckIcon, AlertCircleIcon, ChevronDownIcon} from '@gluestack-ui/themed'\n\nfunction FormControlBasic-isInvalid-isRequired() {\n\n\n  return (\n<FormControl isInvalid={false} size={\"md\"} isDisabled={false} isRequired={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Password</FormControlLabelText>\n      </FormControlLabel>\n      <Input>\n        <InputField type=\"password\" defaultValue=\"12345\" placeholder=\"password\" />\n      </Input>\n\n      <FormControlHelper>\n        <FormControlHelperText>\n          Must be atleast 6 characters.\n        </FormControlHelperText>\n      </FormControlHelper>\n\n      <FormControlError>\n        <FormControlErrorIcon as={AlertCircleIcon} />\n        <FormControlErrorText>\n          Atleast 6 characters are required.\n        </FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default FormControlBasic-isInvalid-isRequired;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-isInvalid-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"outline\"} isInvalid={true} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-isInvalid() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"outline\"} isInvalid={true} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-isInvalid;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"outline\"} isInvalid={false} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-isDisabled;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControlSelect() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"outline\"} isInvalid={false} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControlSelect;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-underlined-isInvalid-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"underlined\"} isInvalid={true} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-underlined-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-underlined-isInvalid() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"underlined\"} isInvalid={true} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-underlined-isInvalid;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-underlined-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"underlined\"} isInvalid={false} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-underlined-isDisabled;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-underlined() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"underlined\"} isInvalid={false} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-underlined;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-rounded-isInvalid-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"rounded\"} isInvalid={true} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-rounded-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-rounded-isInvalid() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"rounded\"} isInvalid={true} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-rounded-isInvalid;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-rounded-isDisabled() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"rounded\"} isInvalid={false} isDisabled={true}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-rounded-isDisabled;\n",
    "import React from 'react'\nimport {Center, ChevronDownIcon, Select, SelectBackdrop, SelectContent, SelectDragIndicator, SelectDragIndicatorWrapper, SelectIcon, SelectInput, SelectItem, SelectPortal, SelectTrigger, Icon, FormControl, FormControlLabel, FormControlLabelText, FormControlHelper, FormControlHelperText, FormControlError, FormControlErrorIcon, FormControlErrorText, AlertCircleIcon} from '@gluestack-ui/themed'\n\nfunction SelectWithFormControl-rounded() {\nconst items = colors.map(c => {\n  return <SelectItem key={c.value} label={c.label} value={c.value} isDisabled={c.isDisabled} />;\n})\nconst [selected, setSelected] = React.useState(colors[0])\n\n  return (\n<FormControl size={\"md\"} variant={\"rounded\"} isInvalid={false} isDisabled={false}>\n      <FormControlLabel>\n        <FormControlLabelText>Choose your favorite color</FormControlLabelText>\n      </FormControlLabel>\n      <Select selectedValue={selected.value} selectedLabel={selected.label} onValueChange={value => {\n    setSelected(colors.filter(c => c.value === value)[0]);\n  }}>\n        <SelectTrigger size={size} variant={variant}>\n          <SelectInput placeholder=\"Select option\" />\n          <SelectIcon mr=\"\\$3\">\n            <Icon as={ChevronDownIcon} />\n          </SelectIcon>\n        </SelectTrigger>\n        <SelectPortal>\n          <SelectBackdrop />\n          <SelectContent>\n            <SelectDragIndicatorWrapper>\n              <SelectDragIndicator />\n            </SelectDragIndicatorWrapper>\n            {items}\n          </SelectContent>\n        </SelectPortal>\n      </Select>\n      <FormControlHelper>\n        <FormControlHelperText>\n          You can only select one option\n        </FormControlHelperText>\n      </FormControlHelper>\n      <FormControlError>\n        <FormControlErrorIcon>\n          <Icon as={AlertCircleIcon} />\n        </FormControlErrorIcon>\n        <FormControlErrorText>Mandatory field</FormControlErrorText>\n      </FormControlError>\n    </FormControl>\n  );\n}\n\nexport default SelectWithFormControl-rounded;\n"
  ],
  "input": [
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-isInvalid() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-isInvalid;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-isDisabled;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasicInput() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasicInput;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-underlined-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-underlined-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-underlined-isInvalid() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-underlined-isInvalid;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-underlined-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-underlined-isDisabled;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-underlined() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-underlined;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-rounded-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-rounded-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-rounded-isInvalid() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-rounded-isInvalid;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-rounded-isDisabled() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={true}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-rounded-isDisabled;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {Input, InputField, InputIcon, InputSlot, Center, Button, ButtonText, Box, VStack, Text, Heading, Icon, SearchIcon, FormControl} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputBasic-rounded() {\nconst [value, setValue] = React.useState('')\nlet inputIconSize = ''\n\n  return (\n<Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={false}>\n      <InputField onChange={(e: any) => {\n    setValue(e.nativeEvent.text);\n  }} value={value} placeholder=\"Enter Text here\" />\n      <InputSlot pr=\"\\$4\">\n        <InputIcon as={SearchIcon} />\n      </InputSlot>\n    </Input>\n  );\n}\n\nexport default InputBasic-rounded;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isInvalid;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIconInput() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"outline\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIconInput;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isInvalid;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-underlined() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"underlined\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-underlined;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isInvalid-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isInvalid() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={true} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isInvalid;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded-isDisabled() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={true} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded-isDisabled;\n",
    "import React from 'react'\nimport {Input, VStack, Icon, SearchIcon, InputIcon, InputSlot, InputField} from '@gluestack-ui/themed'\nimport {EyeIcon, EyeOffIcon} from 'lucide-react-native'\n\nfunction InputWithIcon-rounded() {\nconst [value, setValue] = React.useState('')\n\n  return (\n<VStack space=\"md\" w=\"\\$full\">\n      <Input size={\"sm\"} variant={\"rounded\"} isInvalid={false} isDisabled={false} size=\"sm\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"md\">\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"lg\" isDisabled>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n\n      <Input {...props} size=\"xl\" isInvalid>\n        <InputField onChange={(e: any) => {\n      setValue(e.nativeEvent.text);\n    }} value={value} placeholder=\"Enter Text here\" />\n        <InputSlot pr=\"\\$4\">\n          <InputIcon as={SearchIcon} />\n        </InputSlot>\n      </Input>\n    </VStack>\n  );\n}\n\nexport default InputWithIcon-rounded;\n"
  ],
  "pressable": [
    "import React from 'react'\nimport {Center, Pressable, Text} from '@gluestack-ui/themed'\n\nfunction PressableBasicPressable() {\n\n\n  return (\n<Pressable\n\nonPress={() => console.log('Hello')}  sx={{\n  h: 100,\n  w: 200\n}}>\n      <Center sx={{\n    h: '100%',\n    w: '100%',\n    bg: '\\$primary500'\n  }}>\n        <Text sx={{\n      color: '\\$white'\n    }}>PRESSABLE</Text>\n      </Center>\n    </Pressable>\n  );\n}\n\nexport default PressableBasicPressable;\n",
    "import React from 'react'\nimport {Box, Text, LinearGradient, Button, ButtonIcon, Icon, EditIcon, Pressable} from '@gluestack-ui/themed'\n\nfunction LinearGradientPressable() {\n\n\n  return (\n\n  );\n}\n\nexport default LinearGradientPressable;\n"
  ],
  "radio": [
    "import React from 'react'\nimport {Center, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, VStack, HStack, Box, Heading, Text, FormControl, CircleIcon} from '@gluestack-ui/themed'\n\nfunction RadioBasic-isInvalid-isDisabled() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup value={values} onChange={setValues}>\n      <Radio size={\"md\"} isInvalid={true} isDisabled={true} value=\"Label 1\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 1\n        </RadioLabel>\n      </Radio>\n      <Radio {...props} value=\"Label 2\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 2\n        </RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioBasic-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Center, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, VStack, HStack, Box, Heading, Text, FormControl, CircleIcon} from '@gluestack-ui/themed'\n\nfunction RadioBasic-isInvalid() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup value={values} onChange={setValues}>\n      <Radio size={\"md\"} isInvalid={true} isDisabled={false} value=\"Label 1\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 1\n        </RadioLabel>\n      </Radio>\n      <Radio {...props} value=\"Label 2\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 2\n        </RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioBasic-isInvalid;\n",
    "import React from 'react'\nimport {Center, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, VStack, HStack, Box, Heading, Text, FormControl, CircleIcon} from '@gluestack-ui/themed'\n\nfunction RadioBasic-isDisabled() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup value={values} onChange={setValues}>\n      <Radio size={\"md\"} isInvalid={false} isDisabled={true} value=\"Label 1\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 1\n        </RadioLabel>\n      </Radio>\n      <Radio {...props} value=\"Label 2\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 2\n        </RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioBasic-isDisabled;\n",
    "import React from 'react'\nimport {Center, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel, VStack, HStack, Box, Heading, Text, FormControl, CircleIcon} from '@gluestack-ui/themed'\n\nfunction RadioBasicRadio() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup value={values} onChange={setValues}>\n      <Radio size={\"md\"} isInvalid={false} isDisabled={false} value=\"Label 1\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 1\n        </RadioLabel>\n      </Radio>\n      <Radio {...props} value=\"Label 2\" aria-label=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} mb=\"\\$2\">\n        <RadioIndicator>\n          <RadioIcon as={CircleIcon} />\n        </RadioIndicator>\n        <RadioLabel ml=\"\\$2\">\n          Label 2\n        </RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioBasicRadio;\n",
    "import React from 'react'\nimport {CircleIcon, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel} from '@gluestack-ui/themed'\n\nfunction RadioGroupBasic-isInvalid-isDisabled() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup isDisabled={isDisabled} isReadOnly={isReadOnly} value={values} onChange={setValues}>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 1\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} size={\"md\"} isInvalid={true} isDisabled={true}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 1</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 2\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 2</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 3\" accessibilityLabel=\"Radio\" onChange={(isSelected: boolean) => console.log(isSelected, 'isSelected')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 3</RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioGroupBasic-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {CircleIcon, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel} from '@gluestack-ui/themed'\n\nfunction RadioGroupBasic-isInvalid() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup isDisabled={isDisabled} isReadOnly={isReadOnly} value={values} onChange={setValues}>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 1\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} size={\"md\"} isInvalid={true} isDisabled={false}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 1</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 2\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 2</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 3\" accessibilityLabel=\"Radio\" onChange={(isSelected: boolean) => console.log(isSelected, 'isSelected')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 3</RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioGroupBasic-isInvalid;\n",
    "import React from 'react'\nimport {CircleIcon, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel} from '@gluestack-ui/themed'\n\nfunction RadioGroupBasic-isDisabled() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup isDisabled={isDisabled} isReadOnly={isReadOnly} value={values} onChange={setValues}>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 1\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} size={\"md\"} isInvalid={false} isDisabled={true}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 1</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 2\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 2</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 3\" accessibilityLabel=\"Radio\" onChange={(isSelected: boolean) => console.log(isSelected, 'isSelected')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 3</RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioGroupBasic-isDisabled;\n",
    "import React from 'react'\nimport {CircleIcon, Radio, RadioGroup, RadioIcon, RadioIndicator, RadioLabel} from '@gluestack-ui/themed'\n\nfunction RadioGroupBasicRadio() {\nconst [values, setValues] = React.useState('Label 1')\n\n  return (\n<RadioGroup isDisabled={isDisabled} isReadOnly={isReadOnly} value={values} onChange={setValues}>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 1\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')} size={\"md\"} isInvalid={false} isDisabled={false}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 1</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 2\" accessibilityLabel=\"Radio\" onChange={(nextValue: boolean) => console.log(nextValue, 'nextValue')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 2</RadioLabel>\n      </Radio>\n      <Radio isDisabled={isDisabled} isInvalid={isInvalid} size={size} value=\"Label 3\" accessibilityLabel=\"Radio\" onChange={(isSelected: boolean) => console.log(isSelected, 'isSelected')}>\n        <RadioIndicator>\n          <RadioIcon>\n            <CircleIcon />\n          </RadioIcon>\n        </RadioIndicator>\n        <RadioLabel>Label 3</RadioLabel>\n      </Radio>\n    </RadioGroup>\n  );\n}\n\nexport default RadioGroupBasicRadio;\n"
  ],
  "slider": [
    "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-vertical-true-isDisabled() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"vertical\"} isReversed={true} isDisabled={true} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-vertical-true-isDisabled;\n",
    "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-vertical-true() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"vertical\"} isReversed={true} isDisabled={false} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-vertical-true;\n",
    "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-vertical-isDisabled() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"vertical\"} isReversed={false} isDisabled={true} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-vertical-isDisabled;\n",
    "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-vertical() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"vertical\"} isReversed={false} isDisabled={false} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-vertical;\n",
    "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-true-isDisabled() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"horizontal\"} isReversed={true} isDisabled={true} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-true-isDisabled;\n",
    "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-true() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"horizontal\"} isReversed={true} isDisabled={false} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-true;\n",
    "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasic-isDisabled() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"horizontal\"} isReversed={false} isDisabled={true} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasic-isDisabled;\n",
    "import React from 'react'\nimport {Text, Slider, SliderTrack, SliderFilledTrack, SliderThumb, VStack, HStack, Box, Icon, Heading, Tooltip, TooltipContent, Button, Center} from '@gluestack-ui/themed'\nimport {Volume, Volume2Icon, LightbulbIcon} from 'lucide-react-native'\n\nfunction SliderBasicSlider() {\nconst [sliderValue, setSliderValue] = React.useState(valueProp)\nconst handleChange = (value: any) => {\n  setSliderValue(value);\n}\n\n  return (\n<Slider size={\"md\"} orientation={\"horizontal\"} isReversed={false} isDisabled={false} w={300} h={300} mt=\"\\$4\" value={sliderValue} onChange={(value: any) => {\n  handleChange(value);\n}}>\n      <SliderTrack>\n        <SliderFilledTrack />\n      </SliderTrack>\n      <SliderThumb />\n    </Slider>\n  );\n}\n\nexport default SliderBasicSlider;\n"
  ],
  "switch": [
    "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-isDisabled-true-isInvalid() {\n\n\n  return (\n<Switch defaultValue={true} value={true} size={\"md\"} isDisabled={true} isEnabled={true} isInvalid={true} />\n  );\n}\n\nexport default SwitchBasic-isDisabled-true-isInvalid;\n",
    "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-isDisabled-true() {\n\n\n  return (\n<Switch defaultValue={true} value={true} size={\"md\"} isDisabled={true} isEnabled={true} isInvalid={false} />\n  );\n}\n\nexport default SwitchBasic-isDisabled-true;\n",
    "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-isDisabled-isInvalid() {\n\n\n  return (\n<Switch defaultValue={true} value={false} size={\"md\"} isDisabled={true} isEnabled={false} isInvalid={true} />\n  );\n}\n\nexport default SwitchBasic-isDisabled-isInvalid;\n",
    "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-isDisabled() {\n\n\n  return (\n<Switch defaultValue={true} value={false} size={\"md\"} isDisabled={true} isEnabled={false} isInvalid={false} />\n  );\n}\n\nexport default SwitchBasic-isDisabled;\n",
    "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-true-isInvalid() {\n\n\n  return (\n<Switch defaultValue={true} value={true} size={\"md\"} isDisabled={false} isEnabled={true} isInvalid={true} />\n  );\n}\n\nexport default SwitchBasic-true-isInvalid;\n",
    "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-true() {\n\n\n  return (\n<Switch defaultValue={true} value={true} size={\"md\"} isDisabled={false} isEnabled={true} isInvalid={false} />\n  );\n}\n\nexport default SwitchBasic-true;\n",
    "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasic-isInvalid() {\n\n\n  return (\n<Switch defaultValue={true} value={false} size={\"md\"} isDisabled={false} isEnabled={false} isInvalid={true} />\n  );\n}\n\nexport default SwitchBasic-isInvalid;\n",
    "import React from 'react'\nimport {Switch, VStack, Text, HStack} from '@gluestack-ui/themed'\n\nfunction SwitchBasicSwitch() {\n\n\n  return (\n<Switch defaultValue={true} value={false} size={\"md\"} isDisabled={false} isEnabled={false} isInvalid={false} />\n  );\n}\n\nexport default SwitchBasicSwitch;\n"
  ],
  "text": [
    "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isInvalid-isDisabled() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={true} isDisabled={true} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isInvalid() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={true} isDisabled={false} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isInvalid;\n",
    "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isDisabled() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={false} isDisabled={true} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isDisabled;\n",
    "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasicTextarea() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={false} isDisabled={false} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasicTextarea;\n",
    "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-hairline() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"hairline\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-hairline;\n",
    "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-thin() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"thin\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-thin;\n",
    "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-light() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"light\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-light;\n",
    "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-normal() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"normal\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-normal;\n",
    "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasicText() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"medium\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasicText;\n",
    "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-semibold() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"semibold\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-semibold;\n",
    "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-bold() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"bold\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-bold;\n",
    "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-extrabold() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"extrabold\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-extrabold;\n",
    "import React from 'react'\nimport {Text, Center} from '@gluestack-ui/themed'\n\nfunction TextBasic-black() {\n\n\n  return (\n<Text size={size} size={\"md\"} fontWeight={\"black\"} fontWeight={`\\$\\${fontWeight}`}>\n      {text}\n    </Text>\n  );\n}\n\nexport default TextBasic-black;\n"
  ],
  "textarea": [
    "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isInvalid-isDisabled() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={true} isDisabled={true} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isInvalid-isDisabled;\n",
    "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isInvalid() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={true} isDisabled={false} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isInvalid;\n",
    "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasic-isDisabled() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={false} isDisabled={true} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasic-isDisabled;\n",
    "import React from 'react'\nimport {Textarea, TextareaInput, FormControl, FormControlHelper, FormControlHelperText, FormControlError, FormControlLabel, FormControlLabelText} from '@gluestack-ui/themed'\n\nfunction TextareaBasicTextarea() {\n\n\n  return (\n<Textarea size={\"md\"} isInvalid={false} isDisabled={false} mx=\"\\$2\">\n      <TextareaInput placeholder=\"Your text goes here...\" />\n    </Textarea>\n  );\n}\n\nexport default TextareaBasicTextarea;\n"
  ],
  "center": [
    "import {Text, Center} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction CenterBasic() {\n\n\n  return (\n\n  );\n}\n\nexport default CenterBasic;\n"
  ],
  "hstack": [
    "import React from 'react'\nimport {HStack, Box} from '@gluestack-ui/themed'\n\nfunction HStackBasicHStack() {\n\n\n  return (\n<HStack space={space} mt=\"\\$5\" reversed={reversed} space={\"md\"}>\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue300'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue400'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue500'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    bg: '\\$blue600'\n  }} />\n    </HStack>\n  );\n}\n\nexport default HStackBasicHStack;\n"
  ],
  "vstack": [
    "import React from 'react'\nimport {VStack, Box} from '@gluestack-ui/themed'\n\nfunction VStackBasicVStack() {\n\n\n  return (\n<VStack space={space}\n\nsx={{\n  justifyContent: 'center',\n  alignItems: 'center'\n}} reversed={reversed} space={\"md\"}>\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue300'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue400'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue500'\n  }} />\n      <Box sx={{\n    w: 100,\n    h: 100,\n    rounded: '\\$sm',\n    bg: '\\$blue600'\n  }} />\n    </VStack>\n  );\n}\n\nexport default VStackBasicVStack;\n"
  ],
  "avatar": [
    "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasicAvatar() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={true} uri={\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasicAvatar;\n",
    "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-https://broken.link() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={true} uri={\"https://broken.link\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-https://broken.link;\n",
    "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-false() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={false} uri={\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=80\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-false;\n",
    "import React from 'react'\nimport {VStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage, HStack, Icon, Heading, Text} from '@gluestack-ui/themed'\nimport {User} from 'lucide-react-native'\n\nfunction AvatarBasic-false-https://broken.link() {\n\n\n  return (\n<Avatar size={size} size={\"md\"} badge={false} uri={\"https://broken.link\"}>\n      <AvatarFallbackText>\n        {fallbackText}\n      </AvatarFallbackText>\n      <AvatarImage source={{\n    uri: uri\n  }} />\n      {badge && <AvatarBadge />}\n    </Avatar>\n  );\n}\n\nexport default AvatarBasic-false-https://broken.link;\n",
    "import {HStack, Avatar, AvatarGroup, AvatarBadge, AvatarFallbackText, AvatarImage} from '@gluestack-ui/themed'\nimport React from 'react'\n\nfunction AvatarGroupBasic() {\n\n\n  return (\n<HStack space=\"md\" h=\"100%\" justifyContent=\"center\" alignItems=\"center\">\n      <AvatarGroup>\n        <Avatar size={size}>\n          <AvatarFallbackText>\n            John Doe\n          </AvatarFallbackText>\n          <AvatarImage source={{\n        uri: 'https:\n      }} />\n          {badge && <AvatarBadge />}\n        </Avatar>\n        <Avatar size={size}>\n          <AvatarFallbackText>\n            John Doe\n          </AvatarFallbackText>\n          <AvatarImage source={{\n        uri: 'https:\n      }} />\n          {badge && <AvatarBadge />}\n        </Avatar>\n        <Avatar size={size}>\n          <AvatarFallbackText>\n            John Doe\n          </AvatarFallbackText>\n          <AvatarImage source={{\n        uri: 'https:\n      }} />\n          {badge && <AvatarBadge />}\n        </Avatar>\n        <Avatar size={size}>\n          <AvatarFallbackText>\n            John Doe\n          </AvatarFallbackText>\n          <AvatarImage source={{\n        uri: 'https:\n      }} />\n          {badge && <AvatarBadge />}\n        </Avatar>\n      </AvatarGroup>\n    </HStack>\n  );\n}\n\nexport default AvatarGroupBasic;\n"
  ],
  "image": [
    "import React from 'react'\nimport {Image} from '@gluestack-ui/themed'\n\nfunction ImageBasic() {\n\n\n  return (\n<Image size=\"md\" source={{\n  uri: uri\n}} />\n  );\n}\n\nexport default ImageBasic;\n"
  ],
  "fab": [
    "import React from 'react'\nimport {AddIcon, Fab, FabIcon, FabLabel, Box, MenuIcon, Checkbox, CheckboxIndicator, CheckboxLabel, SearchIcon, Link, VStack, HStack, Avatar, AvatarImage, Heading, Text, Divider, Image, CheckboxIcon} from '@gluestack-ui/themed'\nimport {CheckIcon, EditIcon, ShoppingCartIcon} from 'lucide-react-native'\n\nfunction FabBasicFab() {\n\n\n  return (\n<Box position=\"relative\" bg=\"\\$trueGray200\" h=\"\\$full\" w=\"\\$full\" sx={{\n  _web: {\n    w: 300,\n    h: 300\n  }\n}}>\n      <Fab placement={placement} size={\"md\"} showLabel={true}>\n        {showIcon && <FabIcon as={MenuIcon} mr={showLabel ? '\\$1' : '\\$0'} />}\n        {showLabel && <FabLabel>Menu</FabLabel>}\n      </Fab>\n    </Box>\n  );\n}\n\nexport default FabBasicFab;\n",
    "import React from 'react'\nimport {AddIcon, Fab, FabIcon, FabLabel, Box, MenuIcon, Checkbox, CheckboxIndicator, CheckboxLabel, SearchIcon, Link, VStack, HStack, Avatar, AvatarImage, Heading, Text, Divider, Image, CheckboxIcon} from '@gluestack-ui/themed'\nimport {CheckIcon, EditIcon, ShoppingCartIcon} from 'lucide-react-native'\n\nfunction FabBasic-false() {\n\n\n  return (\n<Box position=\"relative\" bg=\"\\$trueGray200\" h=\"\\$full\" w=\"\\$full\" sx={{\n  _web: {\n    w: 300,\n    h: 300\n  }\n}}>\n      <Fab placement={placement} size={\"md\"} showLabel={false}>\n        {showIcon && <FabIcon as={MenuIcon} mr={showLabel ? '\\$1' : '\\$0'} />}\n        {showLabel && <FabLabel>Menu</FabLabel>}\n      </Fab>\n    </Box>\n  );\n}\n\nexport default FabBasic-false;\n"
  ],
  "alert-dialog": [
    "import React from 'react'\nimport {useState} from 'react'\nimport {CloseIcon, AlertDialog, AlertDialogBackdrop, AlertDialogContent, AlertDialogHeader, AlertDialogCloseButton, AlertDialogFooter, AlertDialogBody, Button, ButtonText, ButtonGroup, Text, Center, Icon, Heading, AlertCircleIcon, CheckCircleIcon, HStack} from '@gluestack-ui/themed'\nimport {AlertTriangleIcon} from 'lucide-react-native'\n\nfunction AlertDialogBasicAlertDialog() {\nconst [showAlertDialog, setShowAlertDialog] = useState(false)\nconst handleClose = () => setShowAlertDialog(!showAlertDialog)\n\n  return (\n<AlertDialog isOpen={showAlertDialog || showAlertDialogProp} onClose={handleClose} size={\"md\"}>\n      <AlertDialogBackdrop />\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <Heading>\n            Return Policy\n          </Heading>\n          <AlertDialogCloseButton>\n            <Icon as={CloseIcon} />\n          </AlertDialogCloseButton>\n        </AlertDialogHeader>\n        <AlertDialogBody>\n          <Text>\n            Whoa, slow down there! This modal is like a red light at an\n            intersection, reminding you to stop and think before you proceed. Is\n            deleting this folder the right choice?\n          </Text>\n        </AlertDialogBody>\n        <AlertDialogFooter>\n          <Button variant=\"outline\" action=\"secondary\" onPress={handleClose} mr=\"\\$3\">\n            <ButtonText>\n              Cancel\n            </ButtonText>\n          </Button>\n          <Button action=\"negative\" onPress={handleClose}>\n            <ButtonText>\n              Delete\n            </ButtonText>\n          </Button>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n\nexport default AlertDialogBasicAlertDialog;\n",
    "import React from 'react'\nimport {useState} from 'react'\nimport {CloseIcon, AlertDialog, AlertDialogBackdrop, AlertDialogContent, AlertDialogHeader, AlertDialogCloseButton, AlertDialogFooter, AlertDialogBody, Button, ButtonText, ButtonGroup, Text, Center, Icon, Heading, AlertCircleIcon, CheckCircleIcon, HStack} from '@gluestack-ui/themed'\nimport {AlertTriangleIcon} from 'lucide-react-native'\n\nfunction AlertDialogBasic-full() {\nconst [showAlertDialog, setShowAlertDialog] = useState(false)\nconst handleClose = () => setShowAlertDialog(!showAlertDialog)\n\n  return (\n<AlertDialog isOpen={showAlertDialog || showAlertDialogProp} onClose={handleClose} size={\"full\"}>\n      <AlertDialogBackdrop />\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <Heading>\n            Return Policy\n          </Heading>\n          <AlertDialogCloseButton>\n            <Icon as={CloseIcon} />\n          </AlertDialogCloseButton>\n        </AlertDialogHeader>\n        <AlertDialogBody>\n          <Text>\n            Whoa, slow down there! This modal is like a red light at an\n            intersection, reminding you to stop and think before you proceed. Is\n            deleting this folder the right choice?\n          </Text>\n        </AlertDialogBody>\n        <AlertDialogFooter>\n          <Button variant=\"outline\" action=\"secondary\" onPress={handleClose} mr=\"\\$3\">\n            <ButtonText>\n              Cancel\n            </ButtonText>\n          </Button>\n          <Button action=\"negative\" onPress={handleClose}>\n            <ButtonText>\n              Delete\n            </ButtonText>\n          </Button>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n\nexport default AlertDialogBasic-full;\n"
  ],
  "modal": [
    "import React from 'react'\nimport {CloseIcon, Button, ButtonText, ButtonIcon, Heading, Text, Icon, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, Center, VStack, HStack, CheckCircleIcon, Input, InputField, ArrowLeftIcon, Link} from '@gluestack-ui/themed'\n\nfunction ModalBasicModal() {\nconst [showModal, setShowModal] = React.useState(false)\nconst ref = React.useRef(null)\n\n  return (\n<Modal isOpen={showModal || showModalProp} onClose={() => {\n  setShowModal(false);\n}} size={\"md\"} finalFocusRef={ref}>\n      <ModalBackdrop />\n      <ModalContent>\n        <ModalHeader>\n          <Heading maxWidth=\"80%\">Engage with Modals</Heading>\n          <ModalCloseButton>\n            <Icon as={CloseIcon} />\n          </ModalCloseButton>\n        </ModalHeader>\n        <ModalBody>\n          <Text fontSize=\"\\$sm\">\n            Elevate user interactions with our versatile modals. Seamlessly\n            integrate notifications, forms, and media displays. Make an impact\n            effortlessly.\n          </Text>\n        </ModalBody>\n        <ModalFooter>\n          <Button variant=\"outline\" size=\"sm\" action=\"secondary\" mr=\"\\$3\" onPress={() => {\n        setShowModal(false);\n      }}>\n            <ButtonText>Cancel</ButtonText>\n          </Button>\n          <Button size=\"sm\" action=\"positive\" onPress={() => {\n        setShowModal(false);\n      }} sx={{\n        'bg': '\\$success700',\n        ':hover': {\n          bg: '\\$success800'\n        },\n        ':active': {\n          bg: '\\$success900'\n        },\n        '_dark': {\n          'bg': '\\$success600',\n          ':hover': {\n            bg: '\\$success700'\n          },\n          ':active': {\n            bg: '\\$success800'\n          }\n        }\n      }}>\n            <ButtonText>Explore</ButtonText>\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default ModalBasicModal;\n",
    "import React from 'react'\nimport {CloseIcon, Button, ButtonText, ButtonIcon, Heading, Text, Icon, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, Center, VStack, HStack, CheckCircleIcon, Input, InputField, ArrowLeftIcon, Link} from '@gluestack-ui/themed'\n\nfunction ModalBasic-full() {\nconst [showModal, setShowModal] = React.useState(false)\nconst ref = React.useRef(null)\n\n  return (\n<Modal isOpen={showModal || showModalProp} onClose={() => {\n  setShowModal(false);\n}} size={\"full\"} finalFocusRef={ref}>\n      <ModalBackdrop />\n      <ModalContent>\n        <ModalHeader>\n          <Heading maxWidth=\"80%\">Engage with Modals</Heading>\n          <ModalCloseButton>\n            <Icon as={CloseIcon} />\n          </ModalCloseButton>\n        </ModalHeader>\n        <ModalBody>\n          <Text fontSize=\"\\$sm\">\n            Elevate user interactions with our versatile modals. Seamlessly\n            integrate notifications, forms, and media displays. Make an impact\n            effortlessly.\n          </Text>\n        </ModalBody>\n        <ModalFooter>\n          <Button variant=\"outline\" size=\"sm\" action=\"secondary\" mr=\"\\$3\" onPress={() => {\n        setShowModal(false);\n      }}>\n            <ButtonText>Cancel</ButtonText>\n          </Button>\n          <Button size=\"sm\" action=\"positive\" onPress={() => {\n        setShowModal(false);\n      }} sx={{\n        'bg': '\\$success700',\n        ':hover': {\n          bg: '\\$success800'\n        },\n        ':active': {\n          bg: '\\$success900'\n        },\n        '_dark': {\n          'bg': '\\$success600',\n          ':hover': {\n            bg: '\\$success700'\n          },\n          ':active': {\n            bg: '\\$success800'\n          }\n        }\n      }}>\n            <ButtonText>Explore</ButtonText>\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default ModalBasic-full;\n",
    "import React from 'react'\nimport {Center, Button, ButtonText, CloseIcon, Text, Icon, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, VStack, HStack, Heading} from '@gluestack-ui/themed'\n\nfunction MultipleModalsModal() {\nconst [showModal, setShowModal] = React.useState(false)\nconst [showModal2, setShowModal2] = React.useState(false)\n\n  return (\n<>\n      <Center>\n        <Button onPress={() => setShowModal(true)}>\n          <ButtonText>Button</ButtonText>\n        </Button>\n      </Center>\n\n      <Modal isOpen={showModal} onClose={() => {\n    setShowModal(false);\n  }} size={\"md\"}>\n        <ModalBackdrop />\n        <ModalContent>\n          <ModalHeader>\n            <Heading>Order</Heading>\n            <ModalCloseButton>\n              <Icon as={CloseIcon} />\n            </ModalCloseButton>\n          </ModalHeader>\n          <ModalBody>\n            <VStack space=\"sm\">\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Sub Total</Text>\n                <Text color=\"\\$blueGray400\">\\$298.77</Text>\n              </HStack>\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Tax</Text>\n                <Text color=\"\\$blueGray400\">\\$38.84</Text>\n              </HStack>\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Total Amount</Text>\n                <Text color=\"\\$green500\">\\$337.61</Text>\n              </HStack>\n            </VStack>\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"outline\" action=\"secondary\" onPress={() => {\n          setShowModal(false);\n        }} sx={{\n          mr: '\\$3'\n        }}>\n              <ButtonText>Cancel</ButtonText>\n            </Button>\n            <Button onPress={() => {\n          setShowModal2(true);\n        }}>\n              <ButtonText>Continue</ButtonText>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n\n      <Modal isOpen={showModal2} onClose={() => {\n    setShowModal2(false);\n  }}>\n        <ModalBackdrop />\n        <ModalContent {...props}>\n          <ModalHeader>\n            <Heading>Order</Heading>\n            <ModalCloseButton>\n              <Icon as={CloseIcon} />\n            </ModalCloseButton>\n          </ModalHeader>\n          <ModalBody>\n            <Center h={100}>\n              <Heading>Second Modal</Heading>\n            </Center>\n          </ModalBody>\n          <ModalFooter>\n            <Button onPress={() => {\n          setShowModal2(false);\n        }}>\n              <ButtonText>Cancel</ButtonText>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default MultipleModalsModal;\n",
    "import React from 'react'\nimport {Center, Button, ButtonText, CloseIcon, Text, Icon, Modal, ModalBackdrop, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, VStack, HStack, Heading} from '@gluestack-ui/themed'\n\nfunction MultipleModals-full() {\nconst [showModal, setShowModal] = React.useState(false)\nconst [showModal2, setShowModal2] = React.useState(false)\n\n  return (\n<>\n      <Center>\n        <Button onPress={() => setShowModal(true)}>\n          <ButtonText>Button</ButtonText>\n        </Button>\n      </Center>\n\n      <Modal isOpen={showModal} onClose={() => {\n    setShowModal(false);\n  }} size={\"full\"}>\n        <ModalBackdrop />\n        <ModalContent>\n          <ModalHeader>\n            <Heading>Order</Heading>\n            <ModalCloseButton>\n              <Icon as={CloseIcon} />\n            </ModalCloseButton>\n          </ModalHeader>\n          <ModalBody>\n            <VStack space=\"sm\">\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Sub Total</Text>\n                <Text color=\"\\$blueGray400\">\\$298.77</Text>\n              </HStack>\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Tax</Text>\n                <Text color=\"\\$blueGray400\">\\$38.84</Text>\n              </HStack>\n              <HStack alignItems=\"center\" justifyContent=\"space-between\">\n                <Text fontWeight=\"\\$medium\">Total Amount</Text>\n                <Text color=\"\\$green500\">\\$337.61</Text>\n              </HStack>\n            </VStack>\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"outline\" action=\"secondary\" onPress={() => {\n          setShowModal(false);\n        }} sx={{\n          mr: '\\$3'\n        }}>\n              <ButtonText>Cancel</ButtonText>\n            </Button>\n            <Button onPress={() => {\n          setShowModal2(true);\n        }}>\n              <ButtonText>Continue</ButtonText>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n\n      <Modal isOpen={showModal2} onClose={() => {\n    setShowModal2(false);\n  }}>\n        <ModalBackdrop />\n        <ModalContent {...props}>\n          <ModalHeader>\n            <Heading>Order</Heading>\n            <ModalCloseButton>\n              <Icon as={CloseIcon} />\n            </ModalCloseButton>\n          </ModalHeader>\n          <ModalBody>\n            <Center h={100}>\n              <Heading>Second Modal</Heading>\n            </Center>\n          </ModalBody>\n          <ModalFooter>\n            <Button onPress={() => {\n          setShowModal2(false);\n        }}>\n              <ButtonText>Cancel</ButtonText>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default MultipleModals-full;\n"
  ],
  "popover": [
    "import React from 'react'\nimport {useState} from 'react'\nimport {Text, Button, ButtonText, ButtonGroup, Popover, PopoverBackdrop, PopoverContent, PopoverHeader, PopoverBody, PopoverFooter, PopoverCloseButton, CloseIcon, Icon, Box, Center, Heading, Pressable, HStack, VStack, Avatar, AvatarFallbackText, CircleIcon, AddIcon} from '@gluestack-ui/themed'\nimport {PhoneIcon, Clock3Icon, MailIcon} from 'lucide-react-native'\n\nfunction PopoverBasic() {\n\n\n  return (\n<Center w={1200} h={800}>\n      <Popover size={size} offset={10} isOpen={showPopoverProp} placement={placement}\n  \n  trigger={triggerProps => {\n    return <Button {...triggerProps}>\n              <ButtonText>Popover</ButtonText>\n            </Button>;\n  }}>\n        <PopoverBackdrop />\n        <PopoverContent>\n          <PopoverHeader>\n            <Heading>Welcome!</Heading>\n            <PopoverCloseButton>\n              <Icon as={CloseIcon} />\n            </PopoverCloseButton>\n          </PopoverHeader>\n          <PopoverBody>\n            <Text>\n              Join the product tour and start creating your own checklist. Are\n              you ready to jump in?\n            </Text>\n          </PopoverBody>\n          <PopoverFooter>\n            <Text size=\"xs\" flex={1}>\n              Step 2 of 3\n            </Text>\n            {}\n            <ButtonGroup space=\"md\">\n              <Button variant=\"outline\" action=\"secondary\">\n                <ButtonText>Back</ButtonText>\n              </Button>\n              <Button>\n                <ButtonText>Next</ButtonText>\n              </Button>\n            </ButtonGroup>\n          </PopoverFooter>\n        </PopoverContent>\n      </Popover>\n    </Center>\n  );\n}\n\nexport default PopoverBasic;\n"
  ],
  "tooltip": [
    "import React from 'react'\nimport {Center, Button, ButtonText, Tooltip, TooltipContent, TooltipText, Text, Avatar, AvatarGroup, AvatarFallbackText, Box, Heading, VStack, HStack, Icon} from '@gluestack-ui/themed'\nimport {Edit, Command} from 'lucide-react-native'\n\nfunction TooltipBasic() {\n\n\n  return (\n<Tooltip offset={10} placement={placement} isOpen={showTooltipProp}\n\ntrigger={(triggerProps: any) => {\n  return <Button {...triggerProps}>\n            <ButtonText>More</ButtonText>\n          </Button>;\n}}>\n      <TooltipContent>\n        <TooltipText>{text}</TooltipText>\n      </TooltipContent>\n    </Tooltip>\n  );\n}\n\nexport default TooltipBasic;\n"
  ],
  "provider": [
    "import React from 'react'\nimport {Button, ButtonText, GluestackUIProvider, Pressable, Text, Box} from '@gluestack-ui/themed'\nimport {config} from '@gluestack-ui/config'\n\nfunction ProviderStory() {\nconst [colorMode, setColorMode] = React.useState<'light' | 'dark' | undefined>('dark')\nconst toggleColorMode = async () => {\n  colorMode === 'light' ? setColorMode('dark') : setColorMode('light');\n}\n\n  return (\n\n  );\n}\n\nexport default ProviderStory;\n"
  ],
  "heading": [
    "import React from 'react'\nimport {Center, Heading} from '@gluestack-ui/themed'\n\nfunction HeadingBasicHeading() {\n\n\n  return (\n<Heading size={\"2xl\"}>{text}</Heading>\n  );\n}\n\nexport default HeadingBasicHeading;\n"
  ]
}
